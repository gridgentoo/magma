#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin

from .property_fragment import PropertyFragment, QUERY as PropertyFragmentQuery
from .edit_link_input import EditLinkInput


QUERY: List[str] = PropertyFragmentQuery + ["""
mutation EditLinkMutation($input: EditLinkInput!) {
  editLink(input: $input) {
    id
    properties {
      ...PropertyFragment
    }
    services {
      id
    }
  }
}

"""]

@dataclass
class EditLinkMutation(DataClassJsonMixin):
    @dataclass
    class EditLinkMutationData(DataClassJsonMixin):
        @dataclass
        class Link(DataClassJsonMixin):
            @dataclass
            class Property(PropertyFragment):
                pass

            @dataclass
            class Service(DataClassJsonMixin):
                id: str

            id: str
            properties: List[Property]
            services: List[Service]

        editLink: Link

    data: EditLinkMutationData

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient, input: EditLinkInput) -> EditLinkMutationData:
        # fmt: off
        variables = {"input": input}
        response_text = client.call(''.join(set(QUERY)), variables=variables)
        return cls.from_json(response_text).data
