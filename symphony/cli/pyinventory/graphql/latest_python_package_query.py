#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin


QUERY: List[str] = ["""
query LatestPythonPackageQuery {
  latestPythonPackage {
    lastPythonPackage {
      version
    }
    lastBreakingPythonPackage {
      version
    }
  }
}

"""]

@dataclass
class LatestPythonPackageQuery(DataClassJsonMixin):
    @dataclass
    class LatestPythonPackageQueryData(DataClassJsonMixin):
        @dataclass
        class LatestPythonPackageResult(DataClassJsonMixin):
            @dataclass
            class PythonPackage(DataClassJsonMixin):
                version: str

            lastPythonPackage: Optional[PythonPackage]
            lastBreakingPythonPackage: Optional[PythonPackage]

        latestPythonPackage: Optional[LatestPythonPackageResult]

    data: LatestPythonPackageQueryData

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient) -> LatestPythonPackageQueryData:
        # fmt: off
        variables = {}
        response_text = client.call(''.join(set(QUERY)), variables=variables)
        return cls.from_json(response_text).data
