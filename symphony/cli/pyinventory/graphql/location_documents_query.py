#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin


QUERY: List[str] = ["""
query LocationDocumentsQuery($id: ID!) {
  location: node(id: $id) {
    ... on Location {
      files {
        id
        fileName
        category
      }
      images {
        id
        fileName
        category
      }
    }
  }
}

"""]

@dataclass
class LocationDocumentsQuery(DataClassJsonMixin):
    @dataclass
    class LocationDocumentsQueryData(DataClassJsonMixin):
        @dataclass
        class Node(DataClassJsonMixin):
            @dataclass
            class File(DataClassJsonMixin):
                id: str
                fileName: str
                category: Optional[str]

            files: List[File]
            images: List[File]

        location: Optional[Node]

    data: LocationDocumentsQueryData

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient, id: str) -> LocationDocumentsQueryData:
        # fmt: off
        variables = {"id": id}
        response_text = client.call(''.join(set(QUERY)), variables=variables)
        return cls.from_json(response_text).data
