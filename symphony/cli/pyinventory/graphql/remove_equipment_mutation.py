#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin


QUERY: List[str] = ["""
mutation RemoveEquipmentMutation($id: ID!, $workOrderId: ID) {
  removeEquipment(id: $id, workOrderId: $workOrderId)
}

"""]

@dataclass
class RemoveEquipmentMutation(DataClassJsonMixin):
    @dataclass
    class RemoveEquipmentMutationData(DataClassJsonMixin):
        removeEquipment: str

    data: RemoveEquipmentMutationData

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient, id: str, workOrderId: Optional[str] = None) -> RemoveEquipmentMutationData:
        # fmt: off
        variables = {"id": id, "workOrderId": workOrderId}
        response_text = client.call(''.join(set(QUERY)), variables=variables)
        return cls.from_json(response_text).data
