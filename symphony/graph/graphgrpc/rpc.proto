// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

syntax = "proto3";

package graph;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "fbc/symphony/graph/graphgrpc";

service TenantService {
    rpc Create(google.protobuf.StringValue) returns (Tenant);
    rpc List(google.protobuf.Empty) returns (TenantList);
    rpc Get(google.protobuf.StringValue) returns (Tenant);
    rpc Truncate(google.protobuf.StringValue) returns (google.protobuf.Empty);
    rpc Delete(google.protobuf.StringValue) returns (google.protobuf.Empty);
}

message Tenant {
    string id = 1;
    string name = 2;
}

message TenantList {
    repeated Tenant tenants = 1;
}

message UserInput {
    string tenant = 1;
    string id = 2;
}

message AddUserInput {
    string tenant = 1;
    string id = 2;
    bool isOwner = 3;
}

message User {
    int64 id = 1;
}

service UserService {
    rpc Create(AddUserInput) returns (User);
    rpc Delete(UserInput) returns (google.protobuf.Empty);
}

service ActionsAlertService {
    rpc Trigger(AlertPayload) returns (ExecutionResult);
}

message AlertPayload {
    string tenantID = 1;
    string alertname = 2;
    string networkID = 3;
    map<string, string> labels = 4;
}

message ExecutionResult {
    repeated string successes = 1;
    repeated executionError errors = 2;
}

message executionError {
   string id = 1;
   string err = 2;
}
