{{/*
Copyright 2019-present Facebook Inc. All rights reserved.
This source code is licensed under the Apache 2.0 license found
in the LICENSE file in the root directory of this source tree.
*/}}

{{ define "pagination_test" }}
{{ template "header" $ }}

import (
    "github.com/stretchr/testify/assert"
)

func TestCursorEncoding(t *testing.T) {
    t.Run("EncodeDecode", func(t *testing.T) {
        var buf bytes.Buffer
        c := Cursor{ID: {{ if $.IDType.Numeric }}42{{ else }}"42"{{ end }} }
        c.MarshalGQL(&buf)
        var uc Cursor
        s, err := strconv.Unquote(buf.String())
        assert.NoError(t, err)
        err = uc.UnmarshalGQL(s)
        assert.NoError(t, err)
        assert.Equal(t, c, uc)
    })
    t.Run("DecodeBadInput", func(t *testing.T) {
        inputs := []interface{}{
            0xbadbeef,
            "cursor@bad123",
            "Y3Vyc29yQGJhZDEyMw==",
        }
        for _, input := range inputs {
            var c Cursor
            err := c.UnmarshalGQL(input)
            assert.Error(t, err)
        }
    })
}
{{ end }}
