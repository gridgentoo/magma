// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CambiumChannel A cambium channel definition
// swagger:model cambium_channel
type CambiumChannel struct {

	// client id
	// Min Length: 1
	ClientID string `json:"client_id,omitempty"`

	// client ip
	// Min Length: 1
	ClientIP string `json:"client_ip,omitempty"`

	// client mac
	// Min Length: 1
	ClientMac string `json:"client_mac,omitempty"`

	// client secret
	// Min Length: 1
	ClientSecret string `json:"client_secret,omitempty"`
}

// Validate validates this cambium channel
func (m *CambiumChannel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientMac(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CambiumChannel) validateClientID(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientID) { // not required
		return nil
	}

	if err := validate.MinLength("client_id", "body", string(m.ClientID), 1); err != nil {
		return err
	}

	return nil
}

func (m *CambiumChannel) validateClientIP(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientIP) { // not required
		return nil
	}

	if err := validate.MinLength("client_ip", "body", string(m.ClientIP), 1); err != nil {
		return err
	}

	return nil
}

func (m *CambiumChannel) validateClientMac(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientMac) { // not required
		return nil
	}

	if err := validate.MinLength("client_mac", "body", string(m.ClientMac), 1); err != nil {
		return err
	}

	return nil
}

func (m *CambiumChannel) validateClientSecret(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientSecret) { // not required
		return nil
	}

	if err := validate.MinLength("client_secret", "body", string(m.ClientSecret), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CambiumChannel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CambiumChannel) UnmarshalBinary(b []byte) error {
	var res CambiumChannel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
