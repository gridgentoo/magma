/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// GatewayFegConfigs gateway feg configs
// swagger:model gateway_feg_configs
type GatewayFegConfigs struct {
	NetworkFederationConfigs
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GatewayFegConfigs) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 NetworkFederationConfigs
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.NetworkFederationConfigs = aO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GatewayFegConfigs) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.NetworkFederationConfigs)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this gateway feg configs
func (m *GatewayFegConfigs) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GatewayFegConfigs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GatewayFegConfigs) UnmarshalBinary(b []byte) error {
	var res GatewayFegConfigs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
