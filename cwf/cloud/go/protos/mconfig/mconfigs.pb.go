// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cwf/protos/mconfig/mconfigs.proto

package mconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//-----------------------------------------------------------------------------
// Health configs
//-----------------------------------------------------------------------------
type CwfGatewayHealthConfig struct {
	// cpu utilization threshold
	CpuUtilThresholdPct float32 `protobuf:"fixed32,1,opt,name=cpu_util_threshold_pct,json=cpuUtilThresholdPct,proto3" json:"cpu_util_threshold_pct,omitempty"`
	// mem utilization threshold
	MemUtilThresholdPct float32 `protobuf:"fixed32,2,opt,name=mem_util_threshold_pct,json=memUtilThresholdPct,proto3" json:"mem_util_threshold_pct,omitempty"`
	// interval between probes
	GreProbeInterval uint32 `protobuf:"varint,3,opt,name=gre_probe_interval,json=greProbeInterval,proto3" json:"gre_probe_interval,omitempty"`
	// packets sent for each icmp probe
	IcmpProbePktCount uint32 `protobuf:"varint,4,opt,name=icmp_probe_pkt_count,json=icmpProbePktCount,proto3" json:"icmp_probe_pkt_count,omitempty"`
	// gre peers to probe
	GrePeers             []*CwfGatewayHealthConfigGrePeer `protobuf:"bytes,5,rep,name=gre_peers,json=grePeers,proto3" json:"gre_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CwfGatewayHealthConfig) Reset()         { *m = CwfGatewayHealthConfig{} }
func (m *CwfGatewayHealthConfig) String() string { return proto.CompactTextString(m) }
func (*CwfGatewayHealthConfig) ProtoMessage()    {}
func (*CwfGatewayHealthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab79e679bf56b47d, []int{0}
}

func (m *CwfGatewayHealthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CwfGatewayHealthConfig.Unmarshal(m, b)
}
func (m *CwfGatewayHealthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CwfGatewayHealthConfig.Marshal(b, m, deterministic)
}
func (m *CwfGatewayHealthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CwfGatewayHealthConfig.Merge(m, src)
}
func (m *CwfGatewayHealthConfig) XXX_Size() int {
	return xxx_messageInfo_CwfGatewayHealthConfig.Size(m)
}
func (m *CwfGatewayHealthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CwfGatewayHealthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CwfGatewayHealthConfig proto.InternalMessageInfo

func (m *CwfGatewayHealthConfig) GetCpuUtilThresholdPct() float32 {
	if m != nil {
		return m.CpuUtilThresholdPct
	}
	return 0
}

func (m *CwfGatewayHealthConfig) GetMemUtilThresholdPct() float32 {
	if m != nil {
		return m.MemUtilThresholdPct
	}
	return 0
}

func (m *CwfGatewayHealthConfig) GetGreProbeInterval() uint32 {
	if m != nil {
		return m.GreProbeInterval
	}
	return 0
}

func (m *CwfGatewayHealthConfig) GetIcmpProbePktCount() uint32 {
	if m != nil {
		return m.IcmpProbePktCount
	}
	return 0
}

func (m *CwfGatewayHealthConfig) GetGrePeers() []*CwfGatewayHealthConfigGrePeer {
	if m != nil {
		return m.GrePeers
	}
	return nil
}

type CwfGatewayHealthConfigGrePeer struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CwfGatewayHealthConfigGrePeer) Reset()         { *m = CwfGatewayHealthConfigGrePeer{} }
func (m *CwfGatewayHealthConfigGrePeer) String() string { return proto.CompactTextString(m) }
func (*CwfGatewayHealthConfigGrePeer) ProtoMessage()    {}
func (*CwfGatewayHealthConfigGrePeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab79e679bf56b47d, []int{0, 0}
}

func (m *CwfGatewayHealthConfigGrePeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CwfGatewayHealthConfigGrePeer.Unmarshal(m, b)
}
func (m *CwfGatewayHealthConfigGrePeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CwfGatewayHealthConfigGrePeer.Marshal(b, m, deterministic)
}
func (m *CwfGatewayHealthConfigGrePeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CwfGatewayHealthConfigGrePeer.Merge(m, src)
}
func (m *CwfGatewayHealthConfigGrePeer) XXX_Size() int {
	return xxx_messageInfo_CwfGatewayHealthConfigGrePeer.Size(m)
}
func (m *CwfGatewayHealthConfigGrePeer) XXX_DiscardUnknown() {
	xxx_messageInfo_CwfGatewayHealthConfigGrePeer.DiscardUnknown(m)
}

var xxx_messageInfo_CwfGatewayHealthConfigGrePeer proto.InternalMessageInfo

func (m *CwfGatewayHealthConfigGrePeer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func init() {
	proto.RegisterType((*CwfGatewayHealthConfig)(nil), "magma.mconfig.CwfGatewayHealthConfig")
	proto.RegisterType((*CwfGatewayHealthConfigGrePeer)(nil), "magma.mconfig.CwfGatewayHealthConfig.grePeer")
}

func init() { proto.RegisterFile("cwf/protos/mconfig/mconfigs.proto", fileDescriptor_ab79e679bf56b47d) }

var fileDescriptor_ab79e679bf56b47d = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xd5, 0x94, 0x7f, 0x35, 0x2a, 0x02, 0x83, 0xaa, 0xc0, 0xd4, 0xc2, 0xd2, 0x01, 0x12,
	0x89, 0xbe, 0x01, 0x1d, 0xf8, 0x33, 0x45, 0x11, 0x2c, 0x2c, 0x96, 0xeb, 0x5e, 0x12, 0xab, 0x76,
	0x6c, 0x39, 0x17, 0x22, 0xde, 0x90, 0xc7, 0x42, 0x36, 0xe9, 0x00, 0x74, 0xf2, 0xf9, 0xfb, 0xee,
	0x77, 0x27, 0x7d, 0x47, 0x66, 0xa2, 0x2b, 0x52, 0xeb, 0x0c, 0x9a, 0x26, 0xd5, 0xc2, 0xd4, 0x85,
	0x2c, 0xb7, 0x6f, 0x93, 0x04, 0x9d, 0x8e, 0x35, 0x2f, 0x35, 0x4f, 0x7a, 0xf5, 0xfa, 0x2b, 0x22,
	0x93, 0x65, 0x57, 0x3c, 0x72, 0x84, 0x8e, 0x7f, 0x3e, 0x01, 0x57, 0x58, 0x2d, 0x83, 0x45, 0x17,
	0x64, 0x22, 0x6c, 0xcb, 0x5a, 0x94, 0x8a, 0x61, 0xe5, 0xa0, 0xa9, 0x8c, 0x5a, 0x33, 0x2b, 0x30,
	0x1e, 0x4c, 0x07, 0xf3, 0x28, 0x3f, 0x17, 0xb6, 0x7d, 0x43, 0xa9, 0x5e, 0xb7, 0x5e, 0x26, 0xd0,
	0x43, 0x1a, 0xf4, 0x2e, 0x28, 0xfa, 0x81, 0x34, 0xe8, 0x7f, 0xd0, 0x2d, 0xa1, 0xa5, 0x03, 0x66,
	0x9d, 0x59, 0x01, 0x93, 0x35, 0x82, 0xfb, 0xe0, 0x2a, 0x1e, 0x4e, 0x07, 0xf3, 0x71, 0x7e, 0x5a,
	0x3a, 0xc8, 0xbc, 0xf1, 0xdc, 0xeb, 0x34, 0x25, 0x17, 0x52, 0x68, 0xdb, 0xb7, 0xdb, 0x0d, 0x32,
	0x61, 0xda, 0x1a, 0xe3, 0xbd, 0xd0, 0x7f, 0xe6, 0xbd, 0x00, 0x64, 0x1b, 0x5c, 0x7a, 0x83, 0xbe,
	0x90, 0x51, 0x18, 0x0f, 0xe0, 0x9a, 0x78, 0x7f, 0x3a, 0x9c, 0x1f, 0xdf, 0xdf, 0x25, 0xbf, 0x62,
	0x48, 0x76, 0x47, 0x90, 0xf8, 0xdd, 0x00, 0x2e, 0x3f, 0xea, 0x8b, 0xe6, 0xea, 0x92, 0x1c, 0xf6,
	0x35, 0x3d, 0x21, 0x91, 0xb4, 0x21, 0x8b, 0x51, 0x1e, 0x49, 0xfb, 0x70, 0xf3, 0x3e, 0x0b, 0x43,
	0x53, 0x7f, 0x04, 0xa1, 0x4c, 0xbb, 0x4e, 0x4b, 0xf3, 0xe7, 0x1a, 0xab, 0x83, 0xf0, 0x5f, 0x7c,
	0x07, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x0f, 0xf4, 0x27, 0xaa, 0x01, 0x00, 0x00,
}
