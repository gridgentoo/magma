// Copyright (c) 2016-present, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree. An additional grant
// of patent rights can be found in the PATENTS file in the same directory.

syntax = "proto3";

import "orc8r/protos/common.proto";
import "google/protobuf/wrappers.proto";

package magma.cwf;
option go_package = "magma/cwf/cloud/go/protos";

// --------------------------------------------------------------------------
// UE config
// --------------------------------------------------------------------------
message UEConfig {
    // Unique identifier for the UE.
    string imsi = 1;

    // Authentication key (k).
    bytes auth_key = 2;

    // Operator configuration field (Op) signed with authentication key (k).
    bytes auth_opc = 3;

    // Sequence Number (SEQ).
    uint64 seq = 4;
}

message AuthenticateRequest {
    string imsi = 1;
}

message AuthenticateResponse {
    bytes radiusPacket = 1;
}

message DisconnectRequest {
    string imsi = 1;
}

message DisconnectResponse {
    bytes radiusPacket = 1;
}

message GenTrafficRequest {
    string imsi = 1;
    google.protobuf.StringValue volume = 2;
    google.protobuf.StringValue bitrate = 3;
    uint64 timeInSecs = 4;    
    uint64 reportingIntervalInSecs = 5;    
    bool reverseMode = 6;
}

message GenTrafficResponse {
    bytes output = 1;
}

// --------------------------------------------------------------------------
// UE Simulator service definition
// --------------------------------------------------------------------------
service UESim {
    // Adds a new UE to the store.
    //
    rpc AddUE (UEConfig) returns (orc8r.Void) {}

    // Triggers an authentication for the UE with the specified imsi.
    //
    rpc Authenticate (AuthenticateRequest) returns (AuthenticateResponse) {}

    rpc Disconnect (DisconnectRequest) returns (DisconnectResponse) {}

    // Triggers iperf traffic towards the CWAG
    rpc GenTraffic(GenTrafficRequest) returns (GenTrafficResponse) {}
}
