// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/session_manager.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

///////////////////
// LocalSessionManager service
///////////////////
type RATType int32

const (
	RATType_TGPP_LTE  RATType = 0
	RATType_TGPP_WLAN RATType = 1
)

var RATType_name = map[int32]string{
	0: "TGPP_LTE",
	1: "TGPP_WLAN",
}

var RATType_value = map[string]int32{
	"TGPP_LTE":  0,
	"TGPP_WLAN": 1,
}

func (x RATType) String() string {
	return proto.EnumName(RATType_name, int32(x))
}

func (RATType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{0}
}

type EventTrigger int32

const (
	EventTrigger_SGSN_CHANGE        EventTrigger = 0
	EventTrigger_QOS_CHANGE         EventTrigger = 1
	EventTrigger_RAT_CHANGE         EventTrigger = 2
	EventTrigger_TFT_CHANGE         EventTrigger = 3
	EventTrigger_PLMN_CHANGE        EventTrigger = 4
	EventTrigger_LOSS_OF_BEARER     EventTrigger = 5
	EventTrigger_RECOVERY_OF_BEARER EventTrigger = 6
	EventTrigger_IP_CAN_CHANGE      EventTrigger = 7
	// 8, 9, 10 are unused
	EventTrigger_QOS_CHANGE_EXCEEDING_AUTHORIZATION EventTrigger = 11
	EventTrigger_RAI_CHANGE                         EventTrigger = 12
	EventTrigger_USER_LOCATION_CHANGE               EventTrigger = 13
	EventTrigger_NO_EVENT_TRIGGERS                  EventTrigger = 14
	EventTrigger_OUT_OF_CREDIT                      EventTrigger = 15
	EventTrigger_REALLOCATION_OF_CREDIT             EventTrigger = 16
	EventTrigger_REVALIDATION_TIMEOUT               EventTrigger = 17
	EventTrigger_UE_IP_ADDRESS_ALLOCATE             EventTrigger = 18
	EventTrigger_UE_IP_ADDRESS_RELEASE              EventTrigger = 19
	EventTrigger_DEFAULT_EPS_BEARER_QOS_CHANGE      EventTrigger = 20
	EventTrigger_AN_GW_CHANGE                       EventTrigger = 21
	EventTrigger_SUCCESSFUL_RESOURCE_ALLOCATION     EventTrigger = 22
	EventTrigger_RESOURCE_MODIFICATION_REQUEST      EventTrigger = 23
	EventTrigger_PGW_TRACE_CONTROL                  EventTrigger = 24
	EventTrigger_UE_TIME_ZONE_CHANGE                EventTrigger = 25
	EventTrigger_TAI_CHANGE                         EventTrigger = 26
	EventTrigger_ECGI_CHANGE                        EventTrigger = 27
	EventTrigger_CHARGING_CORRELATION_EXCHANGE      EventTrigger = 28
	EventTrigger_APN_AMBR_MODIFICATION_FAILURE      EventTrigger = 29
	EventTrigger_USER_CSG_INFORMATION_CHANGE        EventTrigger = 30
	// 31, 32 are unused
	EventTrigger_USAGE_REPORT                                    EventTrigger = 33
	EventTrigger_DEFAULT_EPS_BEARER_QOS_MODIFICATION_FAILURE     EventTrigger = 34
	EventTrigger_USER_CSG_HYBRID_SUBSCRIBED_INFORMATION_CHANGE   EventTrigger = 35
	EventTrigger_USER_CSG_HYBRID_UNSUBSCRIBED_INFORMATION_CHANGE EventTrigger = 36
	EventTrigger_ROUTING_RULE_CHANGE                             EventTrigger = 37
	// 38 is unused
	EventTrigger_APPLICATION_START EventTrigger = 39
	EventTrigger_APPLICATION_STOP  EventTrigger = 40
	// 41 is unused
	EventTrigger_CS_TO_PS_HANDOVER                                       EventTrigger = 42
	EventTrigger_UE_LOCAL_IP_ADDRESS_CHANGE                              EventTrigger = 43
	EventTrigger_HENB_LOCAL_IP_ADDRESS_CHANGE                            EventTrigger = 44
	EventTrigger_ACCESS_NETWORK_INFO_REPORT                              EventTrigger = 45
	EventTrigger_CREDIT_MANAGEMENT_SESSION_FAILURE                       EventTrigger = 46
	EventTrigger_DEFAULT_QOS_CHANGE                                      EventTrigger = 47
	EventTrigger_CHANGE_OF_UE_PRESENCE_IN_PRESENCE_REPORTING_AREA_REPORT EventTrigger = 48
	// UNSUPPORTED is not defined in 3GPP
	EventTrigger_UNSUPPORTED EventTrigger = 49
)

var EventTrigger_name = map[int32]string{
	0:  "SGSN_CHANGE",
	1:  "QOS_CHANGE",
	2:  "RAT_CHANGE",
	3:  "TFT_CHANGE",
	4:  "PLMN_CHANGE",
	5:  "LOSS_OF_BEARER",
	6:  "RECOVERY_OF_BEARER",
	7:  "IP_CAN_CHANGE",
	11: "QOS_CHANGE_EXCEEDING_AUTHORIZATION",
	12: "RAI_CHANGE",
	13: "USER_LOCATION_CHANGE",
	14: "NO_EVENT_TRIGGERS",
	15: "OUT_OF_CREDIT",
	16: "REALLOCATION_OF_CREDIT",
	17: "REVALIDATION_TIMEOUT",
	18: "UE_IP_ADDRESS_ALLOCATE",
	19: "UE_IP_ADDRESS_RELEASE",
	20: "DEFAULT_EPS_BEARER_QOS_CHANGE",
	21: "AN_GW_CHANGE",
	22: "SUCCESSFUL_RESOURCE_ALLOCATION",
	23: "RESOURCE_MODIFICATION_REQUEST",
	24: "PGW_TRACE_CONTROL",
	25: "UE_TIME_ZONE_CHANGE",
	26: "TAI_CHANGE",
	27: "ECGI_CHANGE",
	28: "CHARGING_CORRELATION_EXCHANGE",
	29: "APN_AMBR_MODIFICATION_FAILURE",
	30: "USER_CSG_INFORMATION_CHANGE",
	33: "USAGE_REPORT",
	34: "DEFAULT_EPS_BEARER_QOS_MODIFICATION_FAILURE",
	35: "USER_CSG_HYBRID_SUBSCRIBED_INFORMATION_CHANGE",
	36: "USER_CSG_HYBRID_UNSUBSCRIBED_INFORMATION_CHANGE",
	37: "ROUTING_RULE_CHANGE",
	39: "APPLICATION_START",
	40: "APPLICATION_STOP",
	42: "CS_TO_PS_HANDOVER",
	43: "UE_LOCAL_IP_ADDRESS_CHANGE",
	44: "HENB_LOCAL_IP_ADDRESS_CHANGE",
	45: "ACCESS_NETWORK_INFO_REPORT",
	46: "CREDIT_MANAGEMENT_SESSION_FAILURE",
	47: "DEFAULT_QOS_CHANGE",
	48: "CHANGE_OF_UE_PRESENCE_IN_PRESENCE_REPORTING_AREA_REPORT",
	49: "UNSUPPORTED",
}

var EventTrigger_value = map[string]int32{
	"SGSN_CHANGE":                                     0,
	"QOS_CHANGE":                                      1,
	"RAT_CHANGE":                                      2,
	"TFT_CHANGE":                                      3,
	"PLMN_CHANGE":                                     4,
	"LOSS_OF_BEARER":                                  5,
	"RECOVERY_OF_BEARER":                              6,
	"IP_CAN_CHANGE":                                   7,
	"QOS_CHANGE_EXCEEDING_AUTHORIZATION":              11,
	"RAI_CHANGE":                                      12,
	"USER_LOCATION_CHANGE":                            13,
	"NO_EVENT_TRIGGERS":                               14,
	"OUT_OF_CREDIT":                                   15,
	"REALLOCATION_OF_CREDIT":                          16,
	"REVALIDATION_TIMEOUT":                            17,
	"UE_IP_ADDRESS_ALLOCATE":                          18,
	"UE_IP_ADDRESS_RELEASE":                           19,
	"DEFAULT_EPS_BEARER_QOS_CHANGE":                   20,
	"AN_GW_CHANGE":                                    21,
	"SUCCESSFUL_RESOURCE_ALLOCATION":                  22,
	"RESOURCE_MODIFICATION_REQUEST":                   23,
	"PGW_TRACE_CONTROL":                               24,
	"UE_TIME_ZONE_CHANGE":                             25,
	"TAI_CHANGE":                                      26,
	"ECGI_CHANGE":                                     27,
	"CHARGING_CORRELATION_EXCHANGE":                   28,
	"APN_AMBR_MODIFICATION_FAILURE":                   29,
	"USER_CSG_INFORMATION_CHANGE":                     30,
	"USAGE_REPORT":                                    33,
	"DEFAULT_EPS_BEARER_QOS_MODIFICATION_FAILURE":     34,
	"USER_CSG_HYBRID_SUBSCRIBED_INFORMATION_CHANGE":   35,
	"USER_CSG_HYBRID_UNSUBSCRIBED_INFORMATION_CHANGE": 36,
	"ROUTING_RULE_CHANGE":                             37,
	"APPLICATION_START":                               39,
	"APPLICATION_STOP":                                40,
	"CS_TO_PS_HANDOVER":                               42,
	"UE_LOCAL_IP_ADDRESS_CHANGE":                      43,
	"HENB_LOCAL_IP_ADDRESS_CHANGE":                    44,
	"ACCESS_NETWORK_INFO_REPORT":                      45,
	"CREDIT_MANAGEMENT_SESSION_FAILURE":               46,
	"DEFAULT_QOS_CHANGE":                              47,
	"CHANGE_OF_UE_PRESENCE_IN_PRESENCE_REPORTING_AREA_REPORT": 48,
	"UNSUPPORTED": 49,
}

func (x EventTrigger) String() string {
	return proto.EnumName(EventTrigger_name, int32(x))
}

func (EventTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{1}
}

type QCI int32

const (
	QCI_QCI_0  QCI = 0
	QCI_QCI_1  QCI = 1
	QCI_QCI_2  QCI = 2
	QCI_QCI_3  QCI = 3
	QCI_QCI_4  QCI = 4
	QCI_QCI_5  QCI = 5
	QCI_QCI_6  QCI = 6
	QCI_QCI_7  QCI = 7
	QCI_QCI_8  QCI = 8
	QCI_QCI_9  QCI = 9
	QCI_QCI_65 QCI = 65
	QCI_QCI_66 QCI = 66
	QCI_QCI_67 QCI = 67
	QCI_QCI_70 QCI = 70
	QCI_QCI_75 QCI = 75
	QCI_QCI_79 QCI = 79
)

var QCI_name = map[int32]string{
	0:  "QCI_0",
	1:  "QCI_1",
	2:  "QCI_2",
	3:  "QCI_3",
	4:  "QCI_4",
	5:  "QCI_5",
	6:  "QCI_6",
	7:  "QCI_7",
	8:  "QCI_8",
	9:  "QCI_9",
	65: "QCI_65",
	66: "QCI_66",
	67: "QCI_67",
	70: "QCI_70",
	75: "QCI_75",
	79: "QCI_79",
}

var QCI_value = map[string]int32{
	"QCI_0":  0,
	"QCI_1":  1,
	"QCI_2":  2,
	"QCI_3":  3,
	"QCI_4":  4,
	"QCI_5":  5,
	"QCI_6":  6,
	"QCI_7":  7,
	"QCI_8":  8,
	"QCI_9":  9,
	"QCI_65": 65,
	"QCI_66": 66,
	"QCI_67": 67,
	"QCI_70": 70,
	"QCI_75": 75,
	"QCI_79": 79,
}

func (x QCI) String() string {
	return proto.EnumName(QCI_name, int32(x))
}

func (QCI) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{2}
}

type ReAuthResult int32

const (
	ReAuthResult_UPDATE_INITIATED  ReAuthResult = 0
	ReAuthResult_UPDATE_NOT_NEEDED ReAuthResult = 1
	ReAuthResult_SESSION_NOT_FOUND ReAuthResult = 2
	ReAuthResult_OTHER_FAILURE     ReAuthResult = 3
)

var ReAuthResult_name = map[int32]string{
	0: "UPDATE_INITIATED",
	1: "UPDATE_NOT_NEEDED",
	2: "SESSION_NOT_FOUND",
	3: "OTHER_FAILURE",
}

var ReAuthResult_value = map[string]int32{
	"UPDATE_INITIATED":  0,
	"UPDATE_NOT_NEEDED": 1,
	"SESSION_NOT_FOUND": 2,
	"OTHER_FAILURE":     3,
}

func (x ReAuthResult) String() string {
	return proto.EnumName(ReAuthResult_name, int32(x))
}

func (ReAuthResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{3}
}

type MonitoringLevel int32

const (
	MonitoringLevel_SESSION_LEVEL  MonitoringLevel = 0
	MonitoringLevel_PCC_RULE_LEVEL MonitoringLevel = 1
)

var MonitoringLevel_name = map[int32]string{
	0: "SESSION_LEVEL",
	1: "PCC_RULE_LEVEL",
}

var MonitoringLevel_value = map[string]int32{
	"SESSION_LEVEL":  0,
	"PCC_RULE_LEVEL": 1,
}

func (x MonitoringLevel) String() string {
	return proto.EnumName(MonitoringLevel_name, int32(x))
}

func (MonitoringLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{4}
}

type ChargingReAuthRequest_Type int32

const (
	ChargingReAuthRequest_SINGLE_SERVICE ChargingReAuthRequest_Type = 0
	ChargingReAuthRequest_ENTIRE_SESSION ChargingReAuthRequest_Type = 1
)

var ChargingReAuthRequest_Type_name = map[int32]string{
	0: "SINGLE_SERVICE",
	1: "ENTIRE_SESSION",
}

var ChargingReAuthRequest_Type_value = map[string]int32{
	"SINGLE_SERVICE": 0,
	"ENTIRE_SESSION": 1,
}

func (x ChargingReAuthRequest_Type) String() string {
	return proto.EnumName(ChargingReAuthRequest_Type_name, int32(x))
}

func (ChargingReAuthRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{6, 0}
}

type ChargingReAuthAnswer_Result int32

const (
	ChargingReAuthAnswer_UPDATE_INITIATED  ChargingReAuthAnswer_Result = 0
	ChargingReAuthAnswer_UPDATE_NOT_NEEDED ChargingReAuthAnswer_Result = 1
	ChargingReAuthAnswer_SESSION_NOT_FOUND ChargingReAuthAnswer_Result = 2
	ChargingReAuthAnswer_OTHER_FAILURE     ChargingReAuthAnswer_Result = 3
)

var ChargingReAuthAnswer_Result_name = map[int32]string{
	0: "UPDATE_INITIATED",
	1: "UPDATE_NOT_NEEDED",
	2: "SESSION_NOT_FOUND",
	3: "OTHER_FAILURE",
}

var ChargingReAuthAnswer_Result_value = map[string]int32{
	"UPDATE_INITIATED":  0,
	"UPDATE_NOT_NEEDED": 1,
	"SESSION_NOT_FOUND": 2,
	"OTHER_FAILURE":     3,
}

func (x ChargingReAuthAnswer_Result) String() string {
	return proto.EnumName(ChargingReAuthAnswer_Result_name, int32(x))
}

func (ChargingReAuthAnswer_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{7, 0}
}

type PolicyReAuthAnswer_FailureCode int32

const (
	// We want to map these directly to the diameter return codes, so use a
	// placeholder for 0
	PolicyReAuthAnswer_UNUSED                             PolicyReAuthAnswer_FailureCode = 0
	PolicyReAuthAnswer_UNKNOWN_RULE_NAME                  PolicyReAuthAnswer_FailureCode = 1
	PolicyReAuthAnswer_RATING_GROUP_ERROR                 PolicyReAuthAnswer_FailureCode = 2
	PolicyReAuthAnswer_SERVICE_IDENTIFIER_ERROR           PolicyReAuthAnswer_FailureCode = 3
	PolicyReAuthAnswer_GW_PCEF_MALFUNCTION                PolicyReAuthAnswer_FailureCode = 4
	PolicyReAuthAnswer_RESOURCES_LIMITATION               PolicyReAuthAnswer_FailureCode = 5
	PolicyReAuthAnswer_MAX_NR_BEARERS_REACHED             PolicyReAuthAnswer_FailureCode = 6
	PolicyReAuthAnswer_UNKNOWN_BEARER_ID                  PolicyReAuthAnswer_FailureCode = 7
	PolicyReAuthAnswer_MISSING_BEARER_ID                  PolicyReAuthAnswer_FailureCode = 8
	PolicyReAuthAnswer_MISSING_FLOW_INFORMATION           PolicyReAuthAnswer_FailureCode = 9
	PolicyReAuthAnswer_RESOURCE_ALLOCATION_FAILURE        PolicyReAuthAnswer_FailureCode = 10
	PolicyReAuthAnswer_UNSUCCESSFUL_QOS_VALIDATION        PolicyReAuthAnswer_FailureCode = 11
	PolicyReAuthAnswer_INCORRECT_FLOW_INFORMATION         PolicyReAuthAnswer_FailureCode = 12
	PolicyReAuthAnswer_PS_TO_CS_HANDOVER                  PolicyReAuthAnswer_FailureCode = 13
	PolicyReAuthAnswer_TDF_APPLICATION_IDENTIFIER_ERROR   PolicyReAuthAnswer_FailureCode = 14
	PolicyReAuthAnswer_NO_BEARER_FOUND                    PolicyReAuthAnswer_FailureCode = 15
	PolicyReAuthAnswer_FILTER_RESTRICTIONS                PolicyReAuthAnswer_FailureCode = 16
	PolicyReAuthAnswer_AN_GW_FAILED                       PolicyReAuthAnswer_FailureCode = 17
	PolicyReAuthAnswer_MISSING_REDIRECT_SERVER_ADDRESS    PolicyReAuthAnswer_FailureCode = 18
	PolicyReAuthAnswer_CM_END_USER_SERVICE_DENIED         PolicyReAuthAnswer_FailureCode = 19
	PolicyReAuthAnswer_CM_CREDIT_CONTROL_NOT_APPLICABLE   PolicyReAuthAnswer_FailureCode = 20
	PolicyReAuthAnswer_CM_AUTHORIZATION_REJECTED          PolicyReAuthAnswer_FailureCode = 21
	PolicyReAuthAnswer_CM_USER_UNKNOWN                    PolicyReAuthAnswer_FailureCode = 22
	PolicyReAuthAnswer_CM_RATING_FAILED                   PolicyReAuthAnswer_FailureCode = 23
	PolicyReAuthAnswer_ROUTING_RULE_REJECTION             PolicyReAuthAnswer_FailureCode = 24
	PolicyReAuthAnswer_UNKNOWN_ROUTING_ACCESS_INFORMATION PolicyReAuthAnswer_FailureCode = 25
	PolicyReAuthAnswer_NO_NBIFOM_SUPPORT                  PolicyReAuthAnswer_FailureCode = 26
)

var PolicyReAuthAnswer_FailureCode_name = map[int32]string{
	0:  "UNUSED",
	1:  "UNKNOWN_RULE_NAME",
	2:  "RATING_GROUP_ERROR",
	3:  "SERVICE_IDENTIFIER_ERROR",
	4:  "GW_PCEF_MALFUNCTION",
	5:  "RESOURCES_LIMITATION",
	6:  "MAX_NR_BEARERS_REACHED",
	7:  "UNKNOWN_BEARER_ID",
	8:  "MISSING_BEARER_ID",
	9:  "MISSING_FLOW_INFORMATION",
	10: "RESOURCE_ALLOCATION_FAILURE",
	11: "UNSUCCESSFUL_QOS_VALIDATION",
	12: "INCORRECT_FLOW_INFORMATION",
	13: "PS_TO_CS_HANDOVER",
	14: "TDF_APPLICATION_IDENTIFIER_ERROR",
	15: "NO_BEARER_FOUND",
	16: "FILTER_RESTRICTIONS",
	17: "AN_GW_FAILED",
	18: "MISSING_REDIRECT_SERVER_ADDRESS",
	19: "CM_END_USER_SERVICE_DENIED",
	20: "CM_CREDIT_CONTROL_NOT_APPLICABLE",
	21: "CM_AUTHORIZATION_REJECTED",
	22: "CM_USER_UNKNOWN",
	23: "CM_RATING_FAILED",
	24: "ROUTING_RULE_REJECTION",
	25: "UNKNOWN_ROUTING_ACCESS_INFORMATION",
	26: "NO_NBIFOM_SUPPORT",
}

var PolicyReAuthAnswer_FailureCode_value = map[string]int32{
	"UNUSED":                             0,
	"UNKNOWN_RULE_NAME":                  1,
	"RATING_GROUP_ERROR":                 2,
	"SERVICE_IDENTIFIER_ERROR":           3,
	"GW_PCEF_MALFUNCTION":                4,
	"RESOURCES_LIMITATION":               5,
	"MAX_NR_BEARERS_REACHED":             6,
	"UNKNOWN_BEARER_ID":                  7,
	"MISSING_BEARER_ID":                  8,
	"MISSING_FLOW_INFORMATION":           9,
	"RESOURCE_ALLOCATION_FAILURE":        10,
	"UNSUCCESSFUL_QOS_VALIDATION":        11,
	"INCORRECT_FLOW_INFORMATION":         12,
	"PS_TO_CS_HANDOVER":                  13,
	"TDF_APPLICATION_IDENTIFIER_ERROR":   14,
	"NO_BEARER_FOUND":                    15,
	"FILTER_RESTRICTIONS":                16,
	"AN_GW_FAILED":                       17,
	"MISSING_REDIRECT_SERVER_ADDRESS":    18,
	"CM_END_USER_SERVICE_DENIED":         19,
	"CM_CREDIT_CONTROL_NOT_APPLICABLE":   20,
	"CM_AUTHORIZATION_REJECTED":          21,
	"CM_USER_UNKNOWN":                    22,
	"CM_RATING_FAILED":                   23,
	"ROUTING_RULE_REJECTION":             24,
	"UNKNOWN_ROUTING_ACCESS_INFORMATION": 25,
	"NO_NBIFOM_SUPPORT":                  26,
}

func (x PolicyReAuthAnswer_FailureCode) String() string {
	return proto.EnumName(PolicyReAuthAnswer_FailureCode_name, int32(x))
}

func (PolicyReAuthAnswer_FailureCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{10, 0}
}

type RedirectServer_RedirectAddressType int32

const (
	RedirectServer_IPV4    RedirectServer_RedirectAddressType = 0
	RedirectServer_IPV6    RedirectServer_RedirectAddressType = 1
	RedirectServer_URL     RedirectServer_RedirectAddressType = 2
	RedirectServer_SIP_URI RedirectServer_RedirectAddressType = 3
)

var RedirectServer_RedirectAddressType_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "URL",
	3: "SIP_URI",
}

var RedirectServer_RedirectAddressType_value = map[string]int32{
	"IPV4":    0,
	"IPV6":    1,
	"URL":     2,
	"SIP_URI": 3,
}

func (x RedirectServer_RedirectAddressType) String() string {
	return proto.EnumName(RedirectServer_RedirectAddressType_name, int32(x))
}

func (RedirectServer_RedirectAddressType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{13, 0}
}

type ChargingCredit_UnitType int32

const (
	ChargingCredit_BYTES   ChargingCredit_UnitType = 0
	ChargingCredit_SECONDS ChargingCredit_UnitType = 1
)

var ChargingCredit_UnitType_name = map[int32]string{
	0: "BYTES",
	1: "SECONDS",
}

var ChargingCredit_UnitType_value = map[string]int32{
	"BYTES":   0,
	"SECONDS": 1,
}

func (x ChargingCredit_UnitType) String() string {
	return proto.EnumName(ChargingCredit_UnitType_name, int32(x))
}

func (ChargingCredit_UnitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{14, 0}
}

type ChargingCredit_FinalAction int32

const (
	ChargingCredit_TERMINATE       ChargingCredit_FinalAction = 0
	ChargingCredit_REDIRECT        ChargingCredit_FinalAction = 1
	ChargingCredit_RESTRICT_ACCESS ChargingCredit_FinalAction = 2
)

var ChargingCredit_FinalAction_name = map[int32]string{
	0: "TERMINATE",
	1: "REDIRECT",
	2: "RESTRICT_ACCESS",
}

var ChargingCredit_FinalAction_value = map[string]int32{
	"TERMINATE":       0,
	"REDIRECT":        1,
	"RESTRICT_ACCESS": 2,
}

func (x ChargingCredit_FinalAction) String() string {
	return proto.EnumName(ChargingCredit_FinalAction_name, int32(x))
}

func (ChargingCredit_FinalAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{14, 1}
}

type CreditUsage_UpdateType int32

const (
	CreditUsage_THRESHOLD               CreditUsage_UpdateType = 0
	CreditUsage_QHT                     CreditUsage_UpdateType = 1
	CreditUsage_TERMINATED              CreditUsage_UpdateType = 2
	CreditUsage_QUOTA_EXHAUSTED         CreditUsage_UpdateType = 3
	CreditUsage_VALIDITY_TIMER_EXPIRED  CreditUsage_UpdateType = 4
	CreditUsage_OTHER_QUOTA_TYPE        CreditUsage_UpdateType = 5
	CreditUsage_RATING_CONDITION_CHANGE CreditUsage_UpdateType = 6
	CreditUsage_REAUTH_REQUIRED         CreditUsage_UpdateType = 7
	CreditUsage_POOL_EXHAUSTED          CreditUsage_UpdateType = 8
)

var CreditUsage_UpdateType_name = map[int32]string{
	0: "THRESHOLD",
	1: "QHT",
	2: "TERMINATED",
	3: "QUOTA_EXHAUSTED",
	4: "VALIDITY_TIMER_EXPIRED",
	5: "OTHER_QUOTA_TYPE",
	6: "RATING_CONDITION_CHANGE",
	7: "REAUTH_REQUIRED",
	8: "POOL_EXHAUSTED",
}

var CreditUsage_UpdateType_value = map[string]int32{
	"THRESHOLD":               0,
	"QHT":                     1,
	"TERMINATED":              2,
	"QUOTA_EXHAUSTED":         3,
	"VALIDITY_TIMER_EXPIRED":  4,
	"OTHER_QUOTA_TYPE":        5,
	"RATING_CONDITION_CHANGE": 6,
	"REAUTH_REQUIRED":         7,
	"POOL_EXHAUSTED":          8,
}

func (x CreditUsage_UpdateType) String() string {
	return proto.EnumName(CreditUsage_UpdateType_name, int32(x))
}

func (CreditUsage_UpdateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{15, 0}
}

type CreditUpdateResponse_ResponseType int32

const (
	CreditUpdateResponse_UPDATE CreditUpdateResponse_ResponseType = 0
)

var CreditUpdateResponse_ResponseType_name = map[int32]string{
	0: "UPDATE",
}

var CreditUpdateResponse_ResponseType_value = map[string]int32{
	"UPDATE": 0,
}

func (x CreditUpdateResponse_ResponseType) String() string {
	return proto.EnumName(CreditUpdateResponse_ResponseType_name, int32(x))
}

func (CreditUpdateResponse_ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{17, 0}
}

type CreditUpdateResponse_CreditLimitType int32

const (
	CreditUpdateResponse_FINITE             CreditUpdateResponse_CreditLimitType = 0
	CreditUpdateResponse_INFINITE_UNMETERED CreditUpdateResponse_CreditLimitType = 1
	CreditUpdateResponse_INFINITE_METERED   CreditUpdateResponse_CreditLimitType = 2
)

var CreditUpdateResponse_CreditLimitType_name = map[int32]string{
	0: "FINITE",
	1: "INFINITE_UNMETERED",
	2: "INFINITE_METERED",
}

var CreditUpdateResponse_CreditLimitType_value = map[string]int32{
	"FINITE":             0,
	"INFINITE_UNMETERED": 1,
	"INFINITE_METERED":   2,
}

func (x CreditUpdateResponse_CreditLimitType) String() string {
	return proto.EnumName(CreditUpdateResponse_CreditLimitType_name, int32(x))
}

func (CreditUpdateResponse_CreditLimitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{17, 1}
}

type UsageMonitoringCredit_Action int32

const (
	UsageMonitoringCredit_CONTINUE UsageMonitoringCredit_Action = 0
	UsageMonitoringCredit_DISABLE  UsageMonitoringCredit_Action = 1
)

var UsageMonitoringCredit_Action_name = map[int32]string{
	0: "CONTINUE",
	1: "DISABLE",
}

var UsageMonitoringCredit_Action_value = map[string]int32{
	"CONTINUE": 0,
	"DISABLE":  1,
}

func (x UsageMonitoringCredit_Action) String() string {
	return proto.EnumName(UsageMonitoringCredit_Action_name, int32(x))
}

func (UsageMonitoringCredit_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{19, 0}
}

type RuleRecord struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RuleId               string   `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	BytesTx              uint64   `protobuf:"varint,3,opt,name=bytes_tx,json=bytesTx,proto3" json:"bytes_tx,omitempty"`
	BytesRx              uint64   `protobuf:"varint,4,opt,name=bytes_rx,json=bytesRx,proto3" json:"bytes_rx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleRecord) Reset()         { *m = RuleRecord{} }
func (m *RuleRecord) String() string { return proto.CompactTextString(m) }
func (*RuleRecord) ProtoMessage()    {}
func (*RuleRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{0}
}

func (m *RuleRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleRecord.Unmarshal(m, b)
}
func (m *RuleRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleRecord.Marshal(b, m, deterministic)
}
func (m *RuleRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleRecord.Merge(m, src)
}
func (m *RuleRecord) XXX_Size() int {
	return xxx_messageInfo_RuleRecord.Size(m)
}
func (m *RuleRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleRecord.DiscardUnknown(m)
}

var xxx_messageInfo_RuleRecord proto.InternalMessageInfo

func (m *RuleRecord) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *RuleRecord) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func (m *RuleRecord) GetBytesTx() uint64 {
	if m != nil {
		return m.BytesTx
	}
	return 0
}

func (m *RuleRecord) GetBytesRx() uint64 {
	if m != nil {
		return m.BytesRx
	}
	return 0
}

type RuleRecordTable struct {
	Records              []*RuleRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Epoch                uint64        `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RuleRecordTable) Reset()         { *m = RuleRecordTable{} }
func (m *RuleRecordTable) String() string { return proto.CompactTextString(m) }
func (*RuleRecordTable) ProtoMessage()    {}
func (*RuleRecordTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{1}
}

func (m *RuleRecordTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleRecordTable.Unmarshal(m, b)
}
func (m *RuleRecordTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleRecordTable.Marshal(b, m, deterministic)
}
func (m *RuleRecordTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleRecordTable.Merge(m, src)
}
func (m *RuleRecordTable) XXX_Size() int {
	return xxx_messageInfo_RuleRecordTable.Size(m)
}
func (m *RuleRecordTable) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleRecordTable.DiscardUnknown(m)
}

var xxx_messageInfo_RuleRecordTable proto.InternalMessageInfo

func (m *RuleRecordTable) GetRecords() []*RuleRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *RuleRecordTable) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type LocalCreateSessionRequest struct {
	Sid                  *SubscriberID          `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	UeIpv4               string                 `protobuf:"bytes,2,opt,name=ue_ipv4,json=ueIpv4,proto3" json:"ue_ipv4,omitempty"`
	SpgwIpv4             string                 `protobuf:"bytes,3,opt,name=spgw_ipv4,json=spgwIpv4,proto3" json:"spgw_ipv4,omitempty"`
	Apn                  string                 `protobuf:"bytes,4,opt,name=apn,proto3" json:"apn,omitempty"`
	Imei                 string                 `protobuf:"bytes,6,opt,name=imei,proto3" json:"imei,omitempty"`
	PlmnId               string                 `protobuf:"bytes,7,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	ImsiPlmnId           string                 `protobuf:"bytes,8,opt,name=imsi_plmn_id,json=imsiPlmnId,proto3" json:"imsi_plmn_id,omitempty"`
	UserLocation         []byte                 `protobuf:"bytes,9,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`
	QosInfo              *QosInformationRequest `protobuf:"bytes,10,opt,name=qos_info,json=qosInfo,proto3" json:"qos_info,omitempty"`
	Msisdn               []byte                 `protobuf:"bytes,11,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	RatType              RATType                `protobuf:"varint,12,opt,name=rat_type,json=ratType,proto3,enum=magma.lte.RATType" json:"rat_type,omitempty"`
	HardwareAddr         []byte                 `protobuf:"bytes,13,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	RadiusSessionId      string                 `protobuf:"bytes,14,opt,name=radius_session_id,json=radiusSessionId,proto3" json:"radius_session_id,omitempty"`
	BearerId             uint32                 `protobuf:"varint,15,opt,name=bearer_id,json=bearerId,proto3" json:"bearer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *LocalCreateSessionRequest) Reset()         { *m = LocalCreateSessionRequest{} }
func (m *LocalCreateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*LocalCreateSessionRequest) ProtoMessage()    {}
func (*LocalCreateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{2}
}

func (m *LocalCreateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalCreateSessionRequest.Unmarshal(m, b)
}
func (m *LocalCreateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalCreateSessionRequest.Marshal(b, m, deterministic)
}
func (m *LocalCreateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalCreateSessionRequest.Merge(m, src)
}
func (m *LocalCreateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_LocalCreateSessionRequest.Size(m)
}
func (m *LocalCreateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalCreateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocalCreateSessionRequest proto.InternalMessageInfo

func (m *LocalCreateSessionRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *LocalCreateSessionRequest) GetUeIpv4() string {
	if m != nil {
		return m.UeIpv4
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetSpgwIpv4() string {
	if m != nil {
		return m.SpgwIpv4
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetApn() string {
	if m != nil {
		return m.Apn
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetPlmnId() string {
	if m != nil {
		return m.PlmnId
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetImsiPlmnId() string {
	if m != nil {
		return m.ImsiPlmnId
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetUserLocation() []byte {
	if m != nil {
		return m.UserLocation
	}
	return nil
}

func (m *LocalCreateSessionRequest) GetQosInfo() *QosInformationRequest {
	if m != nil {
		return m.QosInfo
	}
	return nil
}

func (m *LocalCreateSessionRequest) GetMsisdn() []byte {
	if m != nil {
		return m.Msisdn
	}
	return nil
}

func (m *LocalCreateSessionRequest) GetRatType() RATType {
	if m != nil {
		return m.RatType
	}
	return RATType_TGPP_LTE
}

func (m *LocalCreateSessionRequest) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

func (m *LocalCreateSessionRequest) GetRadiusSessionId() string {
	if m != nil {
		return m.RadiusSessionId
	}
	return ""
}

func (m *LocalCreateSessionRequest) GetBearerId() uint32 {
	if m != nil {
		return m.BearerId
	}
	return 0
}

type LocalCreateSessionResponse struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalCreateSessionResponse) Reset()         { *m = LocalCreateSessionResponse{} }
func (m *LocalCreateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*LocalCreateSessionResponse) ProtoMessage()    {}
func (*LocalCreateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{3}
}

func (m *LocalCreateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalCreateSessionResponse.Unmarshal(m, b)
}
func (m *LocalCreateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalCreateSessionResponse.Marshal(b, m, deterministic)
}
func (m *LocalCreateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalCreateSessionResponse.Merge(m, src)
}
func (m *LocalCreateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_LocalCreateSessionResponse.Size(m)
}
func (m *LocalCreateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalCreateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LocalCreateSessionResponse proto.InternalMessageInfo

func (m *LocalCreateSessionResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type LocalEndSessionRequest struct {
	Sid                  *SubscriberID `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Apn                  string        `protobuf:"bytes,2,opt,name=apn,proto3" json:"apn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LocalEndSessionRequest) Reset()         { *m = LocalEndSessionRequest{} }
func (m *LocalEndSessionRequest) String() string { return proto.CompactTextString(m) }
func (*LocalEndSessionRequest) ProtoMessage()    {}
func (*LocalEndSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{4}
}

func (m *LocalEndSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalEndSessionRequest.Unmarshal(m, b)
}
func (m *LocalEndSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalEndSessionRequest.Marshal(b, m, deterministic)
}
func (m *LocalEndSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalEndSessionRequest.Merge(m, src)
}
func (m *LocalEndSessionRequest) XXX_Size() int {
	return xxx_messageInfo_LocalEndSessionRequest.Size(m)
}
func (m *LocalEndSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalEndSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocalEndSessionRequest proto.InternalMessageInfo

func (m *LocalEndSessionRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *LocalEndSessionRequest) GetApn() string {
	if m != nil {
		return m.Apn
	}
	return ""
}

type LocalEndSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalEndSessionResponse) Reset()         { *m = LocalEndSessionResponse{} }
func (m *LocalEndSessionResponse) String() string { return proto.CompactTextString(m) }
func (*LocalEndSessionResponse) ProtoMessage()    {}
func (*LocalEndSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{5}
}

func (m *LocalEndSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalEndSessionResponse.Unmarshal(m, b)
}
func (m *LocalEndSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalEndSessionResponse.Marshal(b, m, deterministic)
}
func (m *LocalEndSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalEndSessionResponse.Merge(m, src)
}
func (m *LocalEndSessionResponse) XXX_Size() int {
	return xxx_messageInfo_LocalEndSessionResponse.Size(m)
}
func (m *LocalEndSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalEndSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LocalEndSessionResponse proto.InternalMessageInfo

type ChargingReAuthRequest struct {
	SessionId            string                     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChargingKey          uint32                     `protobuf:"varint,2,opt,name=charging_key,json=chargingKey,proto3" json:"charging_key,omitempty"`
	Sid                  string                     `protobuf:"bytes,3,opt,name=sid,proto3" json:"sid,omitempty"`
	Type                 ChargingReAuthRequest_Type `protobuf:"varint,4,opt,name=type,proto3,enum=magma.lte.ChargingReAuthRequest_Type" json:"type,omitempty"`
	ServiceIdentifier    *ServiceIdentifier         `protobuf:"bytes,5,opt,name=service_identifier,json=serviceIdentifier,proto3" json:"service_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ChargingReAuthRequest) Reset()         { *m = ChargingReAuthRequest{} }
func (m *ChargingReAuthRequest) String() string { return proto.CompactTextString(m) }
func (*ChargingReAuthRequest) ProtoMessage()    {}
func (*ChargingReAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{6}
}

func (m *ChargingReAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargingReAuthRequest.Unmarshal(m, b)
}
func (m *ChargingReAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargingReAuthRequest.Marshal(b, m, deterministic)
}
func (m *ChargingReAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargingReAuthRequest.Merge(m, src)
}
func (m *ChargingReAuthRequest) XXX_Size() int {
	return xxx_messageInfo_ChargingReAuthRequest.Size(m)
}
func (m *ChargingReAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargingReAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChargingReAuthRequest proto.InternalMessageInfo

func (m *ChargingReAuthRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ChargingReAuthRequest) GetChargingKey() uint32 {
	if m != nil {
		return m.ChargingKey
	}
	return 0
}

func (m *ChargingReAuthRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ChargingReAuthRequest) GetType() ChargingReAuthRequest_Type {
	if m != nil {
		return m.Type
	}
	return ChargingReAuthRequest_SINGLE_SERVICE
}

func (m *ChargingReAuthRequest) GetServiceIdentifier() *ServiceIdentifier {
	if m != nil {
		return m.ServiceIdentifier
	}
	return nil
}

type ChargingReAuthAnswer struct {
	Result               ChargingReAuthAnswer_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.ChargingReAuthAnswer_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChargingReAuthAnswer) Reset()         { *m = ChargingReAuthAnswer{} }
func (m *ChargingReAuthAnswer) String() string { return proto.CompactTextString(m) }
func (*ChargingReAuthAnswer) ProtoMessage()    {}
func (*ChargingReAuthAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{7}
}

func (m *ChargingReAuthAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargingReAuthAnswer.Unmarshal(m, b)
}
func (m *ChargingReAuthAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargingReAuthAnswer.Marshal(b, m, deterministic)
}
func (m *ChargingReAuthAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargingReAuthAnswer.Merge(m, src)
}
func (m *ChargingReAuthAnswer) XXX_Size() int {
	return xxx_messageInfo_ChargingReAuthAnswer.Size(m)
}
func (m *ChargingReAuthAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargingReAuthAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_ChargingReAuthAnswer proto.InternalMessageInfo

func (m *ChargingReAuthAnswer) GetResult() ChargingReAuthAnswer_Result {
	if m != nil {
		return m.Result
	}
	return ChargingReAuthAnswer_UPDATE_INITIATED
}

type PolicyReAuthRequest struct {
	// NOTE: if no session_id is specified, apply to all sessions for the IMSI
	SessionId              string                   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Imsi                   string                   `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	RulesToRemove          []string                 `protobuf:"bytes,3,rep,name=rules_to_remove,json=rulesToRemove,proto3" json:"rules_to_remove,omitempty"`
	RulesToInstall         []*StaticRuleInstall     `protobuf:"bytes,6,rep,name=rules_to_install,json=rulesToInstall,proto3" json:"rules_to_install,omitempty"`
	DynamicRulesToInstall  []*DynamicRuleInstall    `protobuf:"bytes,7,rep,name=dynamic_rules_to_install,json=dynamicRulesToInstall,proto3" json:"dynamic_rules_to_install,omitempty"`
	EventTriggers          []EventTrigger           `protobuf:"varint,8,rep,packed,name=event_triggers,json=eventTriggers,proto3,enum=magma.lte.EventTrigger" json:"event_triggers,omitempty"`
	RevalidationTime       *timestamp.Timestamp     `protobuf:"bytes,9,opt,name=revalidation_time,json=revalidationTime,proto3" json:"revalidation_time,omitempty"`
	UsageMonitoringCredits []*UsageMonitoringCredit `protobuf:"bytes,10,rep,name=usage_monitoring_credits,json=usageMonitoringCredits,proto3" json:"usage_monitoring_credits,omitempty"`
	QosInfo                *QoSInformation          `protobuf:"bytes,11,opt,name=qos_info,json=qosInfo,proto3" json:"qos_info,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *PolicyReAuthRequest) Reset()         { *m = PolicyReAuthRequest{} }
func (m *PolicyReAuthRequest) String() string { return proto.CompactTextString(m) }
func (*PolicyReAuthRequest) ProtoMessage()    {}
func (*PolicyReAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{8}
}

func (m *PolicyReAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyReAuthRequest.Unmarshal(m, b)
}
func (m *PolicyReAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyReAuthRequest.Marshal(b, m, deterministic)
}
func (m *PolicyReAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyReAuthRequest.Merge(m, src)
}
func (m *PolicyReAuthRequest) XXX_Size() int {
	return xxx_messageInfo_PolicyReAuthRequest.Size(m)
}
func (m *PolicyReAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyReAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyReAuthRequest proto.InternalMessageInfo

func (m *PolicyReAuthRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *PolicyReAuthRequest) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *PolicyReAuthRequest) GetRulesToRemove() []string {
	if m != nil {
		return m.RulesToRemove
	}
	return nil
}

func (m *PolicyReAuthRequest) GetRulesToInstall() []*StaticRuleInstall {
	if m != nil {
		return m.RulesToInstall
	}
	return nil
}

func (m *PolicyReAuthRequest) GetDynamicRulesToInstall() []*DynamicRuleInstall {
	if m != nil {
		return m.DynamicRulesToInstall
	}
	return nil
}

func (m *PolicyReAuthRequest) GetEventTriggers() []EventTrigger {
	if m != nil {
		return m.EventTriggers
	}
	return nil
}

func (m *PolicyReAuthRequest) GetRevalidationTime() *timestamp.Timestamp {
	if m != nil {
		return m.RevalidationTime
	}
	return nil
}

func (m *PolicyReAuthRequest) GetUsageMonitoringCredits() []*UsageMonitoringCredit {
	if m != nil {
		return m.UsageMonitoringCredits
	}
	return nil
}

func (m *PolicyReAuthRequest) GetQosInfo() *QoSInformation {
	if m != nil {
		return m.QosInfo
	}
	return nil
}

type QoSInformation struct {
	BearerId             string   `protobuf:"bytes,1,opt,name=bearer_id,json=bearerId,proto3" json:"bearer_id,omitempty"`
	Qci                  QCI      `protobuf:"varint,2,opt,name=qci,proto3,enum=magma.lte.QCI" json:"qci,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QoSInformation) Reset()         { *m = QoSInformation{} }
func (m *QoSInformation) String() string { return proto.CompactTextString(m) }
func (*QoSInformation) ProtoMessage()    {}
func (*QoSInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{9}
}

func (m *QoSInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QoSInformation.Unmarshal(m, b)
}
func (m *QoSInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QoSInformation.Marshal(b, m, deterministic)
}
func (m *QoSInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QoSInformation.Merge(m, src)
}
func (m *QoSInformation) XXX_Size() int {
	return xxx_messageInfo_QoSInformation.Size(m)
}
func (m *QoSInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_QoSInformation.DiscardUnknown(m)
}

var xxx_messageInfo_QoSInformation proto.InternalMessageInfo

func (m *QoSInformation) GetBearerId() string {
	if m != nil {
		return m.BearerId
	}
	return ""
}

func (m *QoSInformation) GetQci() QCI {
	if m != nil {
		return m.Qci
	}
	return QCI_QCI_0
}

type PolicyReAuthAnswer struct {
	SessionId            string                                    `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Result               ReAuthResult                              `protobuf:"varint,2,opt,name=result,proto3,enum=magma.lte.ReAuthResult" json:"result,omitempty"`
	FailedRules          map[string]PolicyReAuthAnswer_FailureCode `protobuf:"bytes,3,rep,name=failed_rules,json=failedRules,proto3" json:"failed_rules,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=magma.lte.PolicyReAuthAnswer_FailureCode"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *PolicyReAuthAnswer) Reset()         { *m = PolicyReAuthAnswer{} }
func (m *PolicyReAuthAnswer) String() string { return proto.CompactTextString(m) }
func (*PolicyReAuthAnswer) ProtoMessage()    {}
func (*PolicyReAuthAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{10}
}

func (m *PolicyReAuthAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyReAuthAnswer.Unmarshal(m, b)
}
func (m *PolicyReAuthAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyReAuthAnswer.Marshal(b, m, deterministic)
}
func (m *PolicyReAuthAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyReAuthAnswer.Merge(m, src)
}
func (m *PolicyReAuthAnswer) XXX_Size() int {
	return xxx_messageInfo_PolicyReAuthAnswer.Size(m)
}
func (m *PolicyReAuthAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyReAuthAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyReAuthAnswer proto.InternalMessageInfo

func (m *PolicyReAuthAnswer) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *PolicyReAuthAnswer) GetResult() ReAuthResult {
	if m != nil {
		return m.Result
	}
	return ReAuthResult_UPDATE_INITIATED
}

func (m *PolicyReAuthAnswer) GetFailedRules() map[string]PolicyReAuthAnswer_FailureCode {
	if m != nil {
		return m.FailedRules
	}
	return nil
}

type CreditUnit struct {
	IsValid              bool     `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Volume               uint64   `protobuf:"varint,2,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditUnit) Reset()         { *m = CreditUnit{} }
func (m *CreditUnit) String() string { return proto.CompactTextString(m) }
func (*CreditUnit) ProtoMessage()    {}
func (*CreditUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{11}
}

func (m *CreditUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditUnit.Unmarshal(m, b)
}
func (m *CreditUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditUnit.Marshal(b, m, deterministic)
}
func (m *CreditUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditUnit.Merge(m, src)
}
func (m *CreditUnit) XXX_Size() int {
	return xxx_messageInfo_CreditUnit.Size(m)
}
func (m *CreditUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditUnit.DiscardUnknown(m)
}

var xxx_messageInfo_CreditUnit proto.InternalMessageInfo

func (m *CreditUnit) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *CreditUnit) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

type GrantedUnits struct {
	Total                *CreditUnit `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Tx                   *CreditUnit `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	Rx                   *CreditUnit `protobuf:"bytes,3,opt,name=rx,proto3" json:"rx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GrantedUnits) Reset()         { *m = GrantedUnits{} }
func (m *GrantedUnits) String() string { return proto.CompactTextString(m) }
func (*GrantedUnits) ProtoMessage()    {}
func (*GrantedUnits) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{12}
}

func (m *GrantedUnits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrantedUnits.Unmarshal(m, b)
}
func (m *GrantedUnits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrantedUnits.Marshal(b, m, deterministic)
}
func (m *GrantedUnits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantedUnits.Merge(m, src)
}
func (m *GrantedUnits) XXX_Size() int {
	return xxx_messageInfo_GrantedUnits.Size(m)
}
func (m *GrantedUnits) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantedUnits.DiscardUnknown(m)
}

var xxx_messageInfo_GrantedUnits proto.InternalMessageInfo

func (m *GrantedUnits) GetTotal() *CreditUnit {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *GrantedUnits) GetTx() *CreditUnit {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *GrantedUnits) GetRx() *CreditUnit {
	if m != nil {
		return m.Rx
	}
	return nil
}

type RedirectServer struct {
	RedirectAddressType   RedirectServer_RedirectAddressType `protobuf:"varint,1,opt,name=redirect_address_type,json=redirectAddressType,proto3,enum=magma.lte.RedirectServer_RedirectAddressType" json:"redirect_address_type,omitempty"`
	RedirectServerAddress string                             `protobuf:"bytes,2,opt,name=redirect_server_address,json=redirectServerAddress,proto3" json:"redirect_server_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                           `json:"-"`
	XXX_unrecognized      []byte                             `json:"-"`
	XXX_sizecache         int32                              `json:"-"`
}

func (m *RedirectServer) Reset()         { *m = RedirectServer{} }
func (m *RedirectServer) String() string { return proto.CompactTextString(m) }
func (*RedirectServer) ProtoMessage()    {}
func (*RedirectServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{13}
}

func (m *RedirectServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedirectServer.Unmarshal(m, b)
}
func (m *RedirectServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedirectServer.Marshal(b, m, deterministic)
}
func (m *RedirectServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedirectServer.Merge(m, src)
}
func (m *RedirectServer) XXX_Size() int {
	return xxx_messageInfo_RedirectServer.Size(m)
}
func (m *RedirectServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RedirectServer.DiscardUnknown(m)
}

var xxx_messageInfo_RedirectServer proto.InternalMessageInfo

func (m *RedirectServer) GetRedirectAddressType() RedirectServer_RedirectAddressType {
	if m != nil {
		return m.RedirectAddressType
	}
	return RedirectServer_IPV4
}

func (m *RedirectServer) GetRedirectServerAddress() string {
	if m != nil {
		return m.RedirectServerAddress
	}
	return ""
}

type ChargingCredit struct {
	Type                 ChargingCredit_UnitType    `protobuf:"varint,2,opt,name=type,proto3,enum=magma.lte.ChargingCredit_UnitType" json:"type,omitempty"`
	ValidityTime         uint32                     `protobuf:"varint,3,opt,name=validity_time,json=validityTime,proto3" json:"validity_time,omitempty"`
	IsFinal              bool                       `protobuf:"varint,4,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	FinalAction          ChargingCredit_FinalAction `protobuf:"varint,5,opt,name=final_action,json=finalAction,proto3,enum=magma.lte.ChargingCredit_FinalAction" json:"final_action,omitempty"`
	GrantedUnits         *GrantedUnits              `protobuf:"bytes,6,opt,name=granted_units,json=grantedUnits,proto3" json:"granted_units,omitempty"`
	RedirectServer       *RedirectServer            `protobuf:"bytes,7,opt,name=redirect_server,json=redirectServer,proto3" json:"redirect_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ChargingCredit) Reset()         { *m = ChargingCredit{} }
func (m *ChargingCredit) String() string { return proto.CompactTextString(m) }
func (*ChargingCredit) ProtoMessage()    {}
func (*ChargingCredit) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{14}
}

func (m *ChargingCredit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargingCredit.Unmarshal(m, b)
}
func (m *ChargingCredit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargingCredit.Marshal(b, m, deterministic)
}
func (m *ChargingCredit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargingCredit.Merge(m, src)
}
func (m *ChargingCredit) XXX_Size() int {
	return xxx_messageInfo_ChargingCredit.Size(m)
}
func (m *ChargingCredit) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargingCredit.DiscardUnknown(m)
}

var xxx_messageInfo_ChargingCredit proto.InternalMessageInfo

func (m *ChargingCredit) GetType() ChargingCredit_UnitType {
	if m != nil {
		return m.Type
	}
	return ChargingCredit_BYTES
}

func (m *ChargingCredit) GetValidityTime() uint32 {
	if m != nil {
		return m.ValidityTime
	}
	return 0
}

func (m *ChargingCredit) GetIsFinal() bool {
	if m != nil {
		return m.IsFinal
	}
	return false
}

func (m *ChargingCredit) GetFinalAction() ChargingCredit_FinalAction {
	if m != nil {
		return m.FinalAction
	}
	return ChargingCredit_TERMINATE
}

func (m *ChargingCredit) GetGrantedUnits() *GrantedUnits {
	if m != nil {
		return m.GrantedUnits
	}
	return nil
}

func (m *ChargingCredit) GetRedirectServer() *RedirectServer {
	if m != nil {
		return m.RedirectServer
	}
	return nil
}

type CreditUsage struct {
	BytesTx              uint64                 `protobuf:"varint,1,opt,name=bytes_tx,json=bytesTx,proto3" json:"bytes_tx,omitempty"`
	BytesRx              uint64                 `protobuf:"varint,2,opt,name=bytes_rx,json=bytesRx,proto3" json:"bytes_rx,omitempty"`
	ChargingKey          uint32                 `protobuf:"varint,4,opt,name=charging_key,json=chargingKey,proto3" json:"charging_key,omitempty"`
	Type                 CreditUsage_UpdateType `protobuf:"varint,5,opt,name=type,proto3,enum=magma.lte.CreditUsage_UpdateType" json:"type,omitempty"`
	MonitoringKey        []byte                 `protobuf:"bytes,6,opt,name=monitoring_key,json=monitoringKey,proto3" json:"monitoring_key,omitempty"`
	ServiceIdentifier    *ServiceIdentifier     `protobuf:"bytes,7,opt,name=service_identifier,json=serviceIdentifier,proto3" json:"service_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreditUsage) Reset()         { *m = CreditUsage{} }
func (m *CreditUsage) String() string { return proto.CompactTextString(m) }
func (*CreditUsage) ProtoMessage()    {}
func (*CreditUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{15}
}

func (m *CreditUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditUsage.Unmarshal(m, b)
}
func (m *CreditUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditUsage.Marshal(b, m, deterministic)
}
func (m *CreditUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditUsage.Merge(m, src)
}
func (m *CreditUsage) XXX_Size() int {
	return xxx_messageInfo_CreditUsage.Size(m)
}
func (m *CreditUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditUsage.DiscardUnknown(m)
}

var xxx_messageInfo_CreditUsage proto.InternalMessageInfo

func (m *CreditUsage) GetBytesTx() uint64 {
	if m != nil {
		return m.BytesTx
	}
	return 0
}

func (m *CreditUsage) GetBytesRx() uint64 {
	if m != nil {
		return m.BytesRx
	}
	return 0
}

func (m *CreditUsage) GetChargingKey() uint32 {
	if m != nil {
		return m.ChargingKey
	}
	return 0
}

func (m *CreditUsage) GetType() CreditUsage_UpdateType {
	if m != nil {
		return m.Type
	}
	return CreditUsage_THRESHOLD
}

func (m *CreditUsage) GetMonitoringKey() []byte {
	if m != nil {
		return m.MonitoringKey
	}
	return nil
}

func (m *CreditUsage) GetServiceIdentifier() *ServiceIdentifier {
	if m != nil {
		return m.ServiceIdentifier
	}
	return nil
}

type CreditUsageUpdate struct {
	Usage                *CreditUsage `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	SessionId            string       `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RequestNumber        uint32       `protobuf:"varint,3,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	Sid                  string       `protobuf:"bytes,4,opt,name=sid,proto3" json:"sid,omitempty"`
	Msisdn               []byte       `protobuf:"bytes,5,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	UeIpv4               string       `protobuf:"bytes,6,opt,name=ue_ipv4,json=ueIpv4,proto3" json:"ue_ipv4,omitempty"`
	SpgwIpv4             string       `protobuf:"bytes,7,opt,name=spgw_ipv4,json=spgwIpv4,proto3" json:"spgw_ipv4,omitempty"`
	Apn                  string       `protobuf:"bytes,8,opt,name=apn,proto3" json:"apn,omitempty"`
	Imei                 string       `protobuf:"bytes,9,opt,name=imei,proto3" json:"imei,omitempty"`
	PlmnId               string       `protobuf:"bytes,10,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	ImsiPlmnId           string       `protobuf:"bytes,11,opt,name=imsi_plmn_id,json=imsiPlmnId,proto3" json:"imsi_plmn_id,omitempty"`
	UserLocation         []byte       `protobuf:"bytes,12,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`
	RatType              RATType      `protobuf:"varint,13,opt,name=rat_type,json=ratType,proto3,enum=magma.lte.RATType" json:"rat_type,omitempty"`
	HardwareAddr         []byte       `protobuf:"bytes,14,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	TgppCtx              *TgppContext `protobuf:"bytes,15,opt,name=tgpp_ctx,json=tgppCtx,proto3" json:"tgpp_ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreditUsageUpdate) Reset()         { *m = CreditUsageUpdate{} }
func (m *CreditUsageUpdate) String() string { return proto.CompactTextString(m) }
func (*CreditUsageUpdate) ProtoMessage()    {}
func (*CreditUsageUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{16}
}

func (m *CreditUsageUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditUsageUpdate.Unmarshal(m, b)
}
func (m *CreditUsageUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditUsageUpdate.Marshal(b, m, deterministic)
}
func (m *CreditUsageUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditUsageUpdate.Merge(m, src)
}
func (m *CreditUsageUpdate) XXX_Size() int {
	return xxx_messageInfo_CreditUsageUpdate.Size(m)
}
func (m *CreditUsageUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditUsageUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CreditUsageUpdate proto.InternalMessageInfo

func (m *CreditUsageUpdate) GetUsage() *CreditUsage {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *CreditUsageUpdate) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *CreditUsageUpdate) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *CreditUsageUpdate) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *CreditUsageUpdate) GetMsisdn() []byte {
	if m != nil {
		return m.Msisdn
	}
	return nil
}

func (m *CreditUsageUpdate) GetUeIpv4() string {
	if m != nil {
		return m.UeIpv4
	}
	return ""
}

func (m *CreditUsageUpdate) GetSpgwIpv4() string {
	if m != nil {
		return m.SpgwIpv4
	}
	return ""
}

func (m *CreditUsageUpdate) GetApn() string {
	if m != nil {
		return m.Apn
	}
	return ""
}

func (m *CreditUsageUpdate) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *CreditUsageUpdate) GetPlmnId() string {
	if m != nil {
		return m.PlmnId
	}
	return ""
}

func (m *CreditUsageUpdate) GetImsiPlmnId() string {
	if m != nil {
		return m.ImsiPlmnId
	}
	return ""
}

func (m *CreditUsageUpdate) GetUserLocation() []byte {
	if m != nil {
		return m.UserLocation
	}
	return nil
}

func (m *CreditUsageUpdate) GetRatType() RATType {
	if m != nil {
		return m.RatType
	}
	return RATType_TGPP_LTE
}

func (m *CreditUsageUpdate) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

func (m *CreditUsageUpdate) GetTgppCtx() *TgppContext {
	if m != nil {
		return m.TgppCtx
	}
	return nil
}

type CreditUpdateResponse struct {
	Success           bool                              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Sid               string                            `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	ChargingKey       uint32                            `protobuf:"varint,3,opt,name=charging_key,json=chargingKey,proto3" json:"charging_key,omitempty"`
	Credit            *ChargingCredit                   `protobuf:"bytes,4,opt,name=credit,proto3" json:"credit,omitempty"`
	Type              CreditUpdateResponse_ResponseType `protobuf:"varint,5,opt,name=type,proto3,enum=magma.lte.CreditUpdateResponse_ResponseType" json:"type,omitempty"`
	ResultCode        uint32                            `protobuf:"varint,6,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	ServiceIdentifier *ServiceIdentifier                `protobuf:"bytes,7,opt,name=service_identifier,json=serviceIdentifier,proto3" json:"service_identifier,omitempty"`
	// When this is set to an infinite limit, field 'credit' should be ignored
	LimitType            CreditUpdateResponse_CreditLimitType `protobuf:"varint,9,opt,name=limit_type,json=limitType,proto3,enum=magma.lte.CreditUpdateResponse_CreditLimitType" json:"limit_type,omitempty"`
	TgppCtx              *TgppContext                         `protobuf:"bytes,10,opt,name=tgpp_ctx,json=tgppCtx,proto3" json:"tgpp_ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CreditUpdateResponse) Reset()         { *m = CreditUpdateResponse{} }
func (m *CreditUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*CreditUpdateResponse) ProtoMessage()    {}
func (*CreditUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{17}
}

func (m *CreditUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditUpdateResponse.Unmarshal(m, b)
}
func (m *CreditUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditUpdateResponse.Marshal(b, m, deterministic)
}
func (m *CreditUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditUpdateResponse.Merge(m, src)
}
func (m *CreditUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_CreditUpdateResponse.Size(m)
}
func (m *CreditUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreditUpdateResponse proto.InternalMessageInfo

func (m *CreditUpdateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreditUpdateResponse) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *CreditUpdateResponse) GetChargingKey() uint32 {
	if m != nil {
		return m.ChargingKey
	}
	return 0
}

func (m *CreditUpdateResponse) GetCredit() *ChargingCredit {
	if m != nil {
		return m.Credit
	}
	return nil
}

func (m *CreditUpdateResponse) GetType() CreditUpdateResponse_ResponseType {
	if m != nil {
		return m.Type
	}
	return CreditUpdateResponse_UPDATE
}

func (m *CreditUpdateResponse) GetResultCode() uint32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *CreditUpdateResponse) GetServiceIdentifier() *ServiceIdentifier {
	if m != nil {
		return m.ServiceIdentifier
	}
	return nil
}

func (m *CreditUpdateResponse) GetLimitType() CreditUpdateResponse_CreditLimitType {
	if m != nil {
		return m.LimitType
	}
	return CreditUpdateResponse_FINITE
}

func (m *CreditUpdateResponse) GetTgppCtx() *TgppContext {
	if m != nil {
		return m.TgppCtx
	}
	return nil
}

// Used amount for a usage monitor
type UsageMonitorUpdate struct {
	MonitoringKey        []byte          `protobuf:"bytes,1,opt,name=monitoring_key,json=monitoringKey,proto3" json:"monitoring_key,omitempty"`
	Level                MonitoringLevel `protobuf:"varint,2,opt,name=level,proto3,enum=magma.lte.MonitoringLevel" json:"level,omitempty"`
	BytesTx              uint64          `protobuf:"varint,3,opt,name=bytes_tx,json=bytesTx,proto3" json:"bytes_tx,omitempty"`
	BytesRx              uint64          `protobuf:"varint,4,opt,name=bytes_rx,json=bytesRx,proto3" json:"bytes_rx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UsageMonitorUpdate) Reset()         { *m = UsageMonitorUpdate{} }
func (m *UsageMonitorUpdate) String() string { return proto.CompactTextString(m) }
func (*UsageMonitorUpdate) ProtoMessage()    {}
func (*UsageMonitorUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{18}
}

func (m *UsageMonitorUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMonitorUpdate.Unmarshal(m, b)
}
func (m *UsageMonitorUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMonitorUpdate.Marshal(b, m, deterministic)
}
func (m *UsageMonitorUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMonitorUpdate.Merge(m, src)
}
func (m *UsageMonitorUpdate) XXX_Size() int {
	return xxx_messageInfo_UsageMonitorUpdate.Size(m)
}
func (m *UsageMonitorUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMonitorUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMonitorUpdate proto.InternalMessageInfo

func (m *UsageMonitorUpdate) GetMonitoringKey() []byte {
	if m != nil {
		return m.MonitoringKey
	}
	return nil
}

func (m *UsageMonitorUpdate) GetLevel() MonitoringLevel {
	if m != nil {
		return m.Level
	}
	return MonitoringLevel_SESSION_LEVEL
}

func (m *UsageMonitorUpdate) GetBytesTx() uint64 {
	if m != nil {
		return m.BytesTx
	}
	return 0
}

func (m *UsageMonitorUpdate) GetBytesRx() uint64 {
	if m != nil {
		return m.BytesRx
	}
	return 0
}

// New received threshold for a usage monitor
type UsageMonitoringCredit struct {
	Action               UsageMonitoringCredit_Action `protobuf:"varint,1,opt,name=action,proto3,enum=magma.lte.UsageMonitoringCredit_Action" json:"action,omitempty"`
	MonitoringKey        []byte                       `protobuf:"bytes,2,opt,name=monitoring_key,json=monitoringKey,proto3" json:"monitoring_key,omitempty"`
	Level                MonitoringLevel              `protobuf:"varint,3,opt,name=level,proto3,enum=magma.lte.MonitoringLevel" json:"level,omitempty"`
	GrantedUnits         *GrantedUnits                `protobuf:"bytes,5,opt,name=granted_units,json=grantedUnits,proto3" json:"granted_units,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *UsageMonitoringCredit) Reset()         { *m = UsageMonitoringCredit{} }
func (m *UsageMonitoringCredit) String() string { return proto.CompactTextString(m) }
func (*UsageMonitoringCredit) ProtoMessage()    {}
func (*UsageMonitoringCredit) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{19}
}

func (m *UsageMonitoringCredit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMonitoringCredit.Unmarshal(m, b)
}
func (m *UsageMonitoringCredit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMonitoringCredit.Marshal(b, m, deterministic)
}
func (m *UsageMonitoringCredit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMonitoringCredit.Merge(m, src)
}
func (m *UsageMonitoringCredit) XXX_Size() int {
	return xxx_messageInfo_UsageMonitoringCredit.Size(m)
}
func (m *UsageMonitoringCredit) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMonitoringCredit.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMonitoringCredit proto.InternalMessageInfo

func (m *UsageMonitoringCredit) GetAction() UsageMonitoringCredit_Action {
	if m != nil {
		return m.Action
	}
	return UsageMonitoringCredit_CONTINUE
}

func (m *UsageMonitoringCredit) GetMonitoringKey() []byte {
	if m != nil {
		return m.MonitoringKey
	}
	return nil
}

func (m *UsageMonitoringCredit) GetLevel() MonitoringLevel {
	if m != nil {
		return m.Level
	}
	return MonitoringLevel_SESSION_LEVEL
}

func (m *UsageMonitoringCredit) GetGrantedUnits() *GrantedUnits {
	if m != nil {
		return m.GrantedUnits
	}
	return nil
}

// A request to update a usage monitor given its usage and session information
type UsageMonitoringUpdateRequest struct {
	Update               *UsageMonitorUpdate `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	SessionId            string              `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RequestNumber        uint32              `protobuf:"varint,3,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	Sid                  string              `protobuf:"bytes,4,opt,name=sid,proto3" json:"sid,omitempty"`
	UeIpv4               string              `protobuf:"bytes,5,opt,name=ue_ipv4,json=ueIpv4,proto3" json:"ue_ipv4,omitempty"`
	HardwareAddr         []byte              `protobuf:"bytes,6,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	RatType              RATType             `protobuf:"varint,7,opt,name=rat_type,json=ratType,proto3,enum=magma.lte.RATType" json:"rat_type,omitempty"`
	TgppCtx              *TgppContext        `protobuf:"bytes,8,opt,name=tgpp_ctx,json=tgppCtx,proto3" json:"tgpp_ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UsageMonitoringUpdateRequest) Reset()         { *m = UsageMonitoringUpdateRequest{} }
func (m *UsageMonitoringUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UsageMonitoringUpdateRequest) ProtoMessage()    {}
func (*UsageMonitoringUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{20}
}

func (m *UsageMonitoringUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMonitoringUpdateRequest.Unmarshal(m, b)
}
func (m *UsageMonitoringUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMonitoringUpdateRequest.Marshal(b, m, deterministic)
}
func (m *UsageMonitoringUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMonitoringUpdateRequest.Merge(m, src)
}
func (m *UsageMonitoringUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UsageMonitoringUpdateRequest.Size(m)
}
func (m *UsageMonitoringUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMonitoringUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMonitoringUpdateRequest proto.InternalMessageInfo

func (m *UsageMonitoringUpdateRequest) GetUpdate() *UsageMonitorUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UsageMonitoringUpdateRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *UsageMonitoringUpdateRequest) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *UsageMonitoringUpdateRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *UsageMonitoringUpdateRequest) GetUeIpv4() string {
	if m != nil {
		return m.UeIpv4
	}
	return ""
}

func (m *UsageMonitoringUpdateRequest) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

func (m *UsageMonitoringUpdateRequest) GetRatType() RATType {
	if m != nil {
		return m.RatType
	}
	return RATType_TGPP_LTE
}

func (m *UsageMonitoringUpdateRequest) GetTgppCtx() *TgppContext {
	if m != nil {
		return m.TgppCtx
	}
	return nil
}

// Response to a usage monitor update with the credit received and session info
type UsageMonitoringUpdateResponse struct {
	Credit                *UsageMonitoringCredit `protobuf:"bytes,1,opt,name=credit,proto3" json:"credit,omitempty"`
	SessionId             string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Sid                   string                 `protobuf:"bytes,3,opt,name=sid,proto3" json:"sid,omitempty"`
	Success               bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	EventTriggers         []EventTrigger         `protobuf:"varint,5,rep,packed,name=event_triggers,json=eventTriggers,proto3,enum=magma.lte.EventTrigger" json:"event_triggers,omitempty"`
	RevalidationTime      *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=revalidation_time,json=revalidationTime,proto3" json:"revalidation_time,omitempty"`
	ResultCode            uint32                 `protobuf:"varint,7,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	RulesToRemove         []string               `protobuf:"bytes,8,rep,name=rules_to_remove,json=rulesToRemove,proto3" json:"rules_to_remove,omitempty"`
	StaticRulesToInstall  []*StaticRuleInstall   `protobuf:"bytes,9,rep,name=static_rules_to_install,json=staticRulesToInstall,proto3" json:"static_rules_to_install,omitempty"`
	DynamicRulesToInstall []*DynamicRuleInstall  `protobuf:"bytes,10,rep,name=dynamic_rules_to_install,json=dynamicRulesToInstall,proto3" json:"dynamic_rules_to_install,omitempty"`
	TgppCtx               *TgppContext           `protobuf:"bytes,11,opt,name=tgpp_ctx,json=tgppCtx,proto3" json:"tgpp_ctx,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *UsageMonitoringUpdateResponse) Reset()         { *m = UsageMonitoringUpdateResponse{} }
func (m *UsageMonitoringUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UsageMonitoringUpdateResponse) ProtoMessage()    {}
func (*UsageMonitoringUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{21}
}

func (m *UsageMonitoringUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMonitoringUpdateResponse.Unmarshal(m, b)
}
func (m *UsageMonitoringUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMonitoringUpdateResponse.Marshal(b, m, deterministic)
}
func (m *UsageMonitoringUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMonitoringUpdateResponse.Merge(m, src)
}
func (m *UsageMonitoringUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UsageMonitoringUpdateResponse.Size(m)
}
func (m *UsageMonitoringUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMonitoringUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMonitoringUpdateResponse proto.InternalMessageInfo

func (m *UsageMonitoringUpdateResponse) GetCredit() *UsageMonitoringCredit {
	if m != nil {
		return m.Credit
	}
	return nil
}

func (m *UsageMonitoringUpdateResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *UsageMonitoringUpdateResponse) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *UsageMonitoringUpdateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UsageMonitoringUpdateResponse) GetEventTriggers() []EventTrigger {
	if m != nil {
		return m.EventTriggers
	}
	return nil
}

func (m *UsageMonitoringUpdateResponse) GetRevalidationTime() *timestamp.Timestamp {
	if m != nil {
		return m.RevalidationTime
	}
	return nil
}

func (m *UsageMonitoringUpdateResponse) GetResultCode() uint32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *UsageMonitoringUpdateResponse) GetRulesToRemove() []string {
	if m != nil {
		return m.RulesToRemove
	}
	return nil
}

func (m *UsageMonitoringUpdateResponse) GetStaticRulesToInstall() []*StaticRuleInstall {
	if m != nil {
		return m.StaticRulesToInstall
	}
	return nil
}

func (m *UsageMonitoringUpdateResponse) GetDynamicRulesToInstall() []*DynamicRuleInstall {
	if m != nil {
		return m.DynamicRulesToInstall
	}
	return nil
}

func (m *UsageMonitoringUpdateResponse) GetTgppCtx() *TgppContext {
	if m != nil {
		return m.TgppCtx
	}
	return nil
}

// QoS Information to be sent in CCR-Init message
type QosInformationRequest struct {
	ApnAmbrDl               uint32   `protobuf:"varint,1,opt,name=apn_ambr_dl,json=apnAmbrDl,proto3" json:"apn_ambr_dl,omitempty"`
	ApnAmbrUl               uint32   `protobuf:"varint,2,opt,name=apn_ambr_ul,json=apnAmbrUl,proto3" json:"apn_ambr_ul,omitempty"`
	PriorityLevel           uint32   `protobuf:"varint,3,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    uint32   `protobuf:"varint,4,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability uint32   `protobuf:"varint,5,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
	QosClassId              uint32   `protobuf:"varint,6,opt,name=qos_class_id,json=qosClassId,proto3" json:"qos_class_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *QosInformationRequest) Reset()         { *m = QosInformationRequest{} }
func (m *QosInformationRequest) String() string { return proto.CompactTextString(m) }
func (*QosInformationRequest) ProtoMessage()    {}
func (*QosInformationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{22}
}

func (m *QosInformationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QosInformationRequest.Unmarshal(m, b)
}
func (m *QosInformationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QosInformationRequest.Marshal(b, m, deterministic)
}
func (m *QosInformationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInformationRequest.Merge(m, src)
}
func (m *QosInformationRequest) XXX_Size() int {
	return xxx_messageInfo_QosInformationRequest.Size(m)
}
func (m *QosInformationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInformationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QosInformationRequest proto.InternalMessageInfo

func (m *QosInformationRequest) GetApnAmbrDl() uint32 {
	if m != nil {
		return m.ApnAmbrDl
	}
	return 0
}

func (m *QosInformationRequest) GetApnAmbrUl() uint32 {
	if m != nil {
		return m.ApnAmbrUl
	}
	return 0
}

func (m *QosInformationRequest) GetPriorityLevel() uint32 {
	if m != nil {
		return m.PriorityLevel
	}
	return 0
}

func (m *QosInformationRequest) GetPreemptionCapability() uint32 {
	if m != nil {
		return m.PreemptionCapability
	}
	return 0
}

func (m *QosInformationRequest) GetPreemptionVulnerability() uint32 {
	if m != nil {
		return m.PreemptionVulnerability
	}
	return 0
}

func (m *QosInformationRequest) GetQosClassId() uint32 {
	if m != nil {
		return m.QosClassId
	}
	return 0
}

// TgppContext is a session specific 3GPP context session proxy may meed session manager to persist
type TgppContext struct {
	GxDestHost           string   `protobuf:"bytes,1,opt,name=gx_dest_host,json=gxDestHost,proto3" json:"gx_dest_host,omitempty"`
	GyDestHost           string   `protobuf:"bytes,2,opt,name=gy_dest_host,json=gyDestHost,proto3" json:"gy_dest_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TgppContext) Reset()         { *m = TgppContext{} }
func (m *TgppContext) String() string { return proto.CompactTextString(m) }
func (*TgppContext) ProtoMessage()    {}
func (*TgppContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{23}
}

func (m *TgppContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TgppContext.Unmarshal(m, b)
}
func (m *TgppContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TgppContext.Marshal(b, m, deterministic)
}
func (m *TgppContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TgppContext.Merge(m, src)
}
func (m *TgppContext) XXX_Size() int {
	return xxx_messageInfo_TgppContext.Size(m)
}
func (m *TgppContext) XXX_DiscardUnknown() {
	xxx_messageInfo_TgppContext.DiscardUnknown(m)
}

var xxx_messageInfo_TgppContext proto.InternalMessageInfo

func (m *TgppContext) GetGxDestHost() string {
	if m != nil {
		return m.GxDestHost
	}
	return ""
}

func (m *TgppContext) GetGyDestHost() string {
	if m != nil {
		return m.GyDestHost
	}
	return ""
}

type CreateSessionRequest struct {
	Subscriber           *SubscriberID          `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	SessionId            string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UeIpv4               string                 `protobuf:"bytes,3,opt,name=ue_ipv4,json=ueIpv4,proto3" json:"ue_ipv4,omitempty"`
	SpgwIpv4             string                 `protobuf:"bytes,4,opt,name=spgw_ipv4,json=spgwIpv4,proto3" json:"spgw_ipv4,omitempty"`
	Apn                  string                 `protobuf:"bytes,5,opt,name=apn,proto3" json:"apn,omitempty"`
	Imei                 string                 `protobuf:"bytes,7,opt,name=imei,proto3" json:"imei,omitempty"`
	PlmnId               string                 `protobuf:"bytes,8,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	ImsiPlmnId           string                 `protobuf:"bytes,9,opt,name=imsi_plmn_id,json=imsiPlmnId,proto3" json:"imsi_plmn_id,omitempty"`
	UserLocation         []byte                 `protobuf:"bytes,10,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`
	QosInfo              *QosInformationRequest `protobuf:"bytes,11,opt,name=qos_info,json=qosInfo,proto3" json:"qos_info,omitempty"`
	Msisdn               []byte                 `protobuf:"bytes,12,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	GcId                 string                 `protobuf:"bytes,13,opt,name=gc_id,json=gcId,proto3" json:"gc_id,omitempty"`
	RatType              RATType                `protobuf:"varint,14,opt,name=rat_type,json=ratType,proto3,enum=magma.lte.RATType" json:"rat_type,omitempty"`
	HardwareAddr         []byte                 `protobuf:"bytes,15,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateSessionRequest) Reset()         { *m = CreateSessionRequest{} }
func (m *CreateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSessionRequest) ProtoMessage()    {}
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{24}
}

func (m *CreateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionRequest.Unmarshal(m, b)
}
func (m *CreateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionRequest.Merge(m, src)
}
func (m *CreateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSessionRequest.Size(m)
}
func (m *CreateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionRequest proto.InternalMessageInfo

func (m *CreateSessionRequest) GetSubscriber() *SubscriberID {
	if m != nil {
		return m.Subscriber
	}
	return nil
}

func (m *CreateSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *CreateSessionRequest) GetUeIpv4() string {
	if m != nil {
		return m.UeIpv4
	}
	return ""
}

func (m *CreateSessionRequest) GetSpgwIpv4() string {
	if m != nil {
		return m.SpgwIpv4
	}
	return ""
}

func (m *CreateSessionRequest) GetApn() string {
	if m != nil {
		return m.Apn
	}
	return ""
}

func (m *CreateSessionRequest) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *CreateSessionRequest) GetPlmnId() string {
	if m != nil {
		return m.PlmnId
	}
	return ""
}

func (m *CreateSessionRequest) GetImsiPlmnId() string {
	if m != nil {
		return m.ImsiPlmnId
	}
	return ""
}

func (m *CreateSessionRequest) GetUserLocation() []byte {
	if m != nil {
		return m.UserLocation
	}
	return nil
}

func (m *CreateSessionRequest) GetQosInfo() *QosInformationRequest {
	if m != nil {
		return m.QosInfo
	}
	return nil
}

func (m *CreateSessionRequest) GetMsisdn() []byte {
	if m != nil {
		return m.Msisdn
	}
	return nil
}

func (m *CreateSessionRequest) GetGcId() string {
	if m != nil {
		return m.GcId
	}
	return ""
}

func (m *CreateSessionRequest) GetRatType() RATType {
	if m != nil {
		return m.RatType
	}
	return RATType_TGPP_LTE
}

func (m *CreateSessionRequest) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

type CreateSessionResponse struct {
	Credits              []*CreditUpdateResponse          `protobuf:"bytes,1,rep,name=credits,proto3" json:"credits,omitempty"`
	UsageMonitors        []*UsageMonitoringUpdateResponse `protobuf:"bytes,6,rep,name=usage_monitors,json=usageMonitors,proto3" json:"usage_monitors,omitempty"`
	StaticRules          []*StaticRuleInstall             `protobuf:"bytes,7,rep,name=static_rules,json=staticRules,proto3" json:"static_rules,omitempty"`
	DynamicRules         []*DynamicRuleInstall            `protobuf:"bytes,8,rep,name=dynamic_rules,json=dynamicRules,proto3" json:"dynamic_rules,omitempty"`
	SessionId            string                           `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TgppCtx              *TgppContext                     `protobuf:"bytes,10,opt,name=tgpp_ctx,json=tgppCtx,proto3" json:"tgpp_ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CreateSessionResponse) Reset()         { *m = CreateSessionResponse{} }
func (m *CreateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSessionResponse) ProtoMessage()    {}
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{25}
}

func (m *CreateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionResponse.Unmarshal(m, b)
}
func (m *CreateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionResponse.Marshal(b, m, deterministic)
}
func (m *CreateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionResponse.Merge(m, src)
}
func (m *CreateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSessionResponse.Size(m)
}
func (m *CreateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionResponse proto.InternalMessageInfo

func (m *CreateSessionResponse) GetCredits() []*CreditUpdateResponse {
	if m != nil {
		return m.Credits
	}
	return nil
}

func (m *CreateSessionResponse) GetUsageMonitors() []*UsageMonitoringUpdateResponse {
	if m != nil {
		return m.UsageMonitors
	}
	return nil
}

func (m *CreateSessionResponse) GetStaticRules() []*StaticRuleInstall {
	if m != nil {
		return m.StaticRules
	}
	return nil
}

func (m *CreateSessionResponse) GetDynamicRules() []*DynamicRuleInstall {
	if m != nil {
		return m.DynamicRules
	}
	return nil
}

func (m *CreateSessionResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *CreateSessionResponse) GetTgppCtx() *TgppContext {
	if m != nil {
		return m.TgppCtx
	}
	return nil
}

type StaticRuleInstall struct {
	RuleId               string               `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	ActivationTime       *timestamp.Timestamp `protobuf:"bytes,2,opt,name=activation_time,json=activationTime,proto3" json:"activation_time,omitempty"`
	DeactivationTime     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=deactivation_time,json=deactivationTime,proto3" json:"deactivation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StaticRuleInstall) Reset()         { *m = StaticRuleInstall{} }
func (m *StaticRuleInstall) String() string { return proto.CompactTextString(m) }
func (*StaticRuleInstall) ProtoMessage()    {}
func (*StaticRuleInstall) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{26}
}

func (m *StaticRuleInstall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaticRuleInstall.Unmarshal(m, b)
}
func (m *StaticRuleInstall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaticRuleInstall.Marshal(b, m, deterministic)
}
func (m *StaticRuleInstall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticRuleInstall.Merge(m, src)
}
func (m *StaticRuleInstall) XXX_Size() int {
	return xxx_messageInfo_StaticRuleInstall.Size(m)
}
func (m *StaticRuleInstall) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticRuleInstall.DiscardUnknown(m)
}

var xxx_messageInfo_StaticRuleInstall proto.InternalMessageInfo

func (m *StaticRuleInstall) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func (m *StaticRuleInstall) GetActivationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ActivationTime
	}
	return nil
}

func (m *StaticRuleInstall) GetDeactivationTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeactivationTime
	}
	return nil
}

type DynamicRuleInstall struct {
	PolicyRule           *PolicyRule          `protobuf:"bytes,1,opt,name=policy_rule,json=policyRule,proto3" json:"policy_rule,omitempty"`
	ActivationTime       *timestamp.Timestamp `protobuf:"bytes,2,opt,name=activation_time,json=activationTime,proto3" json:"activation_time,omitempty"`
	DeactivationTime     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=deactivation_time,json=deactivationTime,proto3" json:"deactivation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DynamicRuleInstall) Reset()         { *m = DynamicRuleInstall{} }
func (m *DynamicRuleInstall) String() string { return proto.CompactTextString(m) }
func (*DynamicRuleInstall) ProtoMessage()    {}
func (*DynamicRuleInstall) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{27}
}

func (m *DynamicRuleInstall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicRuleInstall.Unmarshal(m, b)
}
func (m *DynamicRuleInstall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicRuleInstall.Marshal(b, m, deterministic)
}
func (m *DynamicRuleInstall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicRuleInstall.Merge(m, src)
}
func (m *DynamicRuleInstall) XXX_Size() int {
	return xxx_messageInfo_DynamicRuleInstall.Size(m)
}
func (m *DynamicRuleInstall) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicRuleInstall.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicRuleInstall proto.InternalMessageInfo

func (m *DynamicRuleInstall) GetPolicyRule() *PolicyRule {
	if m != nil {
		return m.PolicyRule
	}
	return nil
}

func (m *DynamicRuleInstall) GetActivationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ActivationTime
	}
	return nil
}

func (m *DynamicRuleInstall) GetDeactivationTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeactivationTime
	}
	return nil
}

type UpdateSessionRequest struct {
	Updates              []*CreditUsageUpdate            `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	UsageMonitors        []*UsageMonitoringUpdateRequest `protobuf:"bytes,3,rep,name=usage_monitors,json=usageMonitors,proto3" json:"usage_monitors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UpdateSessionRequest) Reset()         { *m = UpdateSessionRequest{} }
func (m *UpdateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSessionRequest) ProtoMessage()    {}
func (*UpdateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{28}
}

func (m *UpdateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSessionRequest.Unmarshal(m, b)
}
func (m *UpdateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSessionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSessionRequest.Merge(m, src)
}
func (m *UpdateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSessionRequest.Size(m)
}
func (m *UpdateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSessionRequest proto.InternalMessageInfo

func (m *UpdateSessionRequest) GetUpdates() []*CreditUsageUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *UpdateSessionRequest) GetUsageMonitors() []*UsageMonitoringUpdateRequest {
	if m != nil {
		return m.UsageMonitors
	}
	return nil
}

type UpdateSessionResponse struct {
	Responses             []*CreditUpdateResponse          `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	UsageMonitorResponses []*UsageMonitoringUpdateResponse `protobuf:"bytes,3,rep,name=usage_monitor_responses,json=usageMonitorResponses,proto3" json:"usage_monitor_responses,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                         `json:"-"`
	XXX_unrecognized      []byte                           `json:"-"`
	XXX_sizecache         int32                            `json:"-"`
}

func (m *UpdateSessionResponse) Reset()         { *m = UpdateSessionResponse{} }
func (m *UpdateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSessionResponse) ProtoMessage()    {}
func (*UpdateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{29}
}

func (m *UpdateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSessionResponse.Unmarshal(m, b)
}
func (m *UpdateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSessionResponse.Marshal(b, m, deterministic)
}
func (m *UpdateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSessionResponse.Merge(m, src)
}
func (m *UpdateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSessionResponse.Size(m)
}
func (m *UpdateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSessionResponse proto.InternalMessageInfo

func (m *UpdateSessionResponse) GetResponses() []*CreditUpdateResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *UpdateSessionResponse) GetUsageMonitorResponses() []*UsageMonitoringUpdateResponse {
	if m != nil {
		return m.UsageMonitorResponses
	}
	return nil
}

type SessionTerminateResponse struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionTerminateResponse) Reset()         { *m = SessionTerminateResponse{} }
func (m *SessionTerminateResponse) String() string { return proto.CompactTextString(m) }
func (*SessionTerminateResponse) ProtoMessage()    {}
func (*SessionTerminateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{30}
}

func (m *SessionTerminateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionTerminateResponse.Unmarshal(m, b)
}
func (m *SessionTerminateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionTerminateResponse.Marshal(b, m, deterministic)
}
func (m *SessionTerminateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionTerminateResponse.Merge(m, src)
}
func (m *SessionTerminateResponse) XXX_Size() int {
	return xxx_messageInfo_SessionTerminateResponse.Size(m)
}
func (m *SessionTerminateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionTerminateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionTerminateResponse proto.InternalMessageInfo

func (m *SessionTerminateResponse) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *SessionTerminateResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type SessionTerminateRequest struct {
	Sid                  string                `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	SessionId            string                `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Apn                  string                `protobuf:"bytes,3,opt,name=apn,proto3" json:"apn,omitempty"`
	RequestNumber        uint32                `protobuf:"varint,4,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	CreditUsages         []*CreditUsage        `protobuf:"bytes,5,rep,name=credit_usages,json=creditUsages,proto3" json:"credit_usages,omitempty"`
	MonitorUsages        []*UsageMonitorUpdate `protobuf:"bytes,6,rep,name=monitor_usages,json=monitorUsages,proto3" json:"monitor_usages,omitempty"`
	UeIpv4               string                `protobuf:"bytes,7,opt,name=ue_ipv4,json=ueIpv4,proto3" json:"ue_ipv4,omitempty"`
	Msisdn               []byte                `protobuf:"bytes,8,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	SpgwIpv4             string                `protobuf:"bytes,9,opt,name=spgw_ipv4,json=spgwIpv4,proto3" json:"spgw_ipv4,omitempty"`
	Imei                 string                `protobuf:"bytes,10,opt,name=imei,proto3" json:"imei,omitempty"`
	PlmnId               string                `protobuf:"bytes,11,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	ImsiPlmnId           string                `protobuf:"bytes,12,opt,name=imsi_plmn_id,json=imsiPlmnId,proto3" json:"imsi_plmn_id,omitempty"`
	UserLocation         []byte                `protobuf:"bytes,13,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`
	RatType              RATType               `protobuf:"varint,14,opt,name=rat_type,json=ratType,proto3,enum=magma.lte.RATType" json:"rat_type,omitempty"`
	HardwareAddr         []byte                `protobuf:"bytes,15,opt,name=hardware_addr,json=hardwareAddr,proto3" json:"hardware_addr,omitempty"`
	TgppCtx              *TgppContext          `protobuf:"bytes,16,opt,name=tgpp_ctx,json=tgppCtx,proto3" json:"tgpp_ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SessionTerminateRequest) Reset()         { *m = SessionTerminateRequest{} }
func (m *SessionTerminateRequest) String() string { return proto.CompactTextString(m) }
func (*SessionTerminateRequest) ProtoMessage()    {}
func (*SessionTerminateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85add0446af78174, []int{31}
}

func (m *SessionTerminateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionTerminateRequest.Unmarshal(m, b)
}
func (m *SessionTerminateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionTerminateRequest.Marshal(b, m, deterministic)
}
func (m *SessionTerminateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionTerminateRequest.Merge(m, src)
}
func (m *SessionTerminateRequest) XXX_Size() int {
	return xxx_messageInfo_SessionTerminateRequest.Size(m)
}
func (m *SessionTerminateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionTerminateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionTerminateRequest proto.InternalMessageInfo

func (m *SessionTerminateRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *SessionTerminateRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *SessionTerminateRequest) GetApn() string {
	if m != nil {
		return m.Apn
	}
	return ""
}

func (m *SessionTerminateRequest) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *SessionTerminateRequest) GetCreditUsages() []*CreditUsage {
	if m != nil {
		return m.CreditUsages
	}
	return nil
}

func (m *SessionTerminateRequest) GetMonitorUsages() []*UsageMonitorUpdate {
	if m != nil {
		return m.MonitorUsages
	}
	return nil
}

func (m *SessionTerminateRequest) GetUeIpv4() string {
	if m != nil {
		return m.UeIpv4
	}
	return ""
}

func (m *SessionTerminateRequest) GetMsisdn() []byte {
	if m != nil {
		return m.Msisdn
	}
	return nil
}

func (m *SessionTerminateRequest) GetSpgwIpv4() string {
	if m != nil {
		return m.SpgwIpv4
	}
	return ""
}

func (m *SessionTerminateRequest) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SessionTerminateRequest) GetPlmnId() string {
	if m != nil {
		return m.PlmnId
	}
	return ""
}

func (m *SessionTerminateRequest) GetImsiPlmnId() string {
	if m != nil {
		return m.ImsiPlmnId
	}
	return ""
}

func (m *SessionTerminateRequest) GetUserLocation() []byte {
	if m != nil {
		return m.UserLocation
	}
	return nil
}

func (m *SessionTerminateRequest) GetRatType() RATType {
	if m != nil {
		return m.RatType
	}
	return RATType_TGPP_LTE
}

func (m *SessionTerminateRequest) GetHardwareAddr() []byte {
	if m != nil {
		return m.HardwareAddr
	}
	return nil
}

func (m *SessionTerminateRequest) GetTgppCtx() *TgppContext {
	if m != nil {
		return m.TgppCtx
	}
	return nil
}

func init() {
	proto.RegisterEnum("magma.lte.RATType", RATType_name, RATType_value)
	proto.RegisterEnum("magma.lte.EventTrigger", EventTrigger_name, EventTrigger_value)
	proto.RegisterEnum("magma.lte.QCI", QCI_name, QCI_value)
	proto.RegisterEnum("magma.lte.ReAuthResult", ReAuthResult_name, ReAuthResult_value)
	proto.RegisterEnum("magma.lte.MonitoringLevel", MonitoringLevel_name, MonitoringLevel_value)
	proto.RegisterEnum("magma.lte.ChargingReAuthRequest_Type", ChargingReAuthRequest_Type_name, ChargingReAuthRequest_Type_value)
	proto.RegisterEnum("magma.lte.ChargingReAuthAnswer_Result", ChargingReAuthAnswer_Result_name, ChargingReAuthAnswer_Result_value)
	proto.RegisterEnum("magma.lte.PolicyReAuthAnswer_FailureCode", PolicyReAuthAnswer_FailureCode_name, PolicyReAuthAnswer_FailureCode_value)
	proto.RegisterEnum("magma.lte.RedirectServer_RedirectAddressType", RedirectServer_RedirectAddressType_name, RedirectServer_RedirectAddressType_value)
	proto.RegisterEnum("magma.lte.ChargingCredit_UnitType", ChargingCredit_UnitType_name, ChargingCredit_UnitType_value)
	proto.RegisterEnum("magma.lte.ChargingCredit_FinalAction", ChargingCredit_FinalAction_name, ChargingCredit_FinalAction_value)
	proto.RegisterEnum("magma.lte.CreditUsage_UpdateType", CreditUsage_UpdateType_name, CreditUsage_UpdateType_value)
	proto.RegisterEnum("magma.lte.CreditUpdateResponse_ResponseType", CreditUpdateResponse_ResponseType_name, CreditUpdateResponse_ResponseType_value)
	proto.RegisterEnum("magma.lte.CreditUpdateResponse_CreditLimitType", CreditUpdateResponse_CreditLimitType_name, CreditUpdateResponse_CreditLimitType_value)
	proto.RegisterEnum("magma.lte.UsageMonitoringCredit_Action", UsageMonitoringCredit_Action_name, UsageMonitoringCredit_Action_value)
	proto.RegisterType((*RuleRecord)(nil), "magma.lte.RuleRecord")
	proto.RegisterType((*RuleRecordTable)(nil), "magma.lte.RuleRecordTable")
	proto.RegisterType((*LocalCreateSessionRequest)(nil), "magma.lte.LocalCreateSessionRequest")
	proto.RegisterType((*LocalCreateSessionResponse)(nil), "magma.lte.LocalCreateSessionResponse")
	proto.RegisterType((*LocalEndSessionRequest)(nil), "magma.lte.LocalEndSessionRequest")
	proto.RegisterType((*LocalEndSessionResponse)(nil), "magma.lte.LocalEndSessionResponse")
	proto.RegisterType((*ChargingReAuthRequest)(nil), "magma.lte.ChargingReAuthRequest")
	proto.RegisterType((*ChargingReAuthAnswer)(nil), "magma.lte.ChargingReAuthAnswer")
	proto.RegisterType((*PolicyReAuthRequest)(nil), "magma.lte.PolicyReAuthRequest")
	proto.RegisterType((*QoSInformation)(nil), "magma.lte.QoSInformation")
	proto.RegisterType((*PolicyReAuthAnswer)(nil), "magma.lte.PolicyReAuthAnswer")
	proto.RegisterMapType((map[string]PolicyReAuthAnswer_FailureCode)(nil), "magma.lte.PolicyReAuthAnswer.FailedRulesEntry")
	proto.RegisterType((*CreditUnit)(nil), "magma.lte.CreditUnit")
	proto.RegisterType((*GrantedUnits)(nil), "magma.lte.GrantedUnits")
	proto.RegisterType((*RedirectServer)(nil), "magma.lte.RedirectServer")
	proto.RegisterType((*ChargingCredit)(nil), "magma.lte.ChargingCredit")
	proto.RegisterType((*CreditUsage)(nil), "magma.lte.CreditUsage")
	proto.RegisterType((*CreditUsageUpdate)(nil), "magma.lte.CreditUsageUpdate")
	proto.RegisterType((*CreditUpdateResponse)(nil), "magma.lte.CreditUpdateResponse")
	proto.RegisterType((*UsageMonitorUpdate)(nil), "magma.lte.UsageMonitorUpdate")
	proto.RegisterType((*UsageMonitoringCredit)(nil), "magma.lte.UsageMonitoringCredit")
	proto.RegisterType((*UsageMonitoringUpdateRequest)(nil), "magma.lte.UsageMonitoringUpdateRequest")
	proto.RegisterType((*UsageMonitoringUpdateResponse)(nil), "magma.lte.UsageMonitoringUpdateResponse")
	proto.RegisterType((*QosInformationRequest)(nil), "magma.lte.QosInformationRequest")
	proto.RegisterType((*TgppContext)(nil), "magma.lte.TgppContext")
	proto.RegisterType((*CreateSessionRequest)(nil), "magma.lte.CreateSessionRequest")
	proto.RegisterType((*CreateSessionResponse)(nil), "magma.lte.CreateSessionResponse")
	proto.RegisterType((*StaticRuleInstall)(nil), "magma.lte.StaticRuleInstall")
	proto.RegisterType((*DynamicRuleInstall)(nil), "magma.lte.DynamicRuleInstall")
	proto.RegisterType((*UpdateSessionRequest)(nil), "magma.lte.UpdateSessionRequest")
	proto.RegisterType((*UpdateSessionResponse)(nil), "magma.lte.UpdateSessionResponse")
	proto.RegisterType((*SessionTerminateResponse)(nil), "magma.lte.SessionTerminateResponse")
	proto.RegisterType((*SessionTerminateRequest)(nil), "magma.lte.SessionTerminateRequest")
}

func init() { proto.RegisterFile("lte/protos/session_manager.proto", fileDescriptor_85add0446af78174) }

var fileDescriptor_85add0446af78174 = []byte{
	// 4212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x4b, 0x73, 0xe3, 0xc6,
	0x76, 0x16, 0x49, 0x89, 0x8f, 0xc3, 0x87, 0xa0, 0x96, 0x34, 0xa2, 0xe4, 0x79, 0x68, 0x30, 0x1e,
	0x7b, 0xee, 0xd8, 0x96, 0x6c, 0xd9, 0x1e, 0xdb, 0x71, 0x72, 0x27, 0x10, 0xd8, 0x92, 0x90, 0x21,
	0x01, 0xaa, 0x01, 0x6a, 0xc6, 0xae, 0x4a, 0x3a, 0x14, 0x89, 0x91, 0x51, 0x97, 0xaf, 0x01, 0x40,
	0x59, 0xfa, 0x09, 0xd9, 0xdd, 0x45, 0xb2, 0xcd, 0xe6, 0x56, 0x56, 0x59, 0x26, 0x55, 0x79, 0x2d,
	0x52, 0xf9, 0x01, 0xa9, 0xac, 0x92, 0x45, 0x7e, 0x41, 0x16, 0x59, 0x64, 0x71, 0x57, 0x59, 0xa5,
	0xfa, 0x01, 0x12, 0x10, 0x29, 0x69, 0x3c, 0xf7, 0xde, 0xaa, 0xac, 0xd0, 0x38, 0x7d, 0xfa, 0xf4,
	0xe3, 0x74, 0x7f, 0xe7, 0xf4, 0x39, 0x0d, 0xdb, 0xbd, 0xd0, 0xdd, 0x1d, 0xf9, 0xc3, 0x70, 0x18,
	0xec, 0x06, 0x6e, 0x10, 0x78, 0xc3, 0x01, 0xed, 0xb7, 0x07, 0xed, 0x33, 0xd7, 0xdf, 0xe1, 0x64,
	0x54, 0xe8, 0xb7, 0xcf, 0xfa, 0xed, 0x9d, 0x5e, 0xe8, 0x6e, 0x6d, 0x0e, 0xfd, 0xce, 0xd7, 0x7e,
	0xc4, 0xde, 0x19, 0xf6, 0xfb, 0xc3, 0x81, 0xe0, 0xda, 0xda, 0x8c, 0xc9, 0x19, 0x0d, 0x7b, 0x5e,
	0xe7, 0xb2, 0x7b, 0x2a, 0xab, 0xee, 0xc5, 0xbb, 0x18, 0x9f, 0x06, 0x1d, 0xdf, 0x3b, 0x75, 0xfd,
	0x49, 0xf5, 0x83, 0xb3, 0xe1, 0xf0, 0xac, 0x27, 0x39, 0x4e, 0xc7, 0xaf, 0x77, 0x43, 0xaf, 0xef,
	0x06, 0x61, 0xbb, 0x3f, 0x12, 0x0c, 0x6a, 0x1f, 0x80, 0x8c, 0x7b, 0x2e, 0x71, 0x3b, 0x43, 0xbf,
	0x8b, 0x14, 0xc8, 0x04, 0x5e, 0xb7, 0x9a, 0xda, 0x4e, 0x3d, 0x29, 0x10, 0x56, 0x44, 0x1b, 0x90,
	0xf3, 0xc7, 0x3d, 0x97, 0x7a, 0xdd, 0x6a, 0x9a, 0x53, 0xb3, 0xec, 0xd7, 0xe8, 0xa2, 0x4d, 0xc8,
	0x9f, 0x5e, 0x86, 0x6e, 0x40, 0xc3, 0x8b, 0x6a, 0x66, 0x3b, 0xf5, 0x64, 0x91, 0xe4, 0xf8, 0xbf,
	0x73, 0x31, 0xad, 0xf2, 0x2f, 0xaa, 0x8b, 0xb1, 0x2a, 0x72, 0xa1, 0xbe, 0x82, 0xe5, 0x69, 0x77,
	0x4e, 0xfb, 0xb4, 0xe7, 0xa2, 0x5d, 0xc8, 0xf9, 0xfc, 0x37, 0xa8, 0xa6, 0xb6, 0x33, 0x4f, 0x8a,
	0x7b, 0xeb, 0x3b, 0x93, 0x45, 0xd9, 0x99, 0x32, 0x93, 0x88, 0x0b, 0xad, 0xc1, 0x92, 0x3b, 0x1a,
	0x76, 0x7e, 0xe0, 0x03, 0x5a, 0x24, 0xe2, 0x47, 0xfd, 0x75, 0x06, 0x36, 0xeb, 0xc3, 0x4e, 0xbb,
	0xa7, 0xfb, 0x6e, 0x3b, 0x74, 0x6d, 0xb1, 0xdc, 0xc4, 0x7d, 0x33, 0x76, 0x83, 0x10, 0xfd, 0x6c,
	0x3a, 0xb1, 0xe2, 0xde, 0x46, 0xac, 0x03, 0x7b, 0xb2, 0x66, 0x46, 0x6d, 0x32, 0xe3, 0xb1, 0x4b,
	0xbd, 0xd1, 0xf9, 0x17, 0xd1, 0x8c, 0xc7, 0xae, 0x31, 0x3a, 0xff, 0x02, 0xbd, 0x07, 0x85, 0x60,
	0x74, 0xf6, 0xa3, 0xa8, 0xca, 0xf0, 0xaa, 0x3c, 0x23, 0xf0, 0x4a, 0x05, 0x32, 0xed, 0xd1, 0x80,
	0x4f, 0xb7, 0x40, 0x58, 0x11, 0x21, 0x58, 0xf4, 0xfa, 0xae, 0x57, 0xcd, 0x72, 0x12, 0x2f, 0x33,
	0xd9, 0xa3, 0x5e, 0x7f, 0xc0, 0x56, 0x33, 0x27, 0x64, 0xb3, 0x5f, 0xa3, 0x8b, 0xb6, 0xa1, 0xe4,
	0xf5, 0x03, 0x8f, 0x46, 0xb5, 0x79, 0x5e, 0x0b, 0x8c, 0xd6, 0x14, 0x1c, 0x8f, 0xa0, 0x3c, 0x0e,
	0x5c, 0x9f, 0xf6, 0x86, 0x9d, 0x76, 0xe8, 0x0d, 0x07, 0xd5, 0xc2, 0x76, 0xea, 0x49, 0x89, 0x94,
	0x18, 0xb1, 0x2e, 0x69, 0xe8, 0x5b, 0xc8, 0xbf, 0x19, 0x06, 0xd4, 0x1b, 0xbc, 0x1e, 0x56, 0x81,
	0xcf, 0x75, 0x3b, 0x36, 0xd7, 0xe3, 0x61, 0x60, 0x0c, 0x5e, 0x0f, 0xfd, 0x3e, 0x67, 0x96, 0x4b,
	0x43, 0x72, 0x6f, 0x04, 0x19, 0xdd, 0x81, 0x6c, 0x3f, 0xf0, 0x82, 0xee, 0xa0, 0x5a, 0xe4, 0xa2,
	0xe5, 0x1f, 0xfa, 0x04, 0xf2, 0x7e, 0x3b, 0xa4, 0xe1, 0xe5, 0xc8, 0xad, 0x96, 0xb6, 0x53, 0x4f,
	0x2a, 0x7b, 0x28, 0xae, 0x21, 0xcd, 0x71, 0x2e, 0x47, 0x2e, 0xc9, 0xf9, 0xed, 0x90, 0x15, 0xd8,
	0x40, 0x7f, 0x68, 0xfb, 0xdd, 0x1f, 0xdb, 0xbe, 0x4b, 0xdb, 0xdd, 0xae, 0x5f, 0x2d, 0x8b, 0x81,
	0x46, 0x44, 0xad, 0xdb, 0xf5, 0xd1, 0x53, 0x58, 0xf1, 0xdb, 0x5d, 0x6f, 0x1c, 0xd0, 0xe8, 0x5c,
	0x78, 0xdd, 0x6a, 0x85, 0x4f, 0x7a, 0x59, 0x54, 0x48, 0x05, 0x1a, 0x5d, 0xb6, 0xee, 0xa7, 0x6e,
	0xdb, 0x77, 0x7d, 0xc6, 0xb3, 0xbc, 0x9d, 0x7a, 0x52, 0x26, 0x79, 0x41, 0x30, 0xba, 0xea, 0xb7,
	0xb0, 0x35, 0x4f, 0xeb, 0xc1, 0x68, 0x38, 0x08, 0x5c, 0x74, 0x0f, 0x20, 0x26, 0x5f, 0x6c, 0xeb,
	0x42, 0x10, 0x49, 0x56, 0x5b, 0x70, 0x87, 0x37, 0xc6, 0x83, 0xee, 0xbb, 0xef, 0x17, 0xa9, 0xf9,
	0xf4, 0x44, 0xf3, 0xea, 0x26, 0x6c, 0xcc, 0x88, 0x15, 0x03, 0x52, 0x7f, 0x95, 0x86, 0x75, 0xfd,
	0x87, 0xb6, 0x7f, 0xe6, 0x0d, 0xce, 0x88, 0xab, 0x8d, 0xc3, 0x1f, 0xa2, 0x1e, 0x6f, 0x1e, 0x2a,
	0x7a, 0x08, 0xa5, 0x8e, 0x6c, 0x47, 0x7f, 0xe1, 0x5e, 0xf2, 0xee, 0xca, 0xa4, 0x18, 0xd1, 0x5e,
	0xb8, 0x97, 0xd1, 0xe1, 0xcd, 0x4c, 0x0f, 0xef, 0x37, 0xb0, 0xc8, 0xb5, 0xb6, 0xc8, 0xb5, 0xf6,
	0x38, 0x36, 0x8d, 0xb9, 0x63, 0xd8, 0xe1, 0x8a, 0xe4, 0x4d, 0xd0, 0x0b, 0x40, 0x81, 0xeb, 0x9f,
	0x7b, 0x1d, 0x76, 0xf4, 0xdd, 0x41, 0xe8, 0xbd, 0xf6, 0x5c, 0xbf, 0xba, 0xc4, 0xd7, 0xe3, 0x6e,
	0x7c, 0x3d, 0x04, 0x93, 0x31, 0xe1, 0x21, 0x2b, 0xc1, 0x55, 0x92, 0xba, 0x03, 0x8b, 0x7c, 0x6b,
	0x20, 0xa8, 0xd8, 0x86, 0x79, 0x58, 0xc7, 0xd4, 0xc6, 0xe4, 0xc4, 0xd0, 0xb1, 0xb2, 0xc0, 0x68,
	0xd8, 0x74, 0x0c, 0xc2, 0x68, 0xb6, 0x6d, 0x58, 0xa6, 0x92, 0x52, 0xff, 0x2e, 0x05, 0x6b, 0xc9,
	0x11, 0x6a, 0x83, 0xe0, 0x47, 0xd7, 0x47, 0x3f, 0x87, 0xac, 0xef, 0x06, 0xe3, 0x5e, 0xc8, 0x17,
	0xa8, 0xb2, 0xf7, 0xc1, 0xb5, 0x53, 0x12, 0x0d, 0x76, 0x08, 0xe7, 0x26, 0xb2, 0x95, 0x4a, 0x21,
	0x2b, 0x28, 0x68, 0x0d, 0x94, 0x56, 0xb3, 0xa6, 0x39, 0x98, 0x1a, 0xa6, 0xe1, 0x18, 0x9a, 0x83,
	0x6b, 0xca, 0x02, 0x5a, 0x87, 0x15, 0x49, 0x35, 0x2d, 0x87, 0x9a, 0x18, 0xd7, 0x70, 0x4d, 0x49,
	0x31, 0xb2, 0x1c, 0x1c, 0xa7, 0x1f, 0x58, 0x2d, 0xb3, 0xa6, 0xa4, 0xd1, 0x0a, 0x94, 0x2d, 0xe7,
	0x08, 0x13, 0x7a, 0xa0, 0x19, 0xf5, 0x16, 0xc1, 0x4a, 0x46, 0xfd, 0xeb, 0x45, 0x58, 0x6d, 0x72,
	0x84, 0xfe, 0x49, 0xda, 0xe5, 0x58, 0x11, 0x78, 0x72, 0x13, 0xf1, 0x32, 0xfa, 0x00, 0x96, 0x19,
	0xd4, 0x06, 0x34, 0x1c, 0x52, 0xdf, 0xed, 0x0f, 0xcf, 0xdd, 0x6a, 0x66, 0x3b, 0xf3, 0xa4, 0x40,
	0xca, 0x9c, 0xec, 0x0c, 0x09, 0x27, 0xa2, 0x03, 0x50, 0x26, 0x7c, 0xde, 0x20, 0x08, 0xdb, 0xbd,
	0x5e, 0x35, 0xcb, 0x81, 0x34, 0xa1, 0xa7, 0xb0, 0x1d, 0x7a, 0x1d, 0x06, 0xa7, 0x86, 0xe0, 0x21,
	0x15, 0x29, 0x46, 0xfe, 0xa3, 0x13, 0xa8, 0x76, 0x2f, 0x07, 0xed, 0xbe, 0xd7, 0xa1, 0x33, 0xf2,
	0x72, 0x5c, 0xde, 0xbd, 0x98, 0xbc, 0x9a, 0x60, 0x8d, 0x0b, 0x5c, 0xef, 0x4e, 0x69, 0x31, 0xb9,
	0x3f, 0x87, 0x8a, 0x7b, 0xee, 0x0e, 0x42, 0x1a, 0xfa, 0xde, 0xd9, 0x99, 0xeb, 0x07, 0xd5, 0xfc,
	0x76, 0xe6, 0x49, 0x25, 0x71, 0xaa, 0x30, 0x63, 0x70, 0x44, 0x3d, 0x29, 0xbb, 0xb1, 0xbf, 0x00,
	0x1d, 0xc2, 0x8a, 0xef, 0x9e, 0xb7, 0x7b, 0x5e, 0x97, 0xc3, 0x16, 0x65, 0x16, 0x8c, 0x83, 0x5f,
	0x71, 0x6f, 0x6b, 0x47, 0x98, 0xb7, 0x9d, 0xc8, 0xbc, 0xed, 0x38, 0x91, 0x79, 0x23, 0x4a, 0xbc,
	0x11, 0x23, 0xa3, 0xef, 0xa1, 0x3a, 0x0e, 0xda, 0x67, 0x2e, 0xed, 0x0f, 0x07, 0x5e, 0x38, 0xf4,
	0xd9, 0x51, 0xea, 0xf8, 0x6e, 0xd7, 0x0b, 0x83, 0x2a, 0xf0, 0x09, 0xc6, 0xc1, 0xb2, 0xc5, 0x58,
	0x1b, 0x13, 0x4e, 0x9d, 0x33, 0x92, 0x3b, 0xe3, 0x79, 0xe4, 0x00, 0x7d, 0x11, 0x03, 0xde, 0x22,
	0x1f, 0xdb, 0x66, 0x02, 0x78, 0xed, 0x38, 0xf0, 0x46, 0x88, 0xab, 0x5a, 0x50, 0x49, 0x56, 0x25,
	0xb1, 0x4e, 0x6c, 0x93, 0x09, 0xd6, 0xa1, 0x6d, 0xc8, 0xbc, 0xe9, 0x88, 0x4d, 0x52, 0xd9, 0xab,
	0xc4, 0xe5, 0xeb, 0x06, 0x61, 0x55, 0xea, 0x5f, 0xe4, 0x01, 0xc5, 0xb7, 0x9f, 0x3c, 0x36, 0xb7,
	0xec, 0xbe, 0xdd, 0xc9, 0xa9, 0x12, 0xa2, 0xe3, 0x9a, 0x89, 0xb6, 0x71, 0xfc, 0x18, 0xa1, 0x63,
	0x28, 0xbd, 0x6e, 0x7b, 0x3d, 0xb7, 0x2b, 0x76, 0x0a, 0xdf, 0x97, 0xc5, 0xbd, 0x9d, 0x58, 0xb3,
	0xd9, 0x41, 0xec, 0x1c, 0xf0, 0x16, 0x7c, 0x73, 0xe0, 0x41, 0xe8, 0x5f, 0x92, 0xe2, 0xeb, 0x29,
	0x65, 0xcb, 0x03, 0xe5, 0x2a, 0x03, 0x03, 0x34, 0x06, 0x75, 0xd2, 0x1b, 0xf9, 0x85, 0x7b, 0x89,
	0x9e, 0xc3, 0xd2, 0x79, 0xbb, 0x37, 0x76, 0xe5, 0x40, 0x7f, 0x76, 0x7b, 0x8f, 0x63, 0xdf, 0xd5,
	0x87, 0x5d, 0x97, 0x88, 0x76, 0xbf, 0x97, 0xfe, 0x3a, 0xa5, 0xfe, 0xcf, 0x12, 0x14, 0x63, 0x55,
	0x08, 0x20, 0xdb, 0x32, 0x5b, 0xf6, 0x04, 0x00, 0xcc, 0x17, 0xa6, 0xf5, 0xd2, 0xa4, 0xa4, 0x55,
	0xc7, 0xd4, 0xd4, 0x1a, 0x58, 0x49, 0xa1, 0x3b, 0x80, 0x88, 0xe6, 0x18, 0xe6, 0x21, 0x3d, 0x24,
	0x56, 0xab, 0x49, 0x31, 0x21, 0x16, 0x51, 0xd2, 0xe8, 0x2e, 0x54, 0x25, 0x92, 0x51, 0xa3, 0xc6,
	0x60, 0xec, 0xc0, 0xc0, 0x44, 0xd6, 0x66, 0xd0, 0x06, 0xac, 0x1e, 0xbe, 0xa4, 0x4d, 0x1d, 0x1f,
	0xd0, 0x86, 0x56, 0x3f, 0x68, 0x99, 0xba, 0xc3, 0xf0, 0x6d, 0x11, 0x55, 0x61, 0x8d, 0x60, 0xdb,
	0x6a, 0x11, 0x1d, 0xdb, 0xb4, 0x6e, 0x34, 0x0c, 0x47, 0xe3, 0x35, 0x4b, 0x68, 0x0b, 0xee, 0x34,
	0xb4, 0x57, 0xd4, 0x24, 0x74, 0x1f, 0x6b, 0x04, 0x13, 0x9b, 0x12, 0xac, 0xe9, 0x47, 0xb8, 0xa6,
	0x64, 0xe3, 0x63, 0x13, 0x95, 0xd4, 0xa8, 0x29, 0x39, 0x46, 0x6e, 0x18, 0x36, 0xc3, 0xd5, 0x18,
	0x39, 0xcf, 0x86, 0x16, 0x91, 0x0f, 0xea, 0xd6, 0x4b, 0x6a, 0x98, 0x07, 0x16, 0x69, 0x88, 0x7e,
	0x0a, 0xe8, 0x01, 0xbc, 0x17, 0x8d, 0x80, 0x6a, 0xf5, 0xba, 0xa5, 0xf3, 0x8a, 0x09, 0x90, 0x01,
	0x63, 0x68, 0x99, 0x76, 0x4b, 0xd7, 0xb1, 0x6d, 0x1f, 0xb4, 0xea, 0xf4, 0xd8, 0xb2, 0xe9, 0x89,
	0x56, 0x37, 0x6a, 0x42, 0x42, 0x11, 0xdd, 0x87, 0x2d, 0xc3, 0xd4, 0x2d, 0x42, 0xb0, 0xee, 0xcc,
	0xf6, 0x50, 0x62, 0xc3, 0x6a, 0xda, 0xd4, 0xb1, 0xa8, 0x6e, 0xd3, 0x23, 0xcd, 0xac, 0x59, 0x27,
	0x98, 0x28, 0x65, 0xf4, 0x3e, 0x6c, 0x3b, 0xb5, 0x03, 0xaa, 0x35, 0x9b, 0x75, 0x43, 0x76, 0x3a,
	0xb3, 0x72, 0x15, 0xb4, 0x0a, 0xcb, 0xa6, 0x15, 0x4d, 0x47, 0xc0, 0xed, 0x32, 0x5b, 0xce, 0x03,
	0xa3, 0xee, 0x60, 0x42, 0x09, 0xb6, 0x1d, 0x62, 0xf0, 0xd5, 0xb4, 0x15, 0x05, 0x29, 0x50, 0xd2,
	0x4c, 0x7a, 0xf8, 0x92, 0x0f, 0x1f, 0xd7, 0x94, 0x15, 0xf4, 0x08, 0x1e, 0x44, 0x93, 0x27, 0xb8,
	0x66, 0xf0, 0x31, 0x32, 0x45, 0x61, 0x42, 0xb5, 0x5a, 0x8d, 0x60, 0xdb, 0x56, 0x10, 0x9b, 0x81,
	0xde, 0xa0, 0xd8, 0xac, 0xd1, 0x96, 0x8d, 0x49, 0x64, 0x92, 0x68, 0x0d, 0x9b, 0x06, 0xae, 0x29,
	0xab, 0x6c, 0xa8, 0x7a, 0x83, 0xea, 0x4c, 0x80, 0x43, 0x75, 0xcb, 0x74, 0x88, 0x55, 0xe7, 0xf8,
	0x2f, 0x07, 0xbf, 0x5f, 0xc7, 0xca, 0x1a, 0xba, 0x07, 0x9b, 0x7a, 0x83, 0x6a, 0x2d, 0xe7, 0xc8,
	0x22, 0xc6, 0xf7, 0x62, 0x46, 0x04, 0xff, 0x11, 0xd6, 0x99, 0x45, 0x59, 0x67, 0x33, 0xd1, 0x1b,
	0xa2, 0x03, 0xa9, 0x3c, 0xe5, 0x0e, 0x33, 0x3e, 0x7a, 0x83, 0xca, 0x1d, 0x25, 0x07, 0xbd, 0xc1,
	0x74, 0x4f, 0xac, 0x16, 0xa7, 0xf1, 0xbd, 0x27, 0xa4, 0xb0, 0xd5, 0xac, 0xa2, 0x0f, 0x40, 0x9d,
	0xec, 0x4b, 0xc9, 0xa3, 0x71, 0xdd, 0x24, 0x56, 0x7d, 0x93, 0xad, 0xba, 0x69, 0x51, 0x73, 0xdf,
	0x38, 0xb0, 0x1a, 0xd4, 0x6e, 0x35, 0x9b, 0x16, 0x71, 0x94, 0x2d, 0xf5, 0x39, 0x80, 0x40, 0xaa,
	0xd6, 0xc0, 0x0b, 0x99, 0x7f, 0xee, 0x05, 0x94, 0xa3, 0x23, 0x3f, 0x5c, 0x79, 0x92, 0xf3, 0x82,
	0x13, 0xf6, 0xcb, 0x7c, 0xc0, 0xf3, 0x61, 0x6f, 0xdc, 0x77, 0xa5, 0x73, 0x2d, 0xff, 0xd4, 0x3f,
	0x4b, 0x41, 0xe9, 0xd0, 0x6f, 0x0f, 0x42, 0xb7, 0xcb, 0x44, 0x04, 0xe8, 0x23, 0x58, 0x0a, 0x87,
	0x61, 0xbb, 0x27, 0x5d, 0xa4, 0xb8, 0xcf, 0x3e, 0xed, 0x89, 0x08, 0x1e, 0xf4, 0x18, 0xd2, 0xe1,
	0x05, 0x97, 0x78, 0x2d, 0x67, 0x3a, 0xbc, 0x60, 0x6c, 0xbe, 0xb8, 0x4c, 0x5c, 0xcf, 0xe6, 0x5f,
	0xa8, 0xff, 0x9d, 0x82, 0x0a, 0x71, 0xbb, 0x9e, 0xef, 0x76, 0x42, 0xe6, 0x7e, 0xb8, 0x3e, 0x6a,
	0xc3, 0xba, 0x2f, 0x29, 0xdc, 0xe7, 0x74, 0x83, 0x40, 0xf8, 0xab, 0xc2, 0x4d, 0xf8, 0x24, 0x01,
	0x68, 0xf1, 0x96, 0x93, 0x5f, 0x4d, 0xb4, 0xe2, 0x1e, 0xd0, 0xaa, 0x3f, 0x4b, 0x44, 0xcf, 0x60,
	0x63, 0xd2, 0x45, 0xc0, 0xdb, 0x46, 0x3d, 0x49, 0xab, 0x3d, 0x19, 0x81, 0x90, 0x2c, 0xdb, 0xaa,
	0xcf, 0x61, 0x75, 0x4e, 0x1f, 0x28, 0x0f, 0x8b, 0x46, 0xf3, 0xe4, 0x0b, 0x65, 0x41, 0x96, 0x9e,
	0x29, 0x29, 0x94, 0x83, 0x4c, 0x8b, 0xd4, 0x95, 0x34, 0x2a, 0x42, 0xce, 0x36, 0x9a, 0xb4, 0x45,
	0x0c, 0x25, 0xa3, 0xfe, 0x43, 0x06, 0x2a, 0x91, 0x6f, 0x23, 0x56, 0x02, 0x3d, 0x93, 0x7e, 0x9d,
	0x40, 0x41, 0x75, 0x8e, 0x13, 0x24, 0x18, 0x77, 0xd8, 0x9a, 0xc5, 0x9c, 0xba, 0x47, 0x50, 0xe6,
	0x5a, 0xf7, 0xc2, 0x4b, 0x61, 0x46, 0x33, 0xdc, 0x8b, 0x2c, 0x45, 0x44, 0x6e, 0x26, 0xc5, 0xee,
	0x78, 0xed, 0x0d, 0xda, 0x3d, 0xee, 0x38, 0xf2, 0xdd, 0x71, 0xc0, 0x7e, 0xd1, 0x11, 0x94, 0x38,
	0x9d, 0xb6, 0x3b, 0xfc, 0x0a, 0xb2, 0x74, 0xad, 0x5f, 0x29, 0xfb, 0xe7, 0xcd, 0x34, 0xce, 0x4c,
	0x8a, 0xaf, 0xa7, 0x3f, 0xe8, 0xf7, 0xa1, 0x7c, 0x26, 0xb6, 0x13, 0x1d, 0xb3, 0xfd, 0xc4, 0x6f,
	0x49, 0x49, 0x4f, 0x3b, 0xbe, 0xdd, 0x48, 0xe9, 0x2c, 0xbe, 0xf9, 0xf6, 0x61, 0xf9, 0x8a, 0x2e,
	0xf8, 0x75, 0x2a, 0x69, 0x74, 0x93, 0x8a, 0x26, 0x95, 0xa4, 0x7a, 0x54, 0x15, 0xf2, 0xd1, 0xea,
	0xa0, 0x02, 0x2c, 0xed, 0x7f, 0xe7, 0x60, 0x5b, 0x59, 0xe0, 0x4b, 0x8f, 0x75, 0xcb, 0xac, 0xd9,
	0x4a, 0x4a, 0x7d, 0x0e, 0xc5, 0xd8, 0x0c, 0x50, 0x19, 0x0a, 0x0e, 0x26, 0x0d, 0xc3, 0xd4, 0x1c,
	0xe6, 0xb9, 0x96, 0x20, 0x1f, 0x81, 0x8b, 0x92, 0x62, 0x07, 0x3d, 0x82, 0x25, 0x79, 0x34, 0x95,
	0xb4, 0xfa, 0xef, 0x19, 0x28, 0xca, 0xdd, 0xcb, 0xfc, 0x86, 0xc4, 0xa5, 0x39, 0x75, 0xfd, 0xa5,
	0x39, 0x9d, 0xb8, 0x34, 0xcf, 0xf8, 0xfe, 0x8b, 0xb3, 0xbe, 0xff, 0x97, 0x72, 0x47, 0x08, 0x8d,
	0x3c, 0x9c, 0x3d, 0x3c, 0xac, 0xfb, 0x9d, 0xd6, 0xa8, 0xdb, 0x0e, 0xdd, 0xd8, 0x86, 0x78, 0x0c,
	0x95, 0x98, 0x33, 0xc4, 0x64, 0x67, 0xf9, 0x65, 0xad, 0x3c, 0xa5, 0x32, 0xe9, 0xf3, 0x2f, 0x03,
	0xb9, 0x77, 0xbb, 0x0c, 0xfc, 0x4b, 0x0a, 0x60, 0x3a, 0x10, 0xbe, 0xa8, 0x47, 0x04, 0xdb, 0x47,
	0x56, 0x9d, 0x19, 0xe0, 0x1c, 0x64, 0x8e, 0x8f, 0xd8, 0x7a, 0x56, 0x00, 0x26, 0x8b, 0xcd, 0x9c,
	0xed, 0x55, 0x58, 0x3e, 0x6e, 0x59, 0x8e, 0x46, 0xf1, 0xab, 0x23, 0xad, 0x65, 0x33, 0x62, 0x86,
	0x41, 0x26, 0x37, 0x4a, 0x86, 0xf3, 0x1d, 0x75, 0x8c, 0x06, 0xb3, 0x20, 0xaf, 0x9a, 0x06, 0xc1,
	0x35, 0x65, 0x91, 0x81, 0xac, 0xf0, 0xce, 0x45, 0x33, 0xe7, 0xbb, 0x26, 0x56, 0x96, 0xd0, 0x7b,
	0xb0, 0x21, 0x71, 0x97, 0x29, 0xd9, 0xe0, 0x70, 0xad, 0x1f, 0x69, 0xe6, 0x21, 0x56, 0xb2, 0x42,
	0x87, 0x0c, 0xca, 0x29, 0xc1, 0xc7, 0x2d, 0x2e, 0x27, 0xc7, 0x2e, 0x28, 0x4d, 0xcb, 0xaa, 0xc7,
	0xfa, 0xcd, 0xab, 0xbf, 0xce, 0xc0, 0x4a, 0x6c, 0x61, 0xc5, 0x74, 0xd0, 0xc7, 0xb0, 0xc4, 0xdd,
	0x43, 0x89, 0x89, 0x77, 0xe6, 0x6b, 0x81, 0x08, 0xa6, 0x2b, 0x4e, 0x59, 0xfa, 0xaa, 0x53, 0xf6,
	0x18, 0x2a, 0xbe, 0xb8, 0x3c, 0xd0, 0xc1, 0xb8, 0x7f, 0xea, 0xfa, 0xf2, 0xb0, 0x96, 0x25, 0xd5,
	0xe4, 0xc4, 0xe8, 0xd2, 0xb7, 0x38, 0xbd, 0xf4, 0x4d, 0xaf, 0xf1, 0x4b, 0x89, 0x6b, 0x7c, 0x2c,
	0xae, 0x91, 0xbd, 0x3e, 0xae, 0x91, 0x9b, 0x1f, 0xd7, 0xc8, 0xcf, 0xc6, 0x35, 0x0a, 0xf3, 0xe3,
	0x1a, 0x70, 0x63, 0x5c, 0xa3, 0x78, 0x7b, 0x5c, 0xa3, 0x34, 0x27, 0xae, 0x11, 0x0f, 0x41, 0x94,
	0xdf, 0x21, 0x04, 0x51, 0x99, 0x13, 0x82, 0xf8, 0x0c, 0xf2, 0xe1, 0xd9, 0x68, 0x44, 0x3b, 0xe1,
	0x05, 0x8f, 0x2a, 0x24, 0x15, 0xe6, 0x9c, 0x8d, 0x46, 0xfa, 0x70, 0x10, 0xba, 0x17, 0x21, 0xc9,
	0x31, 0x3e, 0x3d, 0xbc, 0x50, 0xff, 0x76, 0x11, 0xd6, 0xa4, 0x26, 0xb9, 0xc6, 0x27, 0x71, 0x86,
	0x2a, 0xe4, 0x82, 0x71, 0xa7, 0xc3, 0x8c, 0x81, 0x34, 0xa8, 0xf2, 0x37, 0xd2, 0x4f, 0x7a, 0xaa,
	0x9f, 0xab, 0xa7, 0x39, 0x33, 0x7b, 0x9a, 0x3f, 0x83, 0xac, 0xb8, 0x98, 0x70, 0xbd, 0x26, 0x61,
	0x2d, 0x89, 0xb0, 0x44, 0x32, 0xa2, 0x3f, 0x4c, 0x00, 0xc0, 0xc7, 0xb3, 0x5b, 0x2f, 0x31, 0xe0,
	0x9d, 0xa8, 0x10, 0xc3, 0x82, 0x07, 0x50, 0x14, 0xee, 0x3d, 0xed, 0x0c, 0xbb, 0x2e, 0xdf, 0x23,
	0x65, 0x02, 0x82, 0xc4, 0xfd, 0xe4, 0xdf, 0x26, 0x0a, 0x20, 0x13, 0xa0, 0xe7, 0xf5, 0x3d, 0xa9,
	0xd3, 0x02, 0x1f, 0xf5, 0xee, 0x6d, 0xa3, 0x16, 0xc4, 0x3a, 0x6b, 0xc7, 0x07, 0x5e, 0xe8, 0x45,
	0xc5, 0x84, 0x36, 0xe1, 0xed, 0xb4, 0xb9, 0x05, 0xa5, 0xf8, 0x32, 0xf0, 0x7b, 0x00, 0xbf, 0xfc,
	0x2b, 0x0b, 0xea, 0x0b, 0x58, 0xbe, 0xd2, 0x19, 0xab, 0x3e, 0x30, 0x4c, 0x83, 0x43, 0xff, 0x1d,
	0x40, 0x86, 0x29, 0xfe, 0x68, 0xcb, 0x6c, 0x60, 0x07, 0x13, 0x1e, 0x28, 0x58, 0x03, 0x65, 0x42,
	0x8f, 0xa8, 0x69, 0xf5, 0x57, 0x29, 0x40, 0xf1, 0xeb, 0xa4, 0x84, 0x8b, 0x59, 0xf0, 0x4d, 0xcd,
	0x03, 0xdf, 0x4f, 0x61, 0xa9, 0xe7, 0x9e, 0xbb, 0x3d, 0x69, 0xed, 0xb7, 0x62, 0xd3, 0x9a, 0xde,
	0x43, 0xeb, 0x8c, 0x83, 0x08, 0xc6, 0x77, 0x0c, 0xcd, 0xfe, 0x79, 0x1a, 0xd6, 0xe7, 0x5e, 0x7a,
	0xd1, 0x73, 0xc8, 0x4a, 0x83, 0x2f, 0xdc, 0xa9, 0x0f, 0x6f, 0xbb, 0x26, 0xef, 0x48, 0x93, 0x2f,
	0x9b, 0xcd, 0x99, 0x69, 0xfa, 0xc6, 0x99, 0x66, 0xde, 0x76, 0xa6, 0x33, 0x6e, 0xc4, 0xd2, 0x4f,
	0x70, 0x23, 0xd4, 0x47, 0x90, 0x95, 0x96, 0xbd, 0x04, 0x79, 0xe6, 0xe0, 0x1b, 0x66, 0x0b, 0x0b,
	0x1f, 0xa0, 0x66, 0xd8, 0xdc, 0xbf, 0x4f, 0xa9, 0xff, 0x9a, 0x86, 0xbb, 0x57, 0x26, 0x19, 0xed,
	0x4a, 0x11, 0xda, 0xf9, 0x12, 0xb2, 0x63, 0x4e, 0x90, 0xb0, 0x7f, 0xef, 0x9a, 0xd5, 0x91, 0xad,
	0x24, 0xf3, 0xef, 0x0c, 0xfe, 0x63, 0x30, 0xbf, 0x94, 0x80, 0xf9, 0x19, 0x50, 0xcc, 0xce, 0x01,
	0xc5, 0x38, 0xd0, 0xe6, 0x6e, 0x07, 0xda, 0xf8, 0xa9, 0xcb, 0xbf, 0xdd, 0xa9, 0xfb, 0x8f, 0x45,
	0xb8, 0x77, 0xcd, 0x7a, 0x4a, 0x30, 0xfd, 0x7a, 0x82, 0x7e, 0xa9, 0x99, 0x10, 0xf6, 0xfc, 0xa8,
	0x4c, 0x04, 0x82, 0xb7, 0xac, 0xe9, 0x6c, 0x80, 0x34, 0x86, 0xdb, 0x8b, 0x49, 0xdc, 0x9e, 0x8d,
	0x5a, 0x2d, 0xfd, 0xe6, 0x51, 0xab, 0xec, 0x3b, 0x44, 0xad, 0xae, 0xc0, 0x72, 0x6e, 0x06, 0x96,
	0xe7, 0xc4, 0x09, 0xf3, 0xf3, 0xe2, 0x84, 0x36, 0x6c, 0x04, 0x3c, 0x08, 0x38, 0x1b, 0xde, 0x2b,
	0xbc, 0x45, 0xb8, 0x70, 0x2d, 0x98, 0x90, 0xde, 0x32, 0x68, 0x08, 0xbf, 0x41, 0xd0, 0x30, 0xbe,
	0xb1, 0x8a, 0x6f, 0xb7, 0xb1, 0x7e, 0x99, 0x86, 0xf5, 0xb9, 0x19, 0x0e, 0x74, 0x1f, 0x8a, 0xed,
	0xd1, 0x80, 0xb6, 0xfb, 0xa7, 0x3e, 0xed, 0x8a, 0x1b, 0x6b, 0x99, 0x14, 0xda, 0xa3, 0x81, 0xd6,
	0x3f, 0xf5, 0x6b, 0xbd, 0x44, 0xfd, 0xb8, 0x27, 0x43, 0xeb, 0x51, 0x7d, 0x8b, 0x5d, 0x5f, 0x2b,
	0x23, 0xdf, 0x1b, 0xfa, 0xec, 0xda, 0x34, 0x05, 0xa8, 0x32, 0x29, 0x47, 0x54, 0x8e, 0x49, 0xe8,
	0x73, 0x58, 0x1f, 0xf9, 0xae, 0xdb, 0x1f, 0x71, 0x85, 0x77, 0xda, 0xa3, 0xf6, 0xa9, 0xd7, 0xf3,
	0xc2, 0xc8, 0x5f, 0x5f, 0x9b, 0x56, 0xea, 0x93, 0x3a, 0xf4, 0x0d, 0x54, 0x63, 0x8d, 0xce, 0xc7,
	0xbd, 0x81, 0xeb, 0x47, 0xed, 0x96, 0x78, 0xbb, 0x8d, 0x69, 0xfd, 0x49, 0xbc, 0x9a, 0xf9, 0x56,
	0x6f, 0x86, 0x01, 0xed, 0xf4, 0xda, 0x41, 0xc0, 0xf6, 0xbb, 0xb4, 0xd8, 0x6f, 0x86, 0x81, 0xce,
	0x48, 0x46, 0x57, 0x3d, 0x86, 0x62, 0x6c, 0xa9, 0x58, 0x83, 0xb3, 0x0b, 0xda, 0x65, 0x98, 0xf2,
	0xc3, 0x30, 0x08, 0x65, 0x60, 0x0d, 0xce, 0x2e, 0x6a, 0x6e, 0x10, 0x1e, 0x0d, 0x03, 0xc1, 0x71,
	0x19, 0xe3, 0x48, 0x4b, 0x8e, 0xcb, 0x88, 0x43, 0xfd, 0xaf, 0x0c, 0x77, 0x81, 0x66, 0x33, 0x6c,
	0x5f, 0x01, 0x4c, 0xf3, 0x8f, 0xb7, 0x25, 0x4e, 0x62, 0xac, 0xb7, 0x1d, 0xda, 0x18, 0x9e, 0x65,
	0xae, 0x77, 0x5b, 0x17, 0xe7, 0xbb, 0xad, 0x4b, 0xb3, 0x6e, 0x6b, 0x6e, 0xbe, 0xdb, 0x9a, 0xbf,
	0xd1, 0x6d, 0x2d, 0xdc, 0xee, 0xb6, 0xc2, 0x2d, 0xe9, 0xb8, 0xe2, 0xbb, 0xa7, 0xe3, 0x4a, 0x09,
	0x3f, 0x7e, 0x15, 0x96, 0xce, 0x3a, 0x6c, 0x50, 0x65, 0x31, 0x93, 0xb3, 0x8e, 0xd1, 0x4d, 0xe0,
	0x76, 0xe5, 0x1d, 0x1c, 0xe4, 0xe5, 0x59, 0x5b, 0xa0, 0xfe, 0x6f, 0x1a, 0xd6, 0xe7, 0xa7, 0xd5,
	0xbe, 0x81, 0x5c, 0x14, 0x38, 0x17, 0x29, 0xdb, 0x07, 0xb7, 0x78, 0x6e, 0x24, 0xe2, 0x47, 0x16,
	0x54, 0x12, 0x41, 0xf8, 0x40, 0xe6, 0x2a, 0x9e, 0x5c, 0x0f, 0xf2, 0x57, 0x44, 0x95, 0xe3, 0x21,
	0xf8, 0x00, 0x3d, 0x87, 0x52, 0x1c, 0xd6, 0x64, 0xaa, 0xe2, 0x66, 0x2c, 0x2b, 0xc6, 0xb0, 0x0c,
	0xed, 0x43, 0x39, 0x01, 0x61, 0x1c, 0x3d, 0x6f, 0xc5, 0xad, 0x52, 0x1c, 0xb7, 0xae, 0xec, 0xe1,
	0xc2, 0xd5, 0x3d, 0xfc, 0x0e, 0xce, 0xe9, 0x3f, 0xa6, 0x60, 0x65, 0x66, 0xe0, 0xf1, 0x6c, 0x7c,
	0x2a, 0x91, 0x8d, 0xd7, 0x61, 0x99, 0xf9, 0x5a, 0xe7, 0x31, 0x63, 0x93, 0xbe, 0xd5, 0xd8, 0x54,
	0xa6, 0x4d, 0xb8, 0xa9, 0x39, 0x84, 0x95, 0xae, 0x7b, 0x55, 0x4c, 0xe6, 0x76, 0x9b, 0x15, 0x6f,
	0xc4, 0xc8, 0xea, 0x7f, 0xa6, 0x00, 0xcd, 0xae, 0x19, 0x7a, 0x06, 0x45, 0xf1, 0x7a, 0x81, 0x2f,
	0xf4, 0x9c, 0xc8, 0xa1, 0x8c, 0xe1, 0x8f, 0x7b, 0x2e, 0x81, 0xd1, 0xa4, 0xfc, 0xff, 0x6c, 0x72,
	0x7f, 0x99, 0x82, 0x35, 0xb1, 0x25, 0xaf, 0x20, 0xe0, 0x33, 0xc8, 0x09, 0xdf, 0x2e, 0x3a, 0x15,
	0x77, 0xe7, 0x07, 0x00, 0xe4, 0x7e, 0x8e, 0x98, 0x91, 0x39, 0x73, 0x24, 0x44, 0x3e, 0xe5, 0xc3,
	0xdb, 0x8f, 0x84, 0x80, 0x8c, 0xe4, 0x89, 0x50, 0xff, 0x3e, 0x05, 0xeb, 0x57, 0x06, 0x28, 0xcf,
	0xed, 0x1f, 0x40, 0xc1, 0x97, 0xe5, 0xb7, 0x3e, 0xb9, 0xd3, 0x16, 0xe8, 0x4f, 0x61, 0x23, 0x31,
	0x50, 0x3a, 0x15, 0x96, 0xf9, 0x89, 0x87, 0x78, 0x3d, 0x3e, 0xe4, 0x88, 0x1a, 0xa8, 0x2f, 0xa0,
	0x2a, 0xc7, 0xec, 0xb8, 0x7e, 0xdf, 0x1b, 0xc4, 0xdd, 0xc2, 0xd9, 0xb7, 0x29, 0x37, 0x5b, 0x0e,
	0xf5, 0xdf, 0x16, 0x61, 0x63, 0x56, 0x9a, 0xd0, 0xd5, 0x4f, 0x15, 0x16, 0x19, 0x94, 0xcc, 0xd4,
	0xa0, 0xcc, 0x7a, 0xe8, 0x8b, 0xf3, 0x3c, 0xf4, 0x6f, 0xa1, 0x2c, 0xb0, 0x8f, 0xf2, 0x29, 0x0b,
	0x3f, 0xf2, 0xfa, 0xe0, 0x50, 0xa9, 0x33, 0xfd, 0x09, 0x50, 0x6d, 0x72, 0x71, 0x8a, 0x5a, 0x67,
	0x67, 0xc0, 0x69, 0xce, 0x1d, 0x23, 0xba, 0x57, 0x49, 0x29, 0x31, 0x13, 0x9a, 0x4b, 0x98, 0xd0,
	0xa9, 0x89, 0xc9, 0x27, 0x4c, 0x4c, 0xc2, 0xb4, 0x16, 0xae, 0x98, 0xd6, 0xc8, 0x90, 0xc2, 0x7c,
	0x43, 0x5a, 0xbc, 0xd1, 0x90, 0x96, 0x6e, 0x37, 0xa4, 0xe5, 0x5b, 0xe2, 0x3f, 0xbf, 0x25, 0xf3,
	0x96, 0x00, 0x65, 0xe5, 0xad, 0x40, 0xf9, 0xe9, 0x07, 0x90, 0x93, 0x7d, 0xb1, 0x1b, 0xa3, 0x73,
	0xd8, 0x6c, 0xd2, 0x3a, 0x8f, 0x07, 0x94, 0xa1, 0xc0, 0xff, 0x5e, 0xd6, 0x35, 0x53, 0x49, 0x3d,
	0xfd, 0x9b, 0x02, 0x94, 0xe2, 0x97, 0x03, 0xb4, 0x0c, 0x45, 0xfb, 0xd0, 0x9e, 0x44, 0x1a, 0x17,
	0x50, 0x05, 0xe0, 0xd8, 0xb2, 0xa3, 0x7f, 0x1e, 0xed, 0x24, 0x9a, 0x13, 0xfd, 0xa7, 0x79, 0xf4,
	0xf3, 0x60, 0xf2, 0x9f, 0x61, 0x02, 0x9a, 0xf5, 0xc6, 0x44, 0xc0, 0x22, 0x42, 0x50, 0xa9, 0x5b,
	0xb6, 0x4d, 0xad, 0x03, 0x99, 0x26, 0x53, 0x96, 0x78, 0x96, 0x12, 0xeb, 0xd6, 0x09, 0x26, 0xdf,
	0xc5, 0xe8, 0x59, 0xb4, 0x02, 0x65, 0xa3, 0x49, 0x75, 0x6d, 0xd2, 0x3c, 0x87, 0x3e, 0x00, 0x75,
	0xda, 0x3f, 0xc5, 0xaf, 0x74, 0x8c, 0x6b, 0x3c, 0xa9, 0x14, 0xcf, 0x63, 0x29, 0x45, 0x31, 0x2e,
	0x23, 0x6a, 0x57, 0x42, 0x55, 0x58, 0xe3, 0xb9, 0xac, 0x49, 0xc6, 0x50, 0xd6, 0x94, 0x65, 0xe6,
	0x09, 0x9f, 0x60, 0xd3, 0xa1, 0x0e, 0x31, 0x0e, 0x0f, 0x31, 0xb1, 0x95, 0x0a, 0x7f, 0x23, 0xd1,
	0x72, 0xd8, 0x70, 0x44, 0x22, 0x4d, 0x59, 0xe6, 0x79, 0x2e, 0x1c, 0x4b, 0x3a, 0x4e, 0xeb, 0x14,
	0x91, 0x19, 0x9d, 0xe6, 0x19, 0x79, 0x50, 0xd7, 0x6a, 0x39, 0xca, 0x0a, 0x6b, 0xd5, 0xc2, 0xd4,
	0x68, 0x46, 0x09, 0xbc, 0x28, 0x6d, 0x89, 0x15, 0x84, 0x36, 0x61, 0x3d, 0x59, 0x47, 0x70, 0x1d,
	0x6b, 0x36, 0x56, 0x56, 0xd1, 0x43, 0xb8, 0x57, 0xc3, 0x07, 0x5a, 0xab, 0xee, 0x50, 0xdc, 0xb4,
	0xa3, 0x94, 0x62, 0x6c, 0xed, 0xd7, 0xa6, 0xe9, 0x43, 0x49, 0x59, 0x47, 0x2a, 0xdc, 0x8f, 0xa5,
	0x3e, 0xe7, 0x24, 0x4a, 0x95, 0x3b, 0x4c, 0xf0, 0xa4, 0xa2, 0x61, 0xd5, 0x8c, 0x83, 0x28, 0x9d,
	0x49, 0xf0, 0x71, 0x0b, 0xdb, 0x8e, 0xb2, 0xc1, 0x53, 0xa0, 0x87, 0x2f, 0xa9, 0x43, 0x34, 0x1d,
	0x47, 0x09, 0x44, 0xa5, 0x8a, 0x36, 0x60, 0xb5, 0x85, 0xf9, 0xcc, 0xe8, 0xf7, 0x96, 0x89, 0xa3,
	0x6e, 0x37, 0xb9, 0xd2, 0xa7, 0x8b, 0xbd, 0xc5, 0x94, 0x8e, 0xf5, 0xc3, 0x09, 0xe1, 0x3d, 0xd6,
	0xa7, 0x7e, 0xa4, 0x91, 0x43, 0x11, 0xbe, 0x26, 0x04, 0xd7, 0x45, 0x97, 0xf8, 0x95, 0x64, 0xb9,
	0xcb, 0x58, 0xb4, 0xa6, 0x49, 0xb5, 0xc6, 0x3e, 0x49, 0x0e, 0x2b, 0x4a, 0xed, 0xde, 0xe3, 0xa9,
	0x5d, 0xa6, 0x43, 0xdd, 0x3e, 0x8c, 0x67, 0x0f, 0xa3, 0x6e, 0xee, 0xb3, 0x05, 0x69, 0xd9, 0xda,
	0x21, 0xa6, 0x04, 0xf3, 0xfc, 0xe1, 0x43, 0xb4, 0x0b, 0x1f, 0x5d, 0xb3, 0x8a, 0x73, 0xfb, 0x50,
	0xd1, 0x67, 0xf0, 0xc9, 0xa4, 0x8f, 0xa3, 0xef, 0xf6, 0x89, 0x51, 0xa3, 0x76, 0x6b, 0xdf, 0xd6,
	0x89, 0xb1, 0x8f, 0x6b, 0xf3, 0x7a, 0x7d, 0x84, 0x3e, 0x87, 0xdd, 0xab, 0x4d, 0x5a, 0xe6, 0xcd,
	0x8d, 0xde, 0x67, 0x6b, 0x99, 0xc8, 0x99, 0xca, 0x8a, 0xc7, 0x6c, 0xed, 0xe3, 0x39, 0x66, 0xdb,
	0xd1, 0x88, 0xa3, 0x7c, 0x88, 0xd6, 0x40, 0x49, 0x92, 0xad, 0xa6, 0xf2, 0x84, 0x31, 0xeb, 0x3c,
	0x57, 0xdd, 0x8c, 0xe5, 0xaa, 0x9f, 0xa2, 0xfb, 0xb0, 0xd5, 0xc2, 0x7c, 0xab, 0xd7, 0xe3, 0x9b,
	0x4b, 0xf6, 0xf1, 0x11, 0xda, 0x86, 0xbb, 0x47, 0xd8, 0xdc, 0xbf, 0x96, 0xe3, 0x63, 0x26, 0x41,
	0xa6, 0x69, 0x4d, 0xec, 0xbc, 0xb4, 0xc8, 0x0b, 0x3e, 0x8b, 0x68, 0x5d, 0x3f, 0x41, 0x8f, 0xe1,
	0xa1, 0xcc, 0x2f, 0x37, 0x34, 0x53, 0x3b, 0xc4, 0x0d, 0x76, 0x7a, 0xa2, 0xa7, 0x46, 0xd1, 0x6a,
	0xee, 0xb0, 0x83, 0x1d, 0x2d, 0x7f, 0x6c, 0xe7, 0xee, 0xa2, 0x6f, 0xe1, 0x2b, 0x79, 0x82, 0xad,
	0x03, 0xda, 0xc2, 0xb4, 0x49, 0xb0, 0x8d, 0x4d, 0x1d, 0x53, 0xc3, 0x9c, 0x96, 0x45, 0x67, 0xfc,
	0x70, 0x13, 0xac, 0x45, 0x7d, 0x7f, 0xca, 0x76, 0x17, 0x5b, 0x5f, 0x9e, 0x22, 0xc6, 0x35, 0xe5,
	0xb3, 0xa7, 0xff, 0x94, 0x82, 0xcc, 0xb1, 0x6e, 0xa0, 0x02, 0x2c, 0x1d, 0xeb, 0x06, 0xfd, 0x54,
	0x59, 0x88, 0x8a, 0x9f, 0x29, 0xa9, 0xa8, 0xb8, 0xa7, 0xa4, 0xa3, 0xe2, 0xe7, 0x4a, 0x26, 0x2a,
	0x7e, 0xa1, 0x2c, 0x46, 0xc5, 0x2f, 0x95, 0xa5, 0xa8, 0xf8, 0x4c, 0xc9, 0x46, 0xc5, 0xaf, 0x94,
	0x5c, 0x54, 0xfc, 0x5a, 0xc9, 0x47, 0xc5, 0x6f, 0x94, 0x02, 0x02, 0xc8, 0x72, 0xde, 0x2f, 0x15,
	0x6d, 0x52, 0x7e, 0xa6, 0xec, 0x4f, 0xca, 0x5f, 0x29, 0x7a, 0x54, 0xfe, 0xea, 0x53, 0xe5, 0x60,
	0x52, 0xfe, 0x52, 0x79, 0x31, 0x29, 0x7f, 0xa3, 0x58, 0x4f, 0x5d, 0x28, 0xc5, 0xdf, 0xaa, 0xfc,
	0x8e, 0x1e, 0x78, 0x3d, 0xfd, 0x1a, 0x96, 0xaf, 0xc4, 0x22, 0x19, 0x57, 0xd4, 0xb8, 0x8e, 0x4f,
	0x70, 0x5d, 0x3c, 0x6a, 0x6b, 0xea, 0xba, 0xd8, 0x92, 0x82, 0x96, 0xda, 0xfb, 0x65, 0x1a, 0x56,
	0xf9, 0xb3, 0x40, 0xe9, 0x93, 0x34, 0xc4, 0x43, 0x60, 0xb4, 0x0f, 0xcb, 0xc4, 0x1d, 0x0d, 0xfd,
	0x90, 0xf9, 0xba, 0xcc, 0xe5, 0x0f, 0xd0, 0xd6, 0xdc, 0x17, 0xb0, 0xfc, 0xb9, 0xec, 0xd6, 0x8a,
	0xac, 0xe3, 0xaf, 0x85, 0x77, 0x4e, 0x86, 0x5e, 0x57, 0x5d, 0x40, 0x7f, 0x02, 0xe5, 0xc4, 0x4d,
	0x0d, 0xbd, 0x1f, 0x93, 0x70, 0xed, 0xab, 0xd8, 0xad, 0xc7, 0xb7, 0x70, 0xc9, 0x47, 0x8b, 0x0b,
	0xa8, 0x05, 0x30, 0x7d, 0xcc, 0x88, 0x1e, 0x5e, 0x6d, 0x36, 0xf3, 0x7e, 0x72, 0x4b, 0xbd, 0x89,
	0x25, 0x12, 0xbb, 0xf7, 0xcf, 0x29, 0x58, 0x97, 0xd4, 0xa6, 0x3f, 0xbc, 0xb8, 0x14, 0x55, 0x5d,
	0xd7, 0x47, 0xad, 0x69, 0xce, 0x5b, 0x68, 0x15, 0x6d, 0xdf, 0xf6, 0x7a, 0x71, 0xeb, 0xc1, 0x2d,
	0x8f, 0x01, 0xd5, 0x05, 0x64, 0x41, 0x29, 0xfe, 0x4e, 0x08, 0xdd, 0xbf, 0xe6, 0x01, 0x51, 0x24,
	0xf2, 0xde, 0x8d, 0x0f, 0x8c, 0xd4, 0x85, 0xbd, 0xbf, 0x4a, 0x43, 0x55, 0x77, 0x07, 0xa1, 0x3f,
	0x51, 0x2b, 0x73, 0x1a, 0xfc, 0x61, 0xaf, 0xe7, 0xfa, 0xc8, 0xb9, 0xaa, 0x95, 0x2b, 0xce, 0xf6,
	0xac, 0x42, 0xb6, 0xaf, 0x67, 0x98, 0xe8, 0xc2, 0x81, 0x72, 0xc2, 0xbb, 0x4f, 0x48, 0x9d, 0x77,
	0x31, 0x49, 0x48, 0x9d, 0x7b, 0x31, 0x50, 0x17, 0xd0, 0x1f, 0x83, 0x32, 0x71, 0x92, 0x23, 0xc1,
	0x6a, 0x22, 0xa9, 0x33, 0xd7, 0x91, 0xde, 0x7a, 0x74, 0x23, 0x4f, 0x24, 0x7e, 0xff, 0xbd, 0xef,
	0x37, 0x39, 0xdf, 0x6e, 0x2f, 0x74, 0x77, 0x3b, 0xbd, 0xe1, 0xb8, 0xbb, 0x7b, 0x36, 0x94, 0xef,
	0xd6, 0x4f, 0xb3, 0xfc, 0xfb, 0xf9, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x27, 0xeb, 0xa7,
	0x2f, 0x2f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LocalSessionManagerClient is the client API for LocalSessionManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocalSessionManagerClient interface {
	ReportRuleStats(ctx context.Context, in *RuleRecordTable, opts ...grpc.CallOption) (*protos.Void, error)
	CreateSession(ctx context.Context, in *LocalCreateSessionRequest, opts ...grpc.CallOption) (*LocalCreateSessionResponse, error)
	EndSession(ctx context.Context, in *LocalEndSessionRequest, opts ...grpc.CallOption) (*LocalEndSessionResponse, error)
}

type localSessionManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewLocalSessionManagerClient(cc grpc.ClientConnInterface) LocalSessionManagerClient {
	return &localSessionManagerClient{cc}
}

func (c *localSessionManagerClient) ReportRuleStats(ctx context.Context, in *RuleRecordTable, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.lte.LocalSessionManager/ReportRuleStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *localSessionManagerClient) CreateSession(ctx context.Context, in *LocalCreateSessionRequest, opts ...grpc.CallOption) (*LocalCreateSessionResponse, error) {
	out := new(LocalCreateSessionResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.LocalSessionManager/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *localSessionManagerClient) EndSession(ctx context.Context, in *LocalEndSessionRequest, opts ...grpc.CallOption) (*LocalEndSessionResponse, error) {
	out := new(LocalEndSessionResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.LocalSessionManager/EndSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocalSessionManagerServer is the server API for LocalSessionManager service.
type LocalSessionManagerServer interface {
	ReportRuleStats(context.Context, *RuleRecordTable) (*protos.Void, error)
	CreateSession(context.Context, *LocalCreateSessionRequest) (*LocalCreateSessionResponse, error)
	EndSession(context.Context, *LocalEndSessionRequest) (*LocalEndSessionResponse, error)
}

// UnimplementedLocalSessionManagerServer can be embedded to have forward compatible implementations.
type UnimplementedLocalSessionManagerServer struct {
}

func (*UnimplementedLocalSessionManagerServer) ReportRuleStats(ctx context.Context, req *RuleRecordTable) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportRuleStats not implemented")
}
func (*UnimplementedLocalSessionManagerServer) CreateSession(ctx context.Context, req *LocalCreateSessionRequest) (*LocalCreateSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (*UnimplementedLocalSessionManagerServer) EndSession(ctx context.Context, req *LocalEndSessionRequest) (*LocalEndSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndSession not implemented")
}

func RegisterLocalSessionManagerServer(s *grpc.Server, srv LocalSessionManagerServer) {
	s.RegisterService(&_LocalSessionManager_serviceDesc, srv)
}

func _LocalSessionManager_ReportRuleStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RuleRecordTable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocalSessionManagerServer).ReportRuleStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.LocalSessionManager/ReportRuleStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocalSessionManagerServer).ReportRuleStats(ctx, req.(*RuleRecordTable))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocalSessionManager_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocalCreateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocalSessionManagerServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.LocalSessionManager/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocalSessionManagerServer).CreateSession(ctx, req.(*LocalCreateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocalSessionManager_EndSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocalEndSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocalSessionManagerServer).EndSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.LocalSessionManager/EndSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocalSessionManagerServer).EndSession(ctx, req.(*LocalEndSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocalSessionManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.LocalSessionManager",
	HandlerType: (*LocalSessionManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportRuleStats",
			Handler:    _LocalSessionManager_ReportRuleStats_Handler,
		},
		{
			MethodName: "CreateSession",
			Handler:    _LocalSessionManager_CreateSession_Handler,
		},
		{
			MethodName: "EndSession",
			Handler:    _LocalSessionManager_EndSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/session_manager.proto",
}

// SessionProxyResponderClient is the client API for SessionProxyResponder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionProxyResponderClient interface {
	ChargingReAuth(ctx context.Context, in *ChargingReAuthRequest, opts ...grpc.CallOption) (*ChargingReAuthAnswer, error)
	// NOTE: if no session_id is specified, apply to all sessions for the IMSI
	//
	PolicyReAuth(ctx context.Context, in *PolicyReAuthRequest, opts ...grpc.CallOption) (*PolicyReAuthAnswer, error)
}

type sessionProxyResponderClient struct {
	cc grpc.ClientConnInterface
}

func NewSessionProxyResponderClient(cc grpc.ClientConnInterface) SessionProxyResponderClient {
	return &sessionProxyResponderClient{cc}
}

func (c *sessionProxyResponderClient) ChargingReAuth(ctx context.Context, in *ChargingReAuthRequest, opts ...grpc.CallOption) (*ChargingReAuthAnswer, error) {
	out := new(ChargingReAuthAnswer)
	err := c.cc.Invoke(ctx, "/magma.lte.SessionProxyResponder/ChargingReAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionProxyResponderClient) PolicyReAuth(ctx context.Context, in *PolicyReAuthRequest, opts ...grpc.CallOption) (*PolicyReAuthAnswer, error) {
	out := new(PolicyReAuthAnswer)
	err := c.cc.Invoke(ctx, "/magma.lte.SessionProxyResponder/PolicyReAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionProxyResponderServer is the server API for SessionProxyResponder service.
type SessionProxyResponderServer interface {
	ChargingReAuth(context.Context, *ChargingReAuthRequest) (*ChargingReAuthAnswer, error)
	// NOTE: if no session_id is specified, apply to all sessions for the IMSI
	//
	PolicyReAuth(context.Context, *PolicyReAuthRequest) (*PolicyReAuthAnswer, error)
}

// UnimplementedSessionProxyResponderServer can be embedded to have forward compatible implementations.
type UnimplementedSessionProxyResponderServer struct {
}

func (*UnimplementedSessionProxyResponderServer) ChargingReAuth(ctx context.Context, req *ChargingReAuthRequest) (*ChargingReAuthAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChargingReAuth not implemented")
}
func (*UnimplementedSessionProxyResponderServer) PolicyReAuth(ctx context.Context, req *PolicyReAuthRequest) (*PolicyReAuthAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PolicyReAuth not implemented")
}

func RegisterSessionProxyResponderServer(s *grpc.Server, srv SessionProxyResponderServer) {
	s.RegisterService(&_SessionProxyResponder_serviceDesc, srv)
}

func _SessionProxyResponder_ChargingReAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChargingReAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionProxyResponderServer).ChargingReAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.SessionProxyResponder/ChargingReAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionProxyResponderServer).ChargingReAuth(ctx, req.(*ChargingReAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionProxyResponder_PolicyReAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PolicyReAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionProxyResponderServer).PolicyReAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.SessionProxyResponder/PolicyReAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionProxyResponderServer).PolicyReAuth(ctx, req.(*PolicyReAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionProxyResponder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.SessionProxyResponder",
	HandlerType: (*SessionProxyResponderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChargingReAuth",
			Handler:    _SessionProxyResponder_ChargingReAuth_Handler,
		},
		{
			MethodName: "PolicyReAuth",
			Handler:    _SessionProxyResponder_PolicyReAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/session_manager.proto",
}

// CentralSessionControllerClient is the client API for CentralSessionController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CentralSessionControllerClient interface {
	// Notify OCS/PCRF of new session and return rules associated with subscriber
	// along with credits for each rule
	CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*CreateSessionResponse, error)
	// Updates OCS/PCRF with used credit and terminations from gateway
	UpdateSession(ctx context.Context, in *UpdateSessionRequest, opts ...grpc.CallOption) (*UpdateSessionResponse, error)
	// Terminates session in OCS/PCRF for a subscriber
	TerminateSession(ctx context.Context, in *SessionTerminateRequest, opts ...grpc.CallOption) (*SessionTerminateResponse, error)
}

type centralSessionControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewCentralSessionControllerClient(cc grpc.ClientConnInterface) CentralSessionControllerClient {
	return &centralSessionControllerClient{cc}
}

func (c *centralSessionControllerClient) CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*CreateSessionResponse, error) {
	out := new(CreateSessionResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.CentralSessionController/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centralSessionControllerClient) UpdateSession(ctx context.Context, in *UpdateSessionRequest, opts ...grpc.CallOption) (*UpdateSessionResponse, error) {
	out := new(UpdateSessionResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.CentralSessionController/UpdateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centralSessionControllerClient) TerminateSession(ctx context.Context, in *SessionTerminateRequest, opts ...grpc.CallOption) (*SessionTerminateResponse, error) {
	out := new(SessionTerminateResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.CentralSessionController/TerminateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CentralSessionControllerServer is the server API for CentralSessionController service.
type CentralSessionControllerServer interface {
	// Notify OCS/PCRF of new session and return rules associated with subscriber
	// along with credits for each rule
	CreateSession(context.Context, *CreateSessionRequest) (*CreateSessionResponse, error)
	// Updates OCS/PCRF with used credit and terminations from gateway
	UpdateSession(context.Context, *UpdateSessionRequest) (*UpdateSessionResponse, error)
	// Terminates session in OCS/PCRF for a subscriber
	TerminateSession(context.Context, *SessionTerminateRequest) (*SessionTerminateResponse, error)
}

// UnimplementedCentralSessionControllerServer can be embedded to have forward compatible implementations.
type UnimplementedCentralSessionControllerServer struct {
}

func (*UnimplementedCentralSessionControllerServer) CreateSession(ctx context.Context, req *CreateSessionRequest) (*CreateSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (*UnimplementedCentralSessionControllerServer) UpdateSession(ctx context.Context, req *UpdateSessionRequest) (*UpdateSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSession not implemented")
}
func (*UnimplementedCentralSessionControllerServer) TerminateSession(ctx context.Context, req *SessionTerminateRequest) (*SessionTerminateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateSession not implemented")
}

func RegisterCentralSessionControllerServer(s *grpc.Server, srv CentralSessionControllerServer) {
	s.RegisterService(&_CentralSessionController_serviceDesc, srv)
}

func _CentralSessionController_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CentralSessionControllerServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.CentralSessionController/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CentralSessionControllerServer).CreateSession(ctx, req.(*CreateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CentralSessionController_UpdateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CentralSessionControllerServer).UpdateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.CentralSessionController/UpdateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CentralSessionControllerServer).UpdateSession(ctx, req.(*UpdateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CentralSessionController_TerminateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionTerminateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CentralSessionControllerServer).TerminateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.CentralSessionController/TerminateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CentralSessionControllerServer).TerminateSession(ctx, req.(*SessionTerminateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CentralSessionController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.CentralSessionController",
	HandlerType: (*CentralSessionControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSession",
			Handler:    _CentralSessionController_CreateSession_Handler,
		},
		{
			MethodName: "UpdateSession",
			Handler:    _CentralSessionController_UpdateSession_Handler,
		},
		{
			MethodName: "TerminateSession",
			Handler:    _CentralSessionController_TerminateSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/session_manager.proto",
}
