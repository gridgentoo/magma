// Code generated by protoc-gen-go. DO NOT EDIT.
// source: subscriberdb.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccessNetworkIdentifier int32

const (
	AccessNetworkIdentifier_HRPD     AccessNetworkIdentifier = 0
	AccessNetworkIdentifier_WIMAX    AccessNetworkIdentifier = 1
	AccessNetworkIdentifier_WLAN     AccessNetworkIdentifier = 2
	AccessNetworkIdentifier_ETHERNET AccessNetworkIdentifier = 3
)

var AccessNetworkIdentifier_name = map[int32]string{
	0: "HRPD",
	1: "WIMAX",
	2: "WLAN",
	3: "ETHERNET",
}
var AccessNetworkIdentifier_value = map[string]int32{
	"HRPD":     0,
	"WIMAX":    1,
	"WLAN":     2,
	"ETHERNET": 3,
}

func (x AccessNetworkIdentifier) String() string {
	return proto.EnumName(AccessNetworkIdentifier_name, int32(x))
}
func (AccessNetworkIdentifier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{0}
}

type LegacySubscriberID_IDType int32

const (
	LegacySubscriberID_IMSI LegacySubscriberID_IDType = 0
)

var LegacySubscriberID_IDType_name = map[int32]string{
	0: "IMSI",
}
var LegacySubscriberID_IDType_value = map[string]int32{
	"IMSI": 0,
}

func (x LegacySubscriberID_IDType) String() string {
	return proto.EnumName(LegacySubscriberID_IDType_name, int32(x))
}
func (LegacySubscriberID_IDType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{0, 0}
}

type GSMSubscription_GSMSubscriptionState int32

const (
	GSMSubscription_INACTIVE GSMSubscription_GSMSubscriptionState = 0
	GSMSubscription_ACTIVE   GSMSubscription_GSMSubscriptionState = 1
)

var GSMSubscription_GSMSubscriptionState_name = map[int32]string{
	0: "INACTIVE",
	1: "ACTIVE",
}
var GSMSubscription_GSMSubscriptionState_value = map[string]int32{
	"INACTIVE": 0,
	"ACTIVE":   1,
}

func (x GSMSubscription_GSMSubscriptionState) String() string {
	return proto.EnumName(GSMSubscription_GSMSubscriptionState_name, int32(x))
}
func (GSMSubscription_GSMSubscriptionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{1, 0}
}

type GSMSubscription_GSMAuthAlgo int32

const (
	GSMSubscription_PRECOMPUTED_AUTH_TUPLES GSMSubscription_GSMAuthAlgo = 0
)

var GSMSubscription_GSMAuthAlgo_name = map[int32]string{
	0: "PRECOMPUTED_AUTH_TUPLES",
}
var GSMSubscription_GSMAuthAlgo_value = map[string]int32{
	"PRECOMPUTED_AUTH_TUPLES": 0,
}

func (x GSMSubscription_GSMAuthAlgo) String() string {
	return proto.EnumName(GSMSubscription_GSMAuthAlgo_name, int32(x))
}
func (GSMSubscription_GSMAuthAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{1, 1}
}

type LegacyLTESubscription_LTESubscriptionState int32

const (
	LegacyLTESubscription_INACTIVE LegacyLTESubscription_LTESubscriptionState = 0
	LegacyLTESubscription_ACTIVE   LegacyLTESubscription_LTESubscriptionState = 1
)

var LegacyLTESubscription_LTESubscriptionState_name = map[int32]string{
	0: "INACTIVE",
	1: "ACTIVE",
}
var LegacyLTESubscription_LTESubscriptionState_value = map[string]int32{
	"INACTIVE": 0,
	"ACTIVE":   1,
}

func (x LegacyLTESubscription_LTESubscriptionState) String() string {
	return proto.EnumName(LegacyLTESubscription_LTESubscriptionState_name, int32(x))
}
func (LegacyLTESubscription_LTESubscriptionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{2, 0}
}

type LegacyLTESubscription_LTEAuthAlgo int32

const (
	LegacyLTESubscription_MILENAGE LegacyLTESubscription_LTEAuthAlgo = 0
)

var LegacyLTESubscription_LTEAuthAlgo_name = map[int32]string{
	0: "MILENAGE",
}
var LegacyLTESubscription_LTEAuthAlgo_value = map[string]int32{
	"MILENAGE": 0,
}

func (x LegacyLTESubscription_LTEAuthAlgo) String() string {
	return proto.EnumName(LegacyLTESubscription_LTEAuthAlgo_name, int32(x))
}
func (LegacyLTESubscription_LTEAuthAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{2, 1}
}

type APNConfiguration_PDNType int32

const (
	APNConfiguration_IPV4         APNConfiguration_PDNType = 0
	APNConfiguration_IPV6         APNConfiguration_PDNType = 1
	APNConfiguration_IPV4V6       APNConfiguration_PDNType = 2
	APNConfiguration_IPV4_OR_IPV6 APNConfiguration_PDNType = 3
)

var APNConfiguration_PDNType_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "IPV4V6",
	3: "IPV4_OR_IPV6",
}
var APNConfiguration_PDNType_value = map[string]int32{
	"IPV4":         0,
	"IPV6":         1,
	"IPV4V6":       2,
	"IPV4_OR_IPV6": 3,
}

func (x APNConfiguration_PDNType) String() string {
	return proto.EnumName(APNConfiguration_PDNType_name, int32(x))
}
func (APNConfiguration_PDNType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{4, 0}
}

type Non3GPPUserProfile_Non3GPPIPAccess int32

const (
	Non3GPPUserProfile_NON_3GPP_SUBSCRIPTION_ALLOWED Non3GPPUserProfile_Non3GPPIPAccess = 0
	Non3GPPUserProfile_NON_3GPP_SUBSCRIPTION_BARRED  Non3GPPUserProfile_Non3GPPIPAccess = 1
)

var Non3GPPUserProfile_Non3GPPIPAccess_name = map[int32]string{
	0: "NON_3GPP_SUBSCRIPTION_ALLOWED",
	1: "NON_3GPP_SUBSCRIPTION_BARRED",
}
var Non3GPPUserProfile_Non3GPPIPAccess_value = map[string]int32{
	"NON_3GPP_SUBSCRIPTION_ALLOWED": 0,
	"NON_3GPP_SUBSCRIPTION_BARRED":  1,
}

func (x Non3GPPUserProfile_Non3GPPIPAccess) String() string {
	return proto.EnumName(Non3GPPUserProfile_Non3GPPIPAccess_name, int32(x))
}
func (Non3GPPUserProfile_Non3GPPIPAccess) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{6, 0}
}

type Non3GPPUserProfile_Non3GPPIPAccessAPN int32

const (
	Non3GPPUserProfile_NON_3GPP_APNS_ENABLE  Non3GPPUserProfile_Non3GPPIPAccessAPN = 0
	Non3GPPUserProfile_NON_3GPP_APNS_DISABLE Non3GPPUserProfile_Non3GPPIPAccessAPN = 1
)

var Non3GPPUserProfile_Non3GPPIPAccessAPN_name = map[int32]string{
	0: "NON_3GPP_APNS_ENABLE",
	1: "NON_3GPP_APNS_DISABLE",
}
var Non3GPPUserProfile_Non3GPPIPAccessAPN_value = map[string]int32{
	"NON_3GPP_APNS_ENABLE":  0,
	"NON_3GPP_APNS_DISABLE": 1,
}

func (x Non3GPPUserProfile_Non3GPPIPAccessAPN) String() string {
	return proto.EnumName(Non3GPPUserProfile_Non3GPPIPAccessAPN_name, int32(x))
}
func (Non3GPPUserProfile_Non3GPPIPAccessAPN) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{6, 1}
}

type LegacySubscriberID struct {
	Id                   string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 LegacySubscriberID_IDType `protobuf:"varint,2,opt,name=type,proto3,enum=magma.migration.cellular.LegacySubscriberID_IDType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LegacySubscriberID) Reset()         { *m = LegacySubscriberID{} }
func (m *LegacySubscriberID) String() string { return proto.CompactTextString(m) }
func (*LegacySubscriberID) ProtoMessage()    {}
func (*LegacySubscriberID) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{0}
}
func (m *LegacySubscriberID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegacySubscriberID.Unmarshal(m, b)
}
func (m *LegacySubscriberID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegacySubscriberID.Marshal(b, m, deterministic)
}
func (dst *LegacySubscriberID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacySubscriberID.Merge(dst, src)
}
func (m *LegacySubscriberID) XXX_Size() int {
	return xxx_messageInfo_LegacySubscriberID.Size(m)
}
func (m *LegacySubscriberID) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacySubscriberID.DiscardUnknown(m)
}

var xxx_messageInfo_LegacySubscriberID proto.InternalMessageInfo

func (m *LegacySubscriberID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LegacySubscriberID) GetType() LegacySubscriberID_IDType {
	if m != nil {
		return m.Type
	}
	return LegacySubscriberID_IMSI
}

type GSMSubscription struct {
	State                GSMSubscription_GSMSubscriptionState `protobuf:"varint,1,opt,name=state,proto3,enum=magma.migration.cellular.GSMSubscription_GSMSubscriptionState" json:"state,omitempty"`
	AuthAlgo             GSMSubscription_GSMAuthAlgo          `protobuf:"varint,2,opt,name=auth_algo,json=authAlgo,proto3,enum=magma.migration.cellular.GSMSubscription_GSMAuthAlgo" json:"auth_algo,omitempty"`
	AuthKey              []byte                               `protobuf:"bytes,3,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	AuthTuples           [][]byte                             `protobuf:"bytes,4,rep,name=auth_tuples,json=authTuples,proto3" json:"auth_tuples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GSMSubscription) Reset()         { *m = GSMSubscription{} }
func (m *GSMSubscription) String() string { return proto.CompactTextString(m) }
func (*GSMSubscription) ProtoMessage()    {}
func (*GSMSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{1}
}
func (m *GSMSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GSMSubscription.Unmarshal(m, b)
}
func (m *GSMSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GSMSubscription.Marshal(b, m, deterministic)
}
func (dst *GSMSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GSMSubscription.Merge(dst, src)
}
func (m *GSMSubscription) XXX_Size() int {
	return xxx_messageInfo_GSMSubscription.Size(m)
}
func (m *GSMSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_GSMSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_GSMSubscription proto.InternalMessageInfo

func (m *GSMSubscription) GetState() GSMSubscription_GSMSubscriptionState {
	if m != nil {
		return m.State
	}
	return GSMSubscription_INACTIVE
}

func (m *GSMSubscription) GetAuthAlgo() GSMSubscription_GSMAuthAlgo {
	if m != nil {
		return m.AuthAlgo
	}
	return GSMSubscription_PRECOMPUTED_AUTH_TUPLES
}

func (m *GSMSubscription) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

func (m *GSMSubscription) GetAuthTuples() [][]byte {
	if m != nil {
		return m.AuthTuples
	}
	return nil
}

type LegacyLTESubscription struct {
	State                LegacyLTESubscription_LTESubscriptionState `protobuf:"varint,1,opt,name=state,proto3,enum=magma.migration.cellular.LegacyLTESubscription_LTESubscriptionState" json:"state,omitempty"`
	AuthAlgo             LegacyLTESubscription_LTEAuthAlgo          `protobuf:"varint,2,opt,name=auth_algo,json=authAlgo,proto3,enum=magma.migration.cellular.LegacyLTESubscription_LTEAuthAlgo" json:"auth_algo,omitempty"`
	AuthKey              []byte                                     `protobuf:"bytes,3,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	AuthOpc              []byte                                     `protobuf:"bytes,4,opt,name=auth_opc,json=authOpc,proto3" json:"auth_opc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *LegacyLTESubscription) Reset()         { *m = LegacyLTESubscription{} }
func (m *LegacyLTESubscription) String() string { return proto.CompactTextString(m) }
func (*LegacyLTESubscription) ProtoMessage()    {}
func (*LegacyLTESubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{2}
}
func (m *LegacyLTESubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegacyLTESubscription.Unmarshal(m, b)
}
func (m *LegacyLTESubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegacyLTESubscription.Marshal(b, m, deterministic)
}
func (dst *LegacyLTESubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacyLTESubscription.Merge(dst, src)
}
func (m *LegacyLTESubscription) XXX_Size() int {
	return xxx_messageInfo_LegacyLTESubscription.Size(m)
}
func (m *LegacyLTESubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacyLTESubscription.DiscardUnknown(m)
}

var xxx_messageInfo_LegacyLTESubscription proto.InternalMessageInfo

func (m *LegacyLTESubscription) GetState() LegacyLTESubscription_LTESubscriptionState {
	if m != nil {
		return m.State
	}
	return LegacyLTESubscription_INACTIVE
}

func (m *LegacyLTESubscription) GetAuthAlgo() LegacyLTESubscription_LTEAuthAlgo {
	if m != nil {
		return m.AuthAlgo
	}
	return LegacyLTESubscription_MILENAGE
}

func (m *LegacyLTESubscription) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

func (m *LegacyLTESubscription) GetAuthOpc() []byte {
	if m != nil {
		return m.AuthOpc
	}
	return nil
}

type LegacySubscriberState struct {
	LteAuthNextSeq          uint64   `protobuf:"varint,1,opt,name=lte_auth_next_seq,json=lteAuthNextSeq,proto3" json:"lte_auth_next_seq,omitempty"`
	TgppAaaServerName       string   `protobuf:"bytes,2,opt,name=tgpp_aaa_server_name,json=tgppAaaServerName,proto3" json:"tgpp_aaa_server_name,omitempty"`
	TgppAaaServerRegistered bool     `protobuf:"varint,3,opt,name=tgpp_aaa_server_registered,json=tgppAaaServerRegistered,proto3" json:"tgpp_aaa_server_registered,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *LegacySubscriberState) Reset()         { *m = LegacySubscriberState{} }
func (m *LegacySubscriberState) String() string { return proto.CompactTextString(m) }
func (*LegacySubscriberState) ProtoMessage()    {}
func (*LegacySubscriberState) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{3}
}
func (m *LegacySubscriberState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegacySubscriberState.Unmarshal(m, b)
}
func (m *LegacySubscriberState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegacySubscriberState.Marshal(b, m, deterministic)
}
func (dst *LegacySubscriberState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacySubscriberState.Merge(dst, src)
}
func (m *LegacySubscriberState) XXX_Size() int {
	return xxx_messageInfo_LegacySubscriberState.Size(m)
}
func (m *LegacySubscriberState) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacySubscriberState.DiscardUnknown(m)
}

var xxx_messageInfo_LegacySubscriberState proto.InternalMessageInfo

func (m *LegacySubscriberState) GetLteAuthNextSeq() uint64 {
	if m != nil {
		return m.LteAuthNextSeq
	}
	return 0
}

func (m *LegacySubscriberState) GetTgppAaaServerName() string {
	if m != nil {
		return m.TgppAaaServerName
	}
	return ""
}

func (m *LegacySubscriberState) GetTgppAaaServerRegistered() bool {
	if m != nil {
		return m.TgppAaaServerRegistered
	}
	return false
}

type APNConfiguration struct {
	ContextId            uint32                       `protobuf:"varint,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	ServiceSelection     string                       `protobuf:"bytes,2,opt,name=service_selection,json=serviceSelection,proto3" json:"service_selection,omitempty"`
	QosProfile           *APNConfiguration_QoSProfile `protobuf:"bytes,3,opt,name=qos_profile,json=qosProfile,proto3" json:"qos_profile,omitempty"`
	Ambr                 *AggregatedMaximumBitrate    `protobuf:"bytes,4,opt,name=ambr,proto3" json:"ambr,omitempty"`
	Pdn                  APNConfiguration_PDNType     `protobuf:"varint,5,opt,name=pdn,proto3,enum=magma.migration.cellular.APNConfiguration_PDNType" json:"pdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *APNConfiguration) Reset()         { *m = APNConfiguration{} }
func (m *APNConfiguration) String() string { return proto.CompactTextString(m) }
func (*APNConfiguration) ProtoMessage()    {}
func (*APNConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{4}
}
func (m *APNConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfiguration.Unmarshal(m, b)
}
func (m *APNConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfiguration.Marshal(b, m, deterministic)
}
func (dst *APNConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfiguration.Merge(dst, src)
}
func (m *APNConfiguration) XXX_Size() int {
	return xxx_messageInfo_APNConfiguration.Size(m)
}
func (m *APNConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfiguration proto.InternalMessageInfo

func (m *APNConfiguration) GetContextId() uint32 {
	if m != nil {
		return m.ContextId
	}
	return 0
}

func (m *APNConfiguration) GetServiceSelection() string {
	if m != nil {
		return m.ServiceSelection
	}
	return ""
}

func (m *APNConfiguration) GetQosProfile() *APNConfiguration_QoSProfile {
	if m != nil {
		return m.QosProfile
	}
	return nil
}

func (m *APNConfiguration) GetAmbr() *AggregatedMaximumBitrate {
	if m != nil {
		return m.Ambr
	}
	return nil
}

func (m *APNConfiguration) GetPdn() APNConfiguration_PDNType {
	if m != nil {
		return m.Pdn
	}
	return APNConfiguration_IPV4
}

type APNConfiguration_QoSProfile struct {
	ClassId                 int32    `protobuf:"varint,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	PriorityLevel           uint32   `protobuf:"varint,2,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    bool     `protobuf:"varint,3,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability bool     `protobuf:"varint,4,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *APNConfiguration_QoSProfile) Reset()         { *m = APNConfiguration_QoSProfile{} }
func (m *APNConfiguration_QoSProfile) String() string { return proto.CompactTextString(m) }
func (*APNConfiguration_QoSProfile) ProtoMessage()    {}
func (*APNConfiguration_QoSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{4, 0}
}
func (m *APNConfiguration_QoSProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfiguration_QoSProfile.Unmarshal(m, b)
}
func (m *APNConfiguration_QoSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfiguration_QoSProfile.Marshal(b, m, deterministic)
}
func (dst *APNConfiguration_QoSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfiguration_QoSProfile.Merge(dst, src)
}
func (m *APNConfiguration_QoSProfile) XXX_Size() int {
	return xxx_messageInfo_APNConfiguration_QoSProfile.Size(m)
}
func (m *APNConfiguration_QoSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfiguration_QoSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfiguration_QoSProfile proto.InternalMessageInfo

func (m *APNConfiguration_QoSProfile) GetClassId() int32 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *APNConfiguration_QoSProfile) GetPriorityLevel() uint32 {
	if m != nil {
		return m.PriorityLevel
	}
	return 0
}

func (m *APNConfiguration_QoSProfile) GetPreemptionCapability() bool {
	if m != nil {
		return m.PreemptionCapability
	}
	return false
}

func (m *APNConfiguration_QoSProfile) GetPreemptionVulnerability() bool {
	if m != nil {
		return m.PreemptionVulnerability
	}
	return false
}

type AggregatedMaximumBitrate struct {
	MaxBandwidthUl       uint32   `protobuf:"varint,1,opt,name=max_bandwidth_ul,json=maxBandwidthUl,proto3" json:"max_bandwidth_ul,omitempty"`
	MaxBandwidthDl       uint32   `protobuf:"varint,2,opt,name=max_bandwidth_dl,json=maxBandwidthDl,proto3" json:"max_bandwidth_dl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatedMaximumBitrate) Reset()         { *m = AggregatedMaximumBitrate{} }
func (m *AggregatedMaximumBitrate) String() string { return proto.CompactTextString(m) }
func (*AggregatedMaximumBitrate) ProtoMessage()    {}
func (*AggregatedMaximumBitrate) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{5}
}
func (m *AggregatedMaximumBitrate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedMaximumBitrate.Unmarshal(m, b)
}
func (m *AggregatedMaximumBitrate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedMaximumBitrate.Marshal(b, m, deterministic)
}
func (dst *AggregatedMaximumBitrate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedMaximumBitrate.Merge(dst, src)
}
func (m *AggregatedMaximumBitrate) XXX_Size() int {
	return xxx_messageInfo_AggregatedMaximumBitrate.Size(m)
}
func (m *AggregatedMaximumBitrate) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedMaximumBitrate.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedMaximumBitrate proto.InternalMessageInfo

func (m *AggregatedMaximumBitrate) GetMaxBandwidthUl() uint32 {
	if m != nil {
		return m.MaxBandwidthUl
	}
	return 0
}

func (m *AggregatedMaximumBitrate) GetMaxBandwidthDl() uint32 {
	if m != nil {
		return m.MaxBandwidthDl
	}
	return 0
}

type Non3GPPUserProfile struct {
	Msisdn               string                                `protobuf:"bytes,1,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Non_3GppIpAccess     Non3GPPUserProfile_Non3GPPIPAccess    `protobuf:"varint,2,opt,name=non_3gpp_ip_access,json=non3gppIpAccess,proto3,enum=magma.migration.cellular.Non3GPPUserProfile_Non3GPPIPAccess" json:"non_3gpp_ip_access,omitempty"`
	Non_3GppIpAccessApn  Non3GPPUserProfile_Non3GPPIPAccessAPN `protobuf:"varint,3,opt,name=non_3gpp_ip_access_apn,json=non3gppIpAccessApn,proto3,enum=magma.migration.cellular.Non3GPPUserProfile_Non3GPPIPAccessAPN" json:"non_3gpp_ip_access_apn,omitempty"`
	Ambr                 *AggregatedMaximumBitrate             `protobuf:"bytes,4,opt,name=ambr,proto3" json:"ambr,omitempty"`
	ApnConfig            *APNConfiguration                     `protobuf:"bytes,5,opt,name=apn_config,json=apnConfig,proto3" json:"apn_config,omitempty"`
	AccessNetId          AccessNetworkIdentifier               `protobuf:"varint,6,opt,name=access_net_id,json=accessNetId,proto3,enum=magma.migration.cellular.AccessNetworkIdentifier" json:"access_net_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Non3GPPUserProfile) Reset()         { *m = Non3GPPUserProfile{} }
func (m *Non3GPPUserProfile) String() string { return proto.CompactTextString(m) }
func (*Non3GPPUserProfile) ProtoMessage()    {}
func (*Non3GPPUserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{6}
}
func (m *Non3GPPUserProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Non3GPPUserProfile.Unmarshal(m, b)
}
func (m *Non3GPPUserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Non3GPPUserProfile.Marshal(b, m, deterministic)
}
func (dst *Non3GPPUserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Non3GPPUserProfile.Merge(dst, src)
}
func (m *Non3GPPUserProfile) XXX_Size() int {
	return xxx_messageInfo_Non3GPPUserProfile.Size(m)
}
func (m *Non3GPPUserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_Non3GPPUserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_Non3GPPUserProfile proto.InternalMessageInfo

func (m *Non3GPPUserProfile) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *Non3GPPUserProfile) GetNon_3GppIpAccess() Non3GPPUserProfile_Non3GPPIPAccess {
	if m != nil {
		return m.Non_3GppIpAccess
	}
	return Non3GPPUserProfile_NON_3GPP_SUBSCRIPTION_ALLOWED
}

func (m *Non3GPPUserProfile) GetNon_3GppIpAccessApn() Non3GPPUserProfile_Non3GPPIPAccessAPN {
	if m != nil {
		return m.Non_3GppIpAccessApn
	}
	return Non3GPPUserProfile_NON_3GPP_APNS_ENABLE
}

func (m *Non3GPPUserProfile) GetAmbr() *AggregatedMaximumBitrate {
	if m != nil {
		return m.Ambr
	}
	return nil
}

func (m *Non3GPPUserProfile) GetApnConfig() *APNConfiguration {
	if m != nil {
		return m.ApnConfig
	}
	return nil
}

func (m *Non3GPPUserProfile) GetAccessNetId() AccessNetworkIdentifier {
	if m != nil {
		return m.AccessNetId
	}
	return AccessNetworkIdentifier_HRPD
}

// --------------------------------------------------------------------------
// User subscription record. This record is serialized and stored in the DB.
// --------------------------------------------------------------------------
type SubscriberData struct {
	Sid                  *LegacySubscriberID    `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Gsm                  *GSMSubscription       `protobuf:"bytes,2,opt,name=gsm,proto3" json:"gsm,omitempty"`
	Lte                  *LegacyLTESubscription `protobuf:"bytes,3,opt,name=lte,proto3" json:"lte,omitempty"`
	NetworkId            *NetworkID             `protobuf:"bytes,4,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	State                *LegacySubscriberState `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	SubProfile           string                 `protobuf:"bytes,6,opt,name=sub_profile,json=subProfile,proto3" json:"sub_profile,omitempty"`
	Non_3Gpp             *Non3GPPUserProfile    `protobuf:"bytes,7,opt,name=non_3gpp,json=non3gpp,proto3" json:"non_3gpp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SubscriberData) Reset()         { *m = SubscriberData{} }
func (m *SubscriberData) String() string { return proto.CompactTextString(m) }
func (*SubscriberData) ProtoMessage()    {}
func (*SubscriberData) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{7}
}
func (m *SubscriberData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberData.Unmarshal(m, b)
}
func (m *SubscriberData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberData.Marshal(b, m, deterministic)
}
func (dst *SubscriberData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberData.Merge(dst, src)
}
func (m *SubscriberData) XXX_Size() int {
	return xxx_messageInfo_SubscriberData.Size(m)
}
func (m *SubscriberData) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberData.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberData proto.InternalMessageInfo

func (m *SubscriberData) GetSid() *LegacySubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *SubscriberData) GetGsm() *GSMSubscription {
	if m != nil {
		return m.Gsm
	}
	return nil
}

func (m *SubscriberData) GetLte() *LegacyLTESubscription {
	if m != nil {
		return m.Lte
	}
	return nil
}

func (m *SubscriberData) GetNetworkId() *NetworkID {
	if m != nil {
		return m.NetworkId
	}
	return nil
}

func (m *SubscriberData) GetState() *LegacySubscriberState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *SubscriberData) GetSubProfile() string {
	if m != nil {
		return m.SubProfile
	}
	return ""
}

func (m *SubscriberData) GetNon_3Gpp() *Non3GPPUserProfile {
	if m != nil {
		return m.Non_3Gpp
	}
	return nil
}

type NetworkID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkID) Reset()         { *m = NetworkID{} }
func (m *NetworkID) String() string { return proto.CompactTextString(m) }
func (*NetworkID) ProtoMessage()    {}
func (*NetworkID) Descriptor() ([]byte, []int) {
	return fileDescriptor_subscriberdb_8440fe173ac80cf2, []int{8}
}
func (m *NetworkID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkID.Unmarshal(m, b)
}
func (m *NetworkID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkID.Marshal(b, m, deterministic)
}
func (dst *NetworkID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkID.Merge(dst, src)
}
func (m *NetworkID) XXX_Size() int {
	return xxx_messageInfo_NetworkID.Size(m)
}
func (m *NetworkID) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkID.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkID proto.InternalMessageInfo

func (m *NetworkID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*LegacySubscriberID)(nil), "magma.migration.cellular.LegacySubscriberID")
	proto.RegisterType((*GSMSubscription)(nil), "magma.migration.cellular.GSMSubscription")
	proto.RegisterType((*LegacyLTESubscription)(nil), "magma.migration.cellular.LegacyLTESubscription")
	proto.RegisterType((*LegacySubscriberState)(nil), "magma.migration.cellular.LegacySubscriberState")
	proto.RegisterType((*APNConfiguration)(nil), "magma.migration.cellular.APNConfiguration")
	proto.RegisterType((*APNConfiguration_QoSProfile)(nil), "magma.migration.cellular.APNConfiguration.QoSProfile")
	proto.RegisterType((*AggregatedMaximumBitrate)(nil), "magma.migration.cellular.AggregatedMaximumBitrate")
	proto.RegisterType((*Non3GPPUserProfile)(nil), "magma.migration.cellular.Non3GPPUserProfile")
	proto.RegisterType((*SubscriberData)(nil), "magma.migration.cellular.SubscriberData")
	proto.RegisterType((*NetworkID)(nil), "magma.migration.cellular.NetworkID")
	proto.RegisterEnum("magma.migration.cellular.AccessNetworkIdentifier", AccessNetworkIdentifier_name, AccessNetworkIdentifier_value)
	proto.RegisterEnum("magma.migration.cellular.LegacySubscriberID_IDType", LegacySubscriberID_IDType_name, LegacySubscriberID_IDType_value)
	proto.RegisterEnum("magma.migration.cellular.GSMSubscription_GSMSubscriptionState", GSMSubscription_GSMSubscriptionState_name, GSMSubscription_GSMSubscriptionState_value)
	proto.RegisterEnum("magma.migration.cellular.GSMSubscription_GSMAuthAlgo", GSMSubscription_GSMAuthAlgo_name, GSMSubscription_GSMAuthAlgo_value)
	proto.RegisterEnum("magma.migration.cellular.LegacyLTESubscription_LTESubscriptionState", LegacyLTESubscription_LTESubscriptionState_name, LegacyLTESubscription_LTESubscriptionState_value)
	proto.RegisterEnum("magma.migration.cellular.LegacyLTESubscription_LTEAuthAlgo", LegacyLTESubscription_LTEAuthAlgo_name, LegacyLTESubscription_LTEAuthAlgo_value)
	proto.RegisterEnum("magma.migration.cellular.APNConfiguration_PDNType", APNConfiguration_PDNType_name, APNConfiguration_PDNType_value)
	proto.RegisterEnum("magma.migration.cellular.Non3GPPUserProfile_Non3GPPIPAccess", Non3GPPUserProfile_Non3GPPIPAccess_name, Non3GPPUserProfile_Non3GPPIPAccess_value)
	proto.RegisterEnum("magma.migration.cellular.Non3GPPUserProfile_Non3GPPIPAccessAPN", Non3GPPUserProfile_Non3GPPIPAccessAPN_name, Non3GPPUserProfile_Non3GPPIPAccessAPN_value)
}

func init() { proto.RegisterFile("subscriberdb.proto", fileDescriptor_subscriberdb_8440fe173ac80cf2) }

var fileDescriptor_subscriberdb_8440fe173ac80cf2 = []byte{
	// 1204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xdb, 0xb6,
	0x17, 0x8f, 0xbf, 0x92, 0xf8, 0x38, 0x71, 0x55, 0x22, 0x6d, 0xdd, 0xf6, 0x5f, 0x34, 0x7f, 0x0d,
	0x03, 0xd2, 0x6e, 0x70, 0x37, 0x67, 0x2b, 0x30, 0x64, 0xe8, 0x20, 0xc7, 0x6a, 0x2a, 0xcc, 0x51,
	0x34, 0xca, 0x4e, 0x8b, 0xde, 0x10, 0xb4, 0xc4, 0xaa, 0x42, 0xf5, 0x15, 0x89, 0x6e, 0xe3, 0xcb,
	0x3d, 0xc6, 0xde, 0x62, 0x4f, 0xb0, 0x8b, 0x01, 0x7b, 0x81, 0x01, 0x7b, 0x9f, 0x81, 0x94, 0xe4,
	0x24, 0x4e, 0x93, 0x26, 0xdb, 0xee, 0xc8, 0x73, 0xf8, 0x3b, 0x3c, 0xfc, 0x9d, 0x0f, 0x1e, 0x40,
	0xd9, 0x74, 0x92, 0x39, 0xa9, 0x3f, 0x61, 0xa9, 0x3b, 0xe9, 0x26, 0x69, 0xcc, 0x63, 0xd4, 0x09,
	0xa9, 0x17, 0xd2, 0x6e, 0xe8, 0x7b, 0x29, 0xe5, 0x7e, 0x1c, 0x75, 0x1d, 0x16, 0x04, 0xd3, 0x80,
	0xa6, 0xea, 0xcf, 0x15, 0x40, 0x43, 0xe6, 0x51, 0x67, 0x66, 0xcf, 0x61, 0xc6, 0x00, 0xb5, 0xa1,
	0xea, 0xbb, 0x9d, 0xca, 0x66, 0x65, 0xab, 0x89, 0xab, 0xbe, 0x8b, 0xf6, 0xa0, 0xce, 0x67, 0x09,
	0xeb, 0x54, 0x37, 0x2b, 0x5b, 0xed, 0xde, 0x76, 0xf7, 0x22, 0x7b, 0xdd, 0xf3, 0xb6, 0xba, 0xc6,
	0x60, 0x34, 0x4b, 0x18, 0x96, 0x06, 0x54, 0x04, 0xcb, 0xf9, 0x1e, 0xad, 0x42, 0xdd, 0xd8, 0xb7,
	0x0d, 0x65, 0x49, 0xfd, 0xab, 0x0a, 0x37, 0xf6, 0xec, 0xfd, 0x02, 0x94, 0x08, 0x83, 0x68, 0x04,
	0x8d, 0x8c, 0x53, 0xce, 0xa4, 0x0f, 0xed, 0xde, 0xb3, 0x8b, 0x6f, 0x5c, 0x40, 0x2e, 0xee, 0x6d,
	0x61, 0x05, 0xe7, 0xc6, 0x10, 0x86, 0x26, 0x9d, 0xf2, 0xb7, 0x84, 0x06, 0x5e, 0x5c, 0xbc, 0xe5,
	0xdb, 0x6b, 0x59, 0xd6, 0xa6, 0xfc, 0xad, 0x16, 0x78, 0x31, 0x5e, 0xa5, 0xc5, 0x0a, 0xdd, 0x05,
	0xb9, 0x26, 0xef, 0xd8, 0xac, 0x53, 0xdb, 0xac, 0x6c, 0xad, 0xe1, 0x15, 0xb1, 0xff, 0x91, 0xcd,
	0xd0, 0x43, 0x68, 0x49, 0x15, 0x9f, 0x26, 0x01, 0xcb, 0x3a, 0xf5, 0xcd, 0xda, 0xd6, 0x1a, 0x06,
	0x21, 0x1a, 0x49, 0x89, 0xfa, 0x15, 0x6c, 0x7c, 0xcc, 0x5d, 0xb4, 0x06, 0xab, 0x86, 0xa9, 0xed,
	0x8e, 0x8c, 0x43, 0x5d, 0x59, 0x42, 0x00, 0xcb, 0xc5, 0xba, 0xa2, 0x3e, 0x86, 0xd6, 0x29, 0x37,
	0xd0, 0x7d, 0xb8, 0x63, 0x61, 0x7d, 0xf7, 0x60, 0xdf, 0x1a, 0x8f, 0xf4, 0x01, 0xd1, 0xc6, 0xa3,
	0x17, 0x64, 0x34, 0xb6, 0x86, 0xba, 0xad, 0x2c, 0xa9, 0x7f, 0x56, 0xe1, 0x56, 0x1e, 0x8f, 0xe1,
	0x48, 0x3f, 0xc3, 0xee, 0xeb, 0xb3, 0xec, 0x0e, 0x3e, 0x15, 0xcf, 0x05, 0x7c, 0x77, 0x61, 0x7f,
	0x86, 0xe3, 0x57, 0xe7, 0x39, 0xde, 0xf9, 0x07, 0xf6, 0xaf, 0xc7, 0x74, 0xa9, 0x8a, 0x13, 0xa7,
	0x53, 0x3f, 0x51, 0x1d, 0x24, 0x8e, 0xe0, 0xf8, 0x63, 0xee, 0x5e, 0xc2, 0xf1, 0x7d, 0x68, 0x9d,
	0x72, 0x40, 0x1c, 0xdc, 0x37, 0x86, 0xba, 0xa9, 0xed, 0xe9, 0xca, 0x92, 0xfa, 0x6b, 0xa5, 0x24,
	0xf5, 0x24, 0xc9, 0x73, 0x83, 0x8f, 0xe0, 0x66, 0xc0, 0x19, 0x91, 0x7e, 0x44, 0xec, 0x98, 0x93,
	0x8c, 0x1d, 0x49, 0x82, 0xeb, 0xb8, 0x1d, 0x70, 0x26, 0xec, 0x99, 0xec, 0x98, 0xdb, 0xec, 0x08,
	0x3d, 0x81, 0x0d, 0xee, 0x25, 0x09, 0xa1, 0x94, 0x92, 0x8c, 0xa5, 0xef, 0x59, 0x4a, 0x22, 0x1a,
	0xe6, 0xe5, 0xd5, 0xc4, 0x37, 0x85, 0x4e, 0xa3, 0xd4, 0x96, 0x1a, 0x93, 0x86, 0x0c, 0xed, 0xc0,
	0xbd, 0x45, 0x40, 0xca, 0x3c, 0x3f, 0xe3, 0x2c, 0x65, 0xae, 0x24, 0x63, 0x15, 0xdf, 0x39, 0x03,
	0xc3, 0x73, 0xb5, 0xfa, 0x7b, 0x1d, 0x14, 0xcd, 0x32, 0x77, 0xe3, 0xe8, 0x8d, 0xef, 0x4d, 0xf3,
	0x08, 0xa0, 0x07, 0x00, 0x4e, 0x1c, 0x71, 0xe1, 0x67, 0x51, 0xe9, 0xeb, 0xb8, 0x59, 0x48, 0x0c,
	0x17, 0x7d, 0x01, 0x37, 0xc5, 0x3d, 0xbe, 0xc3, 0x48, 0xc6, 0x02, 0xe6, 0x08, 0x4c, 0xe1, 0x9e,
	0x52, 0x28, 0xec, 0x52, 0x8e, 0x0e, 0xa1, 0x75, 0x14, 0x67, 0x24, 0x49, 0xe3, 0x37, 0x7e, 0xc0,
	0xa4, 0x3b, 0xad, 0xcb, 0x0a, 0x6b, 0xd1, 0x99, 0xee, 0x4f, 0xb1, 0x6d, 0xe5, 0x60, 0x0c, 0x47,
	0x71, 0x56, 0xac, 0xd1, 0x73, 0xa8, 0xd3, 0x70, 0x92, 0xca, 0x88, 0xb6, 0x7a, 0xbd, 0x4b, 0x0c,
	0x7a, 0x5e, 0xca, 0x3c, 0xca, 0x99, 0xbb, 0x4f, 0x8f, 0xfd, 0x70, 0x1a, 0xf6, 0x7d, 0x9e, 0x8a,
	0x9c, 0x94, 0x78, 0x34, 0x80, 0x5a, 0xe2, 0x46, 0x9d, 0x86, 0x4c, 0xc6, 0xde, 0x35, 0xfc, 0xb2,
	0x06, 0xa6, 0xec, 0x5d, 0x02, 0x7e, 0xef, 0xb7, 0x0a, 0xc0, 0x89, 0xa3, 0x22, 0xe5, 0x9c, 0x80,
	0x66, 0x59, 0x49, 0x5f, 0x03, 0xaf, 0xc8, 0xbd, 0xe1, 0xa2, 0xcf, 0xa1, 0x9d, 0xa4, 0x7e, 0x9c,
	0xfa, 0x7c, 0x46, 0x02, 0xf6, 0x9e, 0x05, 0x92, 0xb9, 0x75, 0xbc, 0x5e, 0x4a, 0x87, 0x42, 0x88,
	0xb6, 0xe1, 0x56, 0x92, 0x32, 0x16, 0xca, 0xa4, 0x24, 0x0e, 0x4d, 0xe8, 0xc4, 0x0f, 0x7c, 0x3e,
	0x2b, 0xe2, 0xb9, 0x71, 0xa2, 0xdc, 0x9d, 0xeb, 0xd0, 0x77, 0xd0, 0x39, 0x05, 0x7a, 0x3f, 0x0d,
	0x22, 0x96, 0x96, 0xb8, 0x7a, 0x9e, 0x07, 0x27, 0xfa, 0xc3, 0xd3, 0x6a, 0x75, 0x07, 0x56, 0x8a,
	0x07, 0xc9, 0xe6, 0x6b, 0x1d, 0x7e, 0xa3, 0x2c, 0x15, 0xab, 0xa7, 0x4a, 0x45, 0x94, 0x80, 0x90,
	0x1d, 0x3e, 0x55, 0xaa, 0x48, 0x81, 0x35, 0xb1, 0x26, 0x07, 0x98, 0x48, 0x6d, 0x4d, 0x8d, 0xa0,
	0x73, 0x11, 0xcb, 0x68, 0x0b, 0x94, 0x90, 0x1e, 0x93, 0x09, 0x8d, 0xdc, 0x0f, 0xbe, 0xcb, 0xdf,
	0x92, 0x69, 0x50, 0x64, 0x54, 0x3b, 0xa4, 0xc7, 0xfd, 0x52, 0x3c, 0x0e, 0xce, 0x9f, 0x74, 0x4b,
	0x6e, 0xce, 0x9c, 0x1c, 0x04, 0xea, 0x2f, 0x0d, 0x40, 0x66, 0x1c, 0x6d, 0xef, 0x59, 0xd6, 0x38,
	0x63, 0x69, 0xc9, 0xfa, 0x6d, 0x58, 0x0e, 0x33, 0x3f, 0x73, 0xa3, 0xe2, 0x73, 0x2a, 0x76, 0xc8,
	0x07, 0x14, 0xc5, 0x11, 0xd9, 0x16, 0x45, 0xe2, 0x27, 0x84, 0x3a, 0x0e, 0xcb, 0xb2, 0xa2, 0xfd,
	0x7c, 0x7f, 0x71, 0xc4, 0xcf, 0xdf, 0x50, 0x8a, 0x0c, 0x4b, 0x93, 0x36, 0xf0, 0x8d, 0x28, 0x8e,
	0x84, 0x59, 0x23, 0xc9, 0x05, 0x28, 0x83, 0xdb, 0xe7, 0xaf, 0x22, 0x34, 0x89, 0x64, 0xdc, 0xda,
	0xbd, 0x1f, 0xfe, 0xcd, 0x75, 0x9a, 0x65, 0x62, 0xb4, 0x70, 0xa3, 0x96, 0x44, 0xff, 0x59, 0x29,
	0x18, 0x00, 0x34, 0x89, 0x88, 0x23, 0xd3, 0x5c, 0x56, 0x44, 0xab, 0xf7, 0xf8, 0xea, 0x15, 0x81,
	0x9b, 0x34, 0x89, 0x72, 0x09, 0x1a, 0xc3, 0x7a, 0xf1, 0xf6, 0x88, 0xc9, 0x26, 0xb2, 0x2c, 0x9f,
	0xff, 0xf5, 0x25, 0xd6, 0xe4, 0x71, 0x93, 0xf1, 0x0f, 0x71, 0xfa, 0xce, 0x70, 0x59, 0xc4, 0xfd,
	0x37, 0x3e, 0x4b, 0x71, 0x8b, 0x96, 0x0a, 0xc3, 0x55, 0x0f, 0xe1, 0xc6, 0x02, 0x27, 0xe8, 0xff,
	0xf0, 0xc0, 0x3c, 0x30, 0x89, 0x90, 0x11, 0x7b, 0xdc, 0xb7, 0x77, 0xb1, 0x61, 0x8d, 0x8c, 0x03,
	0x93, 0x68, 0xc3, 0xe1, 0xc1, 0x4b, 0x7d, 0xa0, 0x2c, 0xa1, 0x4d, 0xf8, 0xdf, 0xc7, 0x8f, 0xf4,
	0x35, 0x8c, 0xf5, 0x81, 0x52, 0x51, 0x8d, 0x79, 0x3e, 0x9d, 0xe2, 0x1a, 0x75, 0x60, 0x63, 0x8e,
	0xd3, 0x2c, 0xd3, 0x26, 0xba, 0xa9, 0xf5, 0x87, 0xe2, 0x47, 0xb8, 0x0b, 0xb7, 0xce, 0x6a, 0x06,
	0x86, 0x2d, 0x55, 0x15, 0xf5, 0x8f, 0x1a, 0xb4, 0x4f, 0xba, 0xff, 0x80, 0x72, 0x8a, 0x9e, 0x41,
	0x2d, 0x2b, 0x1a, 0x41, 0xab, 0xf7, 0xe5, 0x75, 0xe6, 0x23, 0x2c, 0x80, 0x68, 0x07, 0x6a, 0x5e,
	0x16, 0xca, 0x84, 0x6d, 0xf5, 0x1e, 0x5d, 0x79, 0x26, 0xc1, 0x02, 0x85, 0x34, 0xa8, 0x05, 0xbc,
	0xec, 0xbb, 0x4f, 0xae, 0xf9, 0xd9, 0x62, 0x81, 0x45, 0x7d, 0x80, 0x28, 0x8f, 0x8b, 0x88, 0x64,
	0x9e, 0x65, 0x9f, 0x5d, 0x92, 0xc8, 0x45, 0x0c, 0x07, 0xb8, 0x19, 0x95, 0xe1, 0x44, 0x7a, 0x39,
	0x55, 0x34, 0xae, 0xe6, 0xc8, 0xc2, 0x07, 0x5a, 0x0e, 0x10, 0x0f, 0xa1, 0x95, 0x4d, 0x27, 0xf3,
	0xdf, 0x64, 0x59, 0xd6, 0x39, 0x64, 0xd3, 0x49, 0xd9, 0x03, 0xf6, 0x60, 0xb5, 0x2c, 0xc0, 0xce,
	0xca, 0xa7, 0x08, 0x3f, 0x5f, 0x72, 0x78, 0xa5, 0xa8, 0x2f, 0xf5, 0x3e, 0x34, 0xe7, 0x0f, 0x59,
	0x1c, 0x79, 0x1f, 0x3f, 0x87, 0x3b, 0x17, 0xe4, 0xab, 0xe8, 0x99, 0x2f, 0xb0, 0x25, 0xd2, 0xae,
	0x09, 0x8d, 0x97, 0xc6, 0xbe, 0xf6, 0x4a, 0xa9, 0x08, 0xe1, 0xcb, 0xa1, 0x66, 0x2a, 0x55, 0x31,
	0x30, 0xe8, 0xa3, 0x17, 0x3a, 0x36, 0xf5, 0x91, 0x52, 0xeb, 0xaf, 0xbc, 0x6e, 0x88, 0xc9, 0x37,
	0x9b, 0x2c, 0xcb, 0x59, 0x7c, 0xfb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x2d, 0x8b, 0xde,
	0xa1, 0x0b, 0x00, 0x00,
}
