// Copyright (c) 2016-present, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree. An additional grant
// of patent rights can be found in the PATENTS file in the same directory.
syntax = "proto3";

package magma.migration.cellular;
option go_package = "types";

message CellularGatewayConfig {
    GatewayRANConfig ran = 1;
    GatewayEPCConfig epc = 2;
    GatewayNonEPSConfig non_eps_service = 3;
    repeated string attached_enodeb_serials = 4;
}

message GatewayRANConfig {
    int32 pci = 1;
    bool transmit_enabled = 2;
}

message GatewayEPCConfig {
    bool nat_enabled = 1;
    string ip_block = 2;
}

message GatewayNonEPSConfig {
    enum NonEPSServiceControl {
        NON_EPS_SERVICE_CONTROL_OFF = 0;
        NON_EPS_SERVICE_CONTROL_CSFB_SMS = 1;
        NON_EPS_SERVICE_CONTROL_SMS = 2;
    }

    enum CSFBRat {
        CSFBRAT_2G = 0;
        CSFBRAT_3G = 1;
    }
    string csfb_mcc = 1;
    string csfb_mnc = 2;
    int32 lac = 3;
    CSFBRat csfb_rat = 4;
    repeated int32 arfcn_2g = 5;
    NonEPSServiceControl non_eps_service_control = 6;
}

message CellularNetworkConfig {
    NetworkRANConfig ran = 1;
    NetworkEPCConfig epc = 2;
    string feg_network_id = 3;
}

message NetworkRANConfig {
    int32 earfcndl = 1;
    int32 bandwidth_mhz = 2;
    int32 subframe_assignment = 3;
    int32 special_subframe_pattern = 5;
    TDDConfig tdd_config = 6;
    FDDConfig fdd_config = 7;
    message FDDConfig {
        int32 earfcndl = 1;
        int32 earfcnul = 2;
    }
    message TDDConfig {
        int32 earfcndl = 1;
        int32 subframe_assignment = 2;
        int32 special_subframe_pattern = 3;
    }

}

message NetworkEPCConfig {
    enum NetworkServices {
        METERING = 0;
        DPI = 1;
        ENFORCEMENT = 2;
    }

    string mcc = 1;
    string mnc = 2;
    int32 tac = 3;
    bytes lte_auth_op = 4;
    bytes lte_auth_amf = 5;

    message SubscriptionProfile {
        uint64 max_ul_bit_rate = 1;
        uint64 max_dl_bit_rate = 2;
    }
    map<string, SubscriptionProfile> sub_profiles = 6;
    string default_rule_id = 7;
    bool relay_enabled = 8;
    repeated NetworkServices network_services = 9;
    bool cloud_subscriberdb_enabled = 10;
}

message CellularEnodebConfig {
    int32 earfcndl = 1;
    int32 subframe_assignment = 2;
    int32 special_subframe_pattern = 3;
    int32 pci = 4;
    bool transmit_enabled = 5;
    string device_class = 6;
    int32 cell_id = 7;
    int32 bandwidth_mhz = 8;
    int32 tac = 9;
}
