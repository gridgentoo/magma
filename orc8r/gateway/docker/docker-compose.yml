version: "3.7"

# Standard logging for each service
x-logging: &logging_anchor
  driver: "json-file"
  options:
    max-size: "10mb"
    max-file: "10"

# Standard volumes plus the snowflake
x-snowflake-volumes: &snowflake_volumes
  - ${ROOTCA_PATH}:/var/opt/magma/certs/rootCA.pem
  - ${CONTROL_PROXY_PATH}:/etc/magma/control_proxy.yml
  - ${CERTS_VOLUME}:/var/opt/magma/certs
  - ${CONFIGS_VOLUME}:/var/opt/magma/configs
  - ${SNOWFLAKE_PATH}:/etc/snowflake

# Use generic python anchor to avoid repetition for python services
x-pyservice: &pyservice
  image: ${DOCKER_REGISTRY}gateway_python:${IMAGE_VERSION}
  volumes: *snowflake_volumes
  logging: *logging_anchor
  restart: always
  network_mode: host

services:
  magmad:
    <<: *pyservice
    container_name: magmad
    volumes:
      - ${ROOTCA_PATH}:/var/opt/magma/certs/rootCA.pem
      - ${CONTROL_PROXY_PATH}:/etc/magma/control_proxy.yml
      - ${CERTS_VOLUME}:/var/opt/magma/certs
      - ${CONFIGS_VOLUME}:/var/opt/magma/configs
      - ${SNOWFLAKE_PATH}:/etc/snowflake
      - /var/run/docker.sock:/var/run/docker.sock
    command: python3 -m magma.magmad.main

  control_proxy:
    <<: *pyservice
    container_name: control_proxy
    volumes: *snowflake_volumes
    environment:
      DOCKER_NETWORK_MODE: 1
    command: >
      /bin/bash -c "/usr/local/bin/generate_nghttpx_config.py &&
             /usr/bin/env nghttpx --conf /var/opt/magma/tmp/nghttpx.conf /var/opt/magma/certs/controller.key /var/opt/magma/certs/controller.crt"

volumes:
  gwcerts:
  gwconfigs:
