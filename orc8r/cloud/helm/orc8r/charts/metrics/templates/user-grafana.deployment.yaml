{{/*
Copyright (c) 2018-present, Facebook, Inc.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree. An additional grant
of patent rights can be found in the PATENTS file in the same directory.
*/}}
{{- if .Values.userGrafana.create }}
{{- $serviceName := print .Release.Name "-user-grafana" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
    app.kubernetes.io/component: user-grafana
{{ include "metrics.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.userGrafana.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: user-grafana
{{ include "selector-labels" . | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: user-grafana
{{ include "selector-labels" . | indent 8 }}
    spec:
      {{- with .Values.userGrafana.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.userGrafana.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.userGrafana.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | trimSuffix "\n" | indent 8 }}
      {{- end }}

      initContainers:
        - name: volume-mount
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /grafanaData"]
          volumeMounts:
            - name: grafana-data
              mountPath: /grafanaData

      containers:
        - name: "user-grafana"
          image: {{ required "userGrafana.image.respository must be provided" .Values.userGrafana.image.repository }}:{{ .Values.userGrafana.image.tag }}
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - containerPort: 3000

          volumeMounts:
            - name: config
              mountPath: /etc/grafana
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: datasources
              mountPath: /etc/grafana/provisiong/datasources/
            - name: dashboardproviders
              mountPath: /etc/grafana/provisioning/dashboards/
            - name: grafana-data
              mountPath: /var/lib/grafana

          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 30

          resources:
{{ toYaml .Values.userGrafana.resources | indent 12 }}

      volumes:
        - name: "config"
          configMap:
            name: grafana-config-file
        - name: "datasources"
{{ toYaml .Values.userGrafana.volumes.datasources | indent 10 }}
        - name: "dashboardproviders"
{{ toYaml .Values.userGrafana.volumes.dashboardproviders | indent 10 }}
        - name: "dashboards"
{{ toYaml .Values.userGrafana.volumes.dashboards | indent 10 }}
        - name: "grafana-data"
{{ toYaml .Values.userGrafana.volumes.grafanaData | indent 10 }}


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config-file
data:
  grafana.ini: |
    [users]
    allow_sign_up = false
    auto_assign_org = false

    [auth.proxy]
    enabled = true
    header_name = X-WEBAUTH-USER
    header_property = username
    auto_sign_up = false

    [server]
    root_url = {{ .Values.userGrafana.rootURL }}
{{- end}}
