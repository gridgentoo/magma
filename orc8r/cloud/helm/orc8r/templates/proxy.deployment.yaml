{{/*
Copyright (c) 2018-present, Facebook, Inc.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree. An additional grant
of patent rights can be found in the PATENTS file in the same directory.
*/}}
{{- $serviceName := print .Release.Name "-proxy" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
    app.kubernetes.io/component: proxy
{{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.proxy.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: proxy
{{ include "selector-labels" . | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: proxy
{{ include "selector-labels" . | indent 8 }}
    spec:
      {{- with .Values.proxy.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.proxy.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.proxy.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | trimSuffix "\n" | indent 8 }}
      {{- end }}
      volumes:
        - name: certs
          secret:
            secretName: {{ required "secret.certs must be provided" .Values.secret.certs }}
        - name: envdir
          secret:
            secretName: {{ required "secret.envdir must be provided" .Values.secret.envdir }}
      containers:
        - name: {{ $serviceName }}
          image: {{ required "proxy.image.repository must be provided" .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
          volumeMounts:
            {{- range tuple "certs" "envdir" }}
            - name: {{ . }}
              mountPath: /var/opt/magma/{{ . }}
              readOnly: true
            {{- end }}
          ports:
            - name: clientcert
              containerPort: {{ .Values.proxy.service.port.clientcert.targetPort }}
            - name: open
              containerPort: {{ .Values.proxy.service.port.open.targetPort }}
          env:
            - name: PROXY_BACKENDS
              value: {{ print .Release.Name "-controller" | quote }}
            - name: CONTROLLER_HOSTNAME
              value: {{ required "proxy.spec.hostname must be provided" .Values.proxy.spec.hostname | quote }}
            - name: HTTP_PROXY_HOSTNAME
              value: {{ .Values.proxy.spec.http_proxy_hostname | quote }}
            - name: HTTP_PROXY_BACKEND
              value: {{ .Values.proxy.spec.http_proxy_backend | quote }}
            - name: HTTP_PROXY_DOCKER_HOSTNAME
              value: {{ .Values.proxy.spec.http_proxy_docker_hostname | quote }}
            - name: HTTP_PROXY_GITHUB_HOSTNAME
              value: {{ .Values.proxy.spec.http_proxy_github_hostname | quote }}
            # Hostname override for metricsd
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          livenessProbe:
            tcpSocket:
              port: clientcert
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: clientcert
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{ toYaml .Values.proxy.resources | indent 12 }}
