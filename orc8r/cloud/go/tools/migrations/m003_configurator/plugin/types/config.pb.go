// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OldMagmadGatewayConfig struct {
	CheckinInterval         int32           `protobuf:"varint,1,opt,name=checkin_interval,json=checkinInterval,proto3" json:"checkin_interval,omitempty"`
	CheckinTimeout          int32           `protobuf:"varint,2,opt,name=checkin_timeout,json=checkinTimeout,proto3" json:"checkin_timeout,omitempty"`
	AutoupgradeEnabled      bool            `protobuf:"varint,3,opt,name=autoupgrade_enabled,json=autoupgradeEnabled,proto3" json:"autoupgrade_enabled,omitempty"`
	AutoupgradePollInterval int32           `protobuf:"varint,4,opt,name=autoupgrade_poll_interval,json=autoupgradePollInterval,proto3" json:"autoupgrade_poll_interval,omitempty"`
	Tier                    string          `protobuf:"bytes,5,opt,name=tier,proto3" json:"tier,omitempty"`
	FeatureFlags            map[string]bool `protobuf:"bytes,6,rep,name=feature_flags,json=featureFlags,proto3" json:"feature_flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	DynamicServices         []string        `protobuf:"bytes,7,rep,name=dynamic_services,json=dynamicServices,proto3" json:"dynamic_services,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}        `json:"-"`
	XXX_unrecognized        []byte          `json:"-"`
	XXX_sizecache           int32           `json:"-"`
}

func (m *OldMagmadGatewayConfig) Reset()         { *m = OldMagmadGatewayConfig{} }
func (m *OldMagmadGatewayConfig) String() string { return proto.CompactTextString(m) }
func (*OldMagmadGatewayConfig) ProtoMessage()    {}
func (*OldMagmadGatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_19768edc94ddde03, []int{0}
}
func (m *OldMagmadGatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldMagmadGatewayConfig.Unmarshal(m, b)
}
func (m *OldMagmadGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldMagmadGatewayConfig.Marshal(b, m, deterministic)
}
func (dst *OldMagmadGatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldMagmadGatewayConfig.Merge(dst, src)
}
func (m *OldMagmadGatewayConfig) XXX_Size() int {
	return xxx_messageInfo_OldMagmadGatewayConfig.Size(m)
}
func (m *OldMagmadGatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OldMagmadGatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OldMagmadGatewayConfig proto.InternalMessageInfo

func (m *OldMagmadGatewayConfig) GetCheckinInterval() int32 {
	if m != nil {
		return m.CheckinInterval
	}
	return 0
}

func (m *OldMagmadGatewayConfig) GetCheckinTimeout() int32 {
	if m != nil {
		return m.CheckinTimeout
	}
	return 0
}

func (m *OldMagmadGatewayConfig) GetAutoupgradeEnabled() bool {
	if m != nil {
		return m.AutoupgradeEnabled
	}
	return false
}

func (m *OldMagmadGatewayConfig) GetAutoupgradePollInterval() int32 {
	if m != nil {
		return m.AutoupgradePollInterval
	}
	return 0
}

func (m *OldMagmadGatewayConfig) GetTier() string {
	if m != nil {
		return m.Tier
	}
	return ""
}

func (m *OldMagmadGatewayConfig) GetFeatureFlags() map[string]bool {
	if m != nil {
		return m.FeatureFlags
	}
	return nil
}

func (m *OldMagmadGatewayConfig) GetDynamicServices() []string {
	if m != nil {
		return m.DynamicServices
	}
	return nil
}

func init() {
	proto.RegisterType((*OldMagmadGatewayConfig)(nil), "magma.migration.orc8r.OldMagmadGatewayConfig")
	proto.RegisterMapType((map[string]bool)(nil), "magma.migration.orc8r.OldMagmadGatewayConfig.FeatureFlagsEntry")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_19768edc94ddde03) }

var fileDescriptor_config_19768edc94ddde03 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4f, 0xe3, 0x30,
	0x10, 0xc5, 0x95, 0xa6, 0xe9, 0x1f, 0x6f, 0x77, 0xdb, 0xf5, 0x2e, 0x10, 0x38, 0x45, 0x5c, 0x08,
	0x97, 0x20, 0xc1, 0xa5, 0xea, 0xa5, 0x12, 0xa8, 0x45, 0x1c, 0x10, 0xc8, 0x70, 0xe2, 0x12, 0xb9,
	0xc9, 0x24, 0x58, 0x75, 0xec, 0xc8, 0x71, 0x8a, 0xf2, 0xe9, 0xf8, 0x6a, 0x28, 0x4e, 0x80, 0x48,
	0xf4, 0x36, 0xfe, 0xbd, 0x99, 0xe7, 0xd1, 0x1b, 0x34, 0x89, 0xa4, 0x48, 0x58, 0x1a, 0xe4, 0x4a,
	0x6a, 0x89, 0x0f, 0x32, 0x9a, 0x66, 0x34, 0xc8, 0x58, 0xaa, 0xa8, 0x66, 0x52, 0x04, 0x52, 0x45,
	0x73, 0x75, 0xfa, 0x6e, 0xa3, 0xc3, 0x07, 0x1e, 0xdf, 0xd7, 0x62, 0x7c, 0x4b, 0x35, 0xbc, 0xd1,
	0xea, 0xc6, 0xcc, 0xe1, 0x73, 0x34, 0x8b, 0x5e, 0x21, 0xda, 0x32, 0x11, 0x32, 0xa1, 0x41, 0xed,
	0x28, 0x77, 0x2d, 0xcf, 0xf2, 0x1d, 0x32, 0x6d, 0xf9, 0x5d, 0x8b, 0xf1, 0x19, 0xfa, 0x44, 0xa1,
	0x66, 0x19, 0xc8, 0x52, 0xbb, 0x3d, 0xd3, 0xf9, 0xa7, 0xc5, 0xcf, 0x0d, 0xc5, 0x17, 0xe8, 0x1f,
	0x2d, 0xb5, 0x2c, 0xf3, 0x54, 0xd1, 0x18, 0x42, 0x10, 0x74, 0xc3, 0x21, 0x76, 0x6d, 0xcf, 0xf2,
	0x47, 0x04, 0x77, 0xa4, 0x55, 0xa3, 0xe0, 0x05, 0x3a, 0xee, 0x0e, 0xe4, 0x92, 0xf3, 0xef, 0x6d,
	0xfa, 0xe6, 0x8f, 0xa3, 0x4e, 0xc3, 0xa3, 0xe4, 0xfc, 0x6b, 0x2b, 0x8c, 0xfa, 0x9a, 0x81, 0x72,
	0x1d, 0xcf, 0xf2, 0xc7, 0xc4, 0xd4, 0x38, 0x46, 0xbf, 0x13, 0xa0, 0xba, 0x54, 0x10, 0x26, 0x9c,
	0xa6, 0x85, 0x3b, 0xf0, 0x6c, 0xff, 0xd7, 0xe5, 0x32, 0xd8, 0x1b, 0x4f, 0xb0, 0x3f, 0x9a, 0x60,
	0xdd, 0x58, 0xac, 0x6b, 0x87, 0x95, 0xd0, 0xaa, 0x22, 0x93, 0xa4, 0x83, 0xea, 0xe8, 0xe2, 0x4a,
	0xd0, 0x8c, 0x45, 0x61, 0x01, 0x6a, 0xc7, 0x22, 0x28, 0xdc, 0xa1, 0x67, 0xfb, 0x63, 0x32, 0x6d,
	0xf9, 0x53, 0x8b, 0x4f, 0x96, 0xe8, 0xef, 0x0f, 0x37, 0x3c, 0x43, 0xf6, 0x16, 0x2a, 0x93, 0xf6,
	0x98, 0xd4, 0x25, 0xfe, 0x8f, 0x9c, 0x1d, 0xe5, 0x25, 0x98, 0x5c, 0x47, 0xa4, 0x79, 0x2c, 0x7a,
	0x73, 0xeb, 0x7a, 0xf8, 0xe2, 0xe8, 0x2a, 0x87, 0x62, 0x33, 0x30, 0x87, 0xbe, 0xfa, 0x08, 0x00,
	0x00, 0xff, 0xff, 0x41, 0x01, 0xb4, 0xc9, 0xf8, 0x01, 0x00, 0x00,
}
