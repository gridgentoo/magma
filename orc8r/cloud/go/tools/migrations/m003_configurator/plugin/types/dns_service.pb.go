/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns_service.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NetworkDNSConfig struct {
	EnableCaching        bool                            `protobuf:"varint,1,opt,name=EnableCaching,proto3" json:"EnableCaching,omitempty"`
	LocalTTL             int32                           `protobuf:"varint,2,opt,name=LocalTTL,proto3" json:"LocalTTL,omitempty"`
	Records              []*NetworkDNSConfigRecordsItems `protobuf:"bytes,3,rep,name=Records,proto3" json:"Records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *NetworkDNSConfig) Reset()         { *m = NetworkDNSConfig{} }
func (m *NetworkDNSConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkDNSConfig) ProtoMessage()    {}
func (*NetworkDNSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_service_5cc92fc6c809cff9, []int{0}
}
func (m *NetworkDNSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkDNSConfig.Unmarshal(m, b)
}
func (m *NetworkDNSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkDNSConfig.Marshal(b, m, deterministic)
}
func (dst *NetworkDNSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDNSConfig.Merge(dst, src)
}
func (m *NetworkDNSConfig) XXX_Size() int {
	return xxx_messageInfo_NetworkDNSConfig.Size(m)
}
func (m *NetworkDNSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDNSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDNSConfig proto.InternalMessageInfo

func (m *NetworkDNSConfig) GetEnableCaching() bool {
	if m != nil {
		return m.EnableCaching
	}
	return false
}

func (m *NetworkDNSConfig) GetLocalTTL() int32 {
	if m != nil {
		return m.LocalTTL
	}
	return 0
}

func (m *NetworkDNSConfig) GetRecords() []*NetworkDNSConfigRecordsItems {
	if m != nil {
		return m.Records
	}
	return nil
}

type NetworkDNSConfigRecordsItems struct {
	ARecord              []string `protobuf:"bytes,1,rep,name=ARecord,proto3" json:"ARecord,omitempty"`
	AaaaRecord           []string `protobuf:"bytes,2,rep,name=AaaaRecord,proto3" json:"AaaaRecord,omitempty"`
	CnameRecord          []string `protobuf:"bytes,3,rep,name=CnameRecord,proto3" json:"CnameRecord,omitempty"`
	Domain               string   `protobuf:"bytes,4,opt,name=Domain,proto3" json:"Domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkDNSConfigRecordsItems) Reset()         { *m = NetworkDNSConfigRecordsItems{} }
func (m *NetworkDNSConfigRecordsItems) String() string { return proto.CompactTextString(m) }
func (*NetworkDNSConfigRecordsItems) ProtoMessage()    {}
func (*NetworkDNSConfigRecordsItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_service_5cc92fc6c809cff9, []int{1}
}
func (m *NetworkDNSConfigRecordsItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkDNSConfigRecordsItems.Unmarshal(m, b)
}
func (m *NetworkDNSConfigRecordsItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkDNSConfigRecordsItems.Marshal(b, m, deterministic)
}
func (dst *NetworkDNSConfigRecordsItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDNSConfigRecordsItems.Merge(dst, src)
}
func (m *NetworkDNSConfigRecordsItems) XXX_Size() int {
	return xxx_messageInfo_NetworkDNSConfigRecordsItems.Size(m)
}
func (m *NetworkDNSConfigRecordsItems) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDNSConfigRecordsItems.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDNSConfigRecordsItems proto.InternalMessageInfo

func (m *NetworkDNSConfigRecordsItems) GetARecord() []string {
	if m != nil {
		return m.ARecord
	}
	return nil
}

func (m *NetworkDNSConfigRecordsItems) GetAaaaRecord() []string {
	if m != nil {
		return m.AaaaRecord
	}
	return nil
}

func (m *NetworkDNSConfigRecordsItems) GetCnameRecord() []string {
	if m != nil {
		return m.CnameRecord
	}
	return nil
}

func (m *NetworkDNSConfigRecordsItems) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func init() {
	proto.RegisterType((*NetworkDNSConfig)(nil), "magma.orc8r.dnsd.NewNetworkDNSConfig")
	proto.RegisterType((*NetworkDNSConfigRecordsItems)(nil), "magma.orc8r.dnsd.NetworkDNSConfigRecordsItems")
}

func init() { proto.RegisterFile("dns_service.proto", fileDescriptor_dns_service_5cc92fc6c809cff9) }

var fileDescriptor_dns_service_5cc92fc6c809cff9 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x49, 0x57, 0xdb, 0xed, 0x14, 0xa1, 0xe6, 0x20, 0x41, 0x44, 0x42, 0xf1, 0x90, 0x53,
	0x0e, 0x7a, 0xf1, 0x5a, 0xb7, 0x82, 0x42, 0xe9, 0x21, 0xf6, 0xe4, 0x45, 0xa6, 0xd9, 0xb8, 0x2e,
	0x36, 0x19, 0x49, 0x16, 0xfd, 0x1f, 0xfe, 0x00, 0x7f, 0xab, 0xb0, 0xdd, 0x4a, 0xed, 0xa1, 0xa7,
	0xe1, 0x7d, 0xef, 0x3d, 0x1e, 0x0c, 0x9c, 0x96, 0x21, 0xbd, 0x24, 0x17, 0x3f, 0x6b, 0xeb, 0xf4,
	0x47, 0xa4, 0x86, 0xf8, 0xd8, 0x63, 0xe5, 0x51, 0x53, 0xb4, 0xb7, 0x51, 0x97, 0x21, 0x95, 0x93,
	0x1f, 0x06, 0xe3, 0x85, 0x6b, 0xbe, 0x28, 0xbe, 0xcf, 0x16, 0x4f, 0x05, 0x85, 0xd7, 0xba, 0xe2,
	0x57, 0x70, 0x72, 0x1f, 0x70, 0xb5, 0x76, 0x05, 0xda, 0xb7, 0x3a, 0x54, 0x82, 0x49, 0xa6, 0x72,
	0xf3, 0x1f, 0xf2, 0x73, 0xc8, 0xe7, 0x64, 0x71, 0xbd, 0x5c, 0xce, 0x45, 0x4f, 0x32, 0x75, 0x6c,
	0xfe, 0x34, 0x7f, 0x80, 0x81, 0x71, 0x96, 0x62, 0x99, 0x44, 0x26, 0x33, 0x35, 0xba, 0xd6, 0x7a,
	0x7f, 0x5a, 0xef, 0xcf, 0x76, 0x85, 0xc7, 0xc6, 0xf9, 0x64, 0xb6, 0xf5, 0xc9, 0x37, 0x83, 0x8b,
	0x43, 0x49, 0x2e, 0x60, 0x30, 0xdd, 0x00, 0xc1, 0x64, 0xa6, 0x86, 0x66, 0x2b, 0xf9, 0x25, 0xc0,
	0x14, 0x11, 0x3b, 0xb3, 0xd7, 0x9a, 0x3b, 0x84, 0x4b, 0x18, 0x15, 0x01, 0xbd, 0xeb, 0x02, 0x59,
	0x1b, 0xd8, 0x45, 0xfc, 0x0c, 0xfa, 0x33, 0xf2, 0x58, 0x07, 0x71, 0x24, 0x99, 0x1a, 0x9a, 0x4e,
	0xdd, 0xe5, 0xcf, 0xfd, 0xf6, 0xa1, 0x69, 0xb5, 0xb9, 0x37, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x2c, 0xcb, 0xd2, 0x1a, 0x6d, 0x01, 0x00, 0x00,
}
