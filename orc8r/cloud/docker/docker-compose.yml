version: "3.7"

services:
  postgres:
    image: postgres
    ports:
      - 5432:5432/tcp
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: magma_dev
      POSTGRES_PASSWORD: magma_dev
      POSTGRES_DB: magma_dev
    restart: always

  maria:
    image: mariadb:10.2
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: magma
      MYSQL_DATABASE: magma_dev
      MYSQL_USER: magma_dev
      MYSQL_PASSWORD: magma_dev
      SQL_MODE: ANSI_QUOTES
    command: mysqld --sql_mode="ANSI_QUOTES"
    restart: always

  controller:
    volumes:
      - $PWD/../../../.cache/test_certs:/var/opt/magma/certs
    environment:
      TEST_MODE: "1"  # Used to run dev scripts on startup
      SQL_DRIVER: postgres
      DATABASE_SOURCE: "dbname=magma_dev user=magma_dev password=magma_dev host=postgres sslmode=disable"
      SQL_DIALECT: psql

      # To use MariaDB, use these connection parameters instead:
      # SQL_DRIVER: mysql
      # DATABASE_SOURCE: "magma_dev:magma_dev@(maria)/magma_dev"
      # SQL_DIALECT: maria
    links:
      - fluentd
    depends_on:
      - postgres
      - fluentd
      # - maria
    command: ["/bin/sh", "-c", "/usr/local/bin/wait-for-it.sh -s -t 30 postgres:5432 && /usr/bin/supervisord"]
    # command: ["/bin/sh", "-c", "/usr/local/bin/wait-for-it.sh -s -t 30 maria:[port] && /usr/bin/supervisord"]
    restart: always

    # If you want to use log aggregation on a Mac or Windows host, uncomment
    # the below block as-is
    # KP: host.docker.internal does not resolve to anything in Docker for linux
    # See https://github.com/docker/for-linux/issues/264 and
    # https://github.com/docker/libnetwork/pull/2348
    # If you're on a Linux host and want to use log aggregation, uncomment the
    # below block and update fluentd-address to ':24225'. You will have to
    # restart the container before it sends logs to fluentd.
    # See https://github.com/moby/moby/issues/1143 for some ideas about
    # connecting the logging driver to your host localhost.
#    logging:
#      driver: fluentd
#      options:
#        fluentd-address: 'host.docker.internal:24225'
#        tag: orc8r.controller
#        fluentd-retry-wait: '1s'
#        fluentd-max-retries: '120'

  proxy:
    ports:
      - 9443:9443/tcp  # API/controller port
      - 9444:9444/tcp  # Bootstrapper port
    volumes:
      - $PWD/../../../.cache/test_certs:/var/opt/magma/certs
    environment:
      CONTROLLER_HOSTNAME: controller.magma.test
      PROXY_BACKENDS: controller  # Uses Docker internal DNS for controller
      # HTTP_PROXY_HOSTNAME: proxy.magma.test
      # HTTP_PROXY_BACKEND: www.magma.test
      HTTP_PROXY_DOCKER_HOSTNAME: docker.io
      HTTP_PROXY_GITHUB_HOSTNAME: github.com
      TEST_MODE: "1"  # Used to run dev scripts on startup
    depends_on:
      - fluentd
    links:
      - fluentd
    restart: always

    # See comment block for the 'controller' service about logging
#    logging:
#      driver: fluentd
#      options:
#        fluentd-address: 'host.docker.internal:24225'
#        tag: orc8r.proxy
#        fluentd-retry-wait: '1s'
#        fluentd-max-retries: '120'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.1
    ports:
      - 5601:5601
    links:
      - elasticsearch

  fluentd:
    build: ./fluentd
    container_name: fluentd
    links:
      - elasticsearch
    # 24224 for TLS secure forwarding, 24225 for unsecured docker logging
    ports:
      - 24224:24224
      - 24224:24224/udp
      - 24225:24225
      - 24225:24225/udp
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - $PWD/../../../.cache/test_certs:/var/opt/magma/certs

volumes:
  pgdata:
  elasticsearch:
  mysql:
