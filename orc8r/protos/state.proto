// Copyright (c) 2016-present, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree. An additional grant
// of patent rights can be found in the PATENTS file in the same directory.
syntax = "proto3";

import "orc8r/protos/common.proto";
import "orc8r/protos/service303.proto";

package magma.orc8r;
option go_package = "magma/orc8r/lib/go/protos";

message StateID {
    string type = 1;
    string deviceID = 2;
}

message GetStatesRequest {
    string networkID = 1;
    repeated StateID ids = 2;

    // typeFilter is an OR of all types specified. The service will return all
    // states matching any of the specified types.
    repeated string typeFilter = 10;

    // idFilter is an OR of all IDs specified. The service will return all
    // states matching any of the specified IDs.
    repeated string idFilter = 11;
}

message GetStatesResponse {
    repeated State states = 1;
}

message ReportStatesRequest {
    repeated State states = 1;
}

message ReportStatesResponse {
    repeated IDAndError unreportedStates = 1;
}

message IDAndError {
    string type = 1;
    string deviceID = 2;
    string error = 3;
}

message DeleteStatesRequest {
    string networkID = 1;
    repeated StateID ids = 2;
}

message SyncStatesRequest {
   repeated IDAndVersion states = 1;
}

message IDAndVersion {
    StateID id = 1;
    uint64 version = 2;
}

message SyncStatesResponse {
    repeated IDAndVersion unsyncedStates = 1;
}

service StateService {
    rpc GetStates (GetStatesRequest) returns (GetStatesResponse) {}
    rpc ReportStates(ReportStatesRequest) returns (ReportStatesResponse) {}
    rpc DeleteStates(DeleteStatesRequest) returns (Void) {}
    rpc SyncStates(SyncStatesRequest) returns (SyncStatesResponse) {}
}
